openapi: 3.0.0
swagger: "2.0"
info:
  description: "API ДБО ФЛ банка ЗЕНИТ"
  version: "1.0"
  title: "ZENIT Online Banking for Private Clients API"
basePath: "/webapi-1.0"
tags:
- name: "account-controller"
  description: "Account Controller"
- name: "badges-controller"
  description: "Badges Controller"
- name: "bank-request-controller"
  description: "Bank Request Controller"
- name: "card-controller"
  description: "Card Controller"
- name: "card-token-controller"
  description: "Card Token Controller"
- name: "client-profile-controller"
  description: "Client Profile Controller"
- name: "credit-controller"
  description: "Credit Controller"
- name: "currency-rates-controller"
  description: "Currency Rates Controller"
- name: "dadata-controller"
  description: "Dadata Controller"
- name: "deposit-controller"
  description: "Deposit Controller"
- name: "fast-payment-controller"
  description: "Fast Payment Controller"
- name: "feedback-controller"
  description: "Feedback Controller"
- name: "history-controller"
  description: "History Controller"
- name: "invoice-controller"
  description: "Invoice Controller"
- name: "loan-application-controller"
  description: "Loan Application Controller"
- name: "operation-payment-bank-controller"
  description: "Operation Payment Bank Controller"
- name: "p-2p-3ds-payments-controller"
  description: "P 2p 3ds Payments Controller"
- name: "paycheck-controller"
  description: "Paycheck Controller"
- name: "payment-catalog-controller"
  description: "Payment Catalog Controller"
- name: "payment-template-controller"
  description: "Payment Template Controller"
- name: "payments-bank-controller"
  description: "Payments Bank Controller"
- name: "payments-commission-controller"
  description: "Payments Commission Controller"
- name: "payments-common-controller"
  description: "Payments Common Controller"
- name: "permissions-controller"
  description: "Разрешения"
- name: "previous-auth-controller"
  description: "Previous Auth Controller"
- name: "product-alias-controller"
  description: "Product Alias Controller"
- name: "product-configuration-controller"
  description: "Product Configuration Controller"
- name: "products-shop-controller"
  description: "Витрина продуктов"
- name: "region-controller"
  description: "Регионы"
- name: "settings-controller"
  description: "Settings Controller"
- name: "shop-window-controller"
  description: "Shop Window Controller"
- name: "subscription-controller"
  description: "Subscription Controller"
- name: "subscription-provider-controller"
  description: "Поставщики для подписок"
schemes:
- "https"
paths:
  /clients/{clientId}/accounts/banksInfo{?bic,currCode}:
    get:
      tags:
      - "account-controller"
      summary: "Получение информации о банках для реквизитов для счетов в иностран\
        ной валюте"
      operationId: "getBanksInfoForCurrencyAccount"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "currCode"
        in: "query"
        description: "Код валюты счета"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "USD"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«BanksInfoDetailsDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«BanksInfoDetailsDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/accounts/{number}/receipt?target=email{&bic}:
    post:
      tags:
      - "account-controller"
      summary: "Передача информации по счёту в pdf по email"
      operationId: "sendEmailAccountDetailsReceipt"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "emailInfo"
        description: "emailInfo"
        required: true
        schema:
          $ref: "#/definitions/EmailInfo"
      - name: "number"
        in: "path"
        description: "Номер счета"
        required: false
        type: "string"
        pattern: "^\\d+$"
        x-example: "40817810240500004685"
      - name: "target"
        in: "query"
        required: true
        type: "string"
        default: "email"
        enum:
        - "email"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/accounts/{number}/receipt{?bic}:
    get:
      tags:
      - "account-controller"
      summary: "Возвращает информацию по счёту в pdf формате"
      operationId: "getAccountDetailsReceiptByOperationId"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер счета"
        required: false
        type: "string"
        pattern: "^\\d+$"
        x-example: "40817810240500004685"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "byte"
          responseSchema:
            type: "string"
            format: "byte"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/accounts/{number}{?bic}:
    get:
      tags:
      - "account-controller"
      summary: "Детали счета"
      operationId: "accountDetails"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер счета"
        required: false
        type: "string"
        pattern: "^\\d+$"
        x-example: "40817810240500004685"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«AccountDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«AccountDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/accounts{?bic}:
    get:
      tags:
      - "account-controller"
      summary: "Список продуктов (счета) клиента в системах Банка"
      operationId: "listAccounts"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«AccountDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«AccountDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "account-controller"
      summary: "Создание счета"
      operationId: "createAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "data"
        description: "data"
        required: true
        schema:
          $ref: "#/definitions/OpenAccountDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«OpenProductResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«OpenProductResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/badges{?bic,type}:
    get:
      tags:
      - "badges-controller"
      summary: "Возвращает массив новых уведомлений"
      operationId: "getAllBadges"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "type"
        in: "query"
        description: "Тип сущностей, в которых необходимо получить количество непр\
          осмотренных уведомлений"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "GIBDD"
        enum:
        - "GIBDD"
        - "TAX"
        - "HCS"
        - "APPCRED"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«BadgeInfoDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«BadgeInfoDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/card/request?target=email{&bic,type}:
    post:
      tags:
      - "bank-request-controller"
      summary: "Заявка на выпуск карты"
      operationId: "cardRequest"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "bankRequest"
        description: "bankRequest"
        required: true
        schema:
          $ref: "#/definitions/BankRequestCardDto"
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "target"
        in: "query"
        required: true
        type: "string"
        default: "email"
        enum:
        - "email"
      - name: "type"
        in: "query"
        description: "Тип карты (дебитовая, кредитная)"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "debit"
        enum:
        - "debit"
        - "credit"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cardTokens/{cardTokenId}{?bic}:
    put:
      tags:
      - "card-token-controller"
      summary: "Обновить привязанную карту клиента"
      operationId: "updateCardToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "cardTokenId"
        in: "path"
        description: "cardTokenId"
        required: true
        type: "string"
      - in: "body"
        name: "cardTokenUpdate"
        description: "cardTokenUpdate"
        required: true
        schema:
          $ref: "#/definitions/CardTokenDto"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CardTokenDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CardTokenDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "card-token-controller"
      summary: "Удалить привязанную карту клиента"
      operationId: "deleteCardToken"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "cardTokenId"
        in: "path"
        description: "cardTokenId"
        required: true
        type: "string"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CardTokenDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CardTokenDto»"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      deprecated: false
  /clients/{clientId}/cardTokens{?bic,updateClientCardTokens}:
    post:
      tags:
      - "card-token-controller"
      summary: "Обновить токены карт клиента"
      operationId: "updateClientCardTokens"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - name: "updateClientCardTokens"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cardTokens{?bic}:
    get:
      tags:
      - "card-token-controller"
      summary: "Список привязанных карт клиента"
      operationId: "listCardTokens"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«CardTokenDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«CardTokenDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "card-token-controller"
      summary: "Привязать карту клиента"
      operationId: "addCardToken"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - in: "body"
        name: "cardTokenCreateRequest"
        description: "cardTokenCreateRequest"
        required: true
        schema:
          $ref: "#/definitions/CardTokenCreateRequest"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CardTokenDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CardTokenDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards/notifications{?bic}:
    get:
      tags:
      - "card-controller"
      summary: "Получить параметры смс-уведомления по всем картам клиента"
      operationId: "getAllCardsNotification"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«CardNotificationsDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«CardNotificationsDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards/{number}/block{?bic,validTo}:
    post:
      tags:
      - "card-controller"
      summary: "Блокировка карты"
      operationId: "cardBlock"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "details"
        description: "details"
        required: true
        schema:
          $ref: "#/definitions/CardBlockRequestDetailsDto"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      - name: "validTo"
        in: "query"
        description: "Срок действия карты"
        required: false
        type: "string"
        pattern: "^\\d{2}/\\d{2}$"
        allowEmptyValue: false
        x-example: "11/23"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CardBlockResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CardBlockResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards/{number}/credCardInfo{?bic}:
    get:
      tags:
      - "card-controller"
      summary: "Информация по кредитным картам"
      operationId: "credCardInfo"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CredCardInfoDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CredCardInfoDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards/{number}/limits/{limitCode}{?bic,validTo}:
    put:
      tags:
      - "card-controller"
      summary: "Обновление лимита"
      operationId: "changeCardLimits"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "limitCode"
        in: "path"
        description: "limitCode"
        required: true
        type: "string"
      - in: "body"
        name: "limitEntity"
        description: "limitEntity"
        required: true
        schema:
          $ref: "#/definitions/CardLimitsDto"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      - name: "validTo"
        in: "query"
        description: "Срок действия карты"
        required: false
        type: "string"
        pattern: "^\\d{2}/\\d{2}$"
        allowEmptyValue: false
        x-example: "11/23"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CardLimitChangeResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CardLimitChangeResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards/{number}/limits{?bic,validTo}:
    get:
      tags:
      - "card-controller"
      summary: "Лимиты карты"
      operationId: "cardLimits"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      - name: "validTo"
        in: "query"
        description: "Срок действия карты"
        required: false
        type: "string"
        pattern: "^\\d{2}/\\d{2}$"
        allowEmptyValue: false
        x-example: "11/23"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«CardLimitsDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«CardLimitsDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards/{number}/notifications{?bic}:
    post:
      tags:
      - "card-controller"
      summary: "Установить параметры смс-уведомления по карте"
      operationId: "setCardNotification"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "notificationRequest"
        description: "notificationRequest"
        required: true
        schema:
          $ref: "#/definitions/CardNotificationRequest"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      responses:
        201:
          description: "Created"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards/{number}/pin{?bic}:
    post:
      tags:
      - "card-controller"
      summary: "Установка PIN карты"
      operationId: "setPin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      - in: "body"
        name: "pinEntity"
        description: "pinEntity"
        required: true
        schema:
          $ref: "#/definitions/SetPinDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    put:
      tags:
      - "card-controller"
      summary: "Смена ПИН-кода карты"
      operationId: "changePin"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      - in: "body"
        name: "requestDetails"
        description: "requestDetails"
        required: true
        schema:
          $ref: "#/definitions/ChangePinRequestDetailsDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«ChangePinResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«ChangePinResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /clients/{clientId}/cards/{number}/receipt?target=email{&bic,validTo}:
    post:
      tags:
      - "card-controller"
      summary: "Передача информации по карте в pdf по email"
      operationId: "sendEmailCardDetailsReceipt"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "emailInfo"
        description: "emailInfo"
        required: true
        schema:
          $ref: "#/definitions/EmailInfo"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      - name: "target"
        in: "query"
        required: true
        type: "string"
        default: "email"
        enum:
        - "email"
      - name: "validTo"
        in: "query"
        description: "Срок действия карты"
        required: false
        type: "string"
        pattern: "^\\d{2}/\\d{2}$"
        allowEmptyValue: false
        x-example: "11/23"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards/{number}/receipt{?bic,validTo}:
    get:
      tags:
      - "card-controller"
      summary: "Возвращает информацию по карте в pdf формате"
      operationId: "getCardDetailsReceiptByOperationId"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      - name: "validTo"
        in: "query"
        description: "Срок действия карты"
        required: false
        type: "string"
        pattern: "^\\d{2}/\\d{2}$"
        allowEmptyValue: false
        x-example: "11/23"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "byte"
          responseSchema:
            type: "string"
            format: "byte"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards/{number}{?bic,validTo}:
    get:
      tags:
      - "card-controller"
      summary: "Детали карты"
      operationId: "cardDetails"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер карты"
        required: false
        type: "string"
        pattern: "^\\d{6}_{6}\\d{4}$"
        x-example: "532461______4575"
      - name: "validTo"
        in: "query"
        description: "Срок действия карты"
        required: false
        type: "string"
        pattern: "^\\d{2}/\\d{2}$"
        allowEmptyValue: false
        x-example: "11/23"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CardDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CardDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/cards{?bic}:
    get:
      tags:
      - "card-controller"
      summary: "Список продуктов (карты) клиента в системах Банка"
      operationId: "listCards"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«CardDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«CardDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/credit/repayment/request?target=email{&bic,type}:
    post:
      tags:
      - "bank-request-controller"
      summary: "Заявка на частичное или полное погашение кредита"
      operationId: "creditRepayment"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "bankRequest"
        description: "bankRequest"
        required: true
        schema:
          $ref: "#/definitions/BankRequestLoanRepaymentDto"
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "target"
        in: "query"
        required: true
        type: "string"
        default: "email"
        enum:
        - "email"
      - name: "type"
        in: "query"
        description: "Тип погашения (частичное, полное)"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "full"
        enum:
        - "partial"
        - "full"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/credit/request?target=email{&bic,type}:
    post:
      tags:
      - "bank-request-controller"
      summary: "Заявка на кредит"
      operationId: "creditRequest"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "bankRequest"
        description: "bankRequest"
        required: true
        schema:
          $ref: "#/definitions/BankRequestCreditDto"
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "target"
        in: "query"
        required: true
        type: "string"
        default: "email"
        enum:
        - "email"
      - name: "type"
        in: "query"
        description: "Тип кредита (наличными, автокредит, ипотека)"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "cash"
        enum:
        - "cash"
        - "auto"
        - "mortgage"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/credits/{creditId}/payment/schedule/receipt?target=email{&bic,openDate}:
    post:
      tags:
      - "credit-controller"
      summary: "Передача плана платежей по кредиту в pdf по email"
      operationId: "paymentScheduleReceipt_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "creditId"
        in: "path"
        description: "идентификатор кредита в АБС"
        required: false
        type: "string"
        x-example: "5167"
      - in: "body"
        name: "emailInfo"
        description: "emailInfo"
        required: true
        schema:
          $ref: "#/definitions/EmailInfo"
      - name: "openDate"
        in: "query"
        description: "дата открытия кредита в формате ISO"
        required: false
        type: "string"
        format: "date"
        allowEmptyValue: false
        x-example: "2017-01-01"
      - name: "target"
        in: "query"
        required: true
        type: "string"
        default: "email"
        enum:
        - "email"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/credits/{creditId}/payment/schedule/receipt{?bic,openDate}:
    get:
      tags:
      - "credit-controller"
      summary: "Возвращает план платежей по кредиту в pdf формате"
      operationId: "paymentScheduleReceipt"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "creditId"
        in: "path"
        description: "идентификатор кредита в АБС"
        required: false
        type: "string"
        x-example: "5167"
      - name: "openDate"
        in: "query"
        description: "дата открытия кредита в формате ISO"
        required: false
        type: "string"
        format: "date"
        allowEmptyValue: false
        x-example: "2017-01-01"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "byte"
          responseSchema:
            type: "string"
            format: "byte"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/credits/{creditId}/payment/schedule{?bic,openDate}:
    get:
      tags:
      - "credit-controller"
      summary: "План платежей по кредиту"
      operationId: "paymentSchedule"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "creditId"
        in: "path"
        description: "идентификатор кредита в АБС"
        required: false
        type: "string"
        x-example: "5167"
      - name: "openDate"
        in: "query"
        description: "дата открытия кредита в формате ISO"
        required: false
        type: "string"
        format: "date"
        allowEmptyValue: false
        x-example: "2017-01-01"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CreditPaymentScheduleDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CreditPaymentScheduleDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/credits/{creditId}/receipt?target=email{&bic,openDate}:
    post:
      tags:
      - "credit-controller"
      summary: "Передача информации по кредиту в pdf по email"
      operationId: "sendEmailCreditDetailsReceipt"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "creditId"
        in: "path"
        description: "идентификатор кредита в АБС"
        required: false
        type: "string"
        x-example: "5167"
      - in: "body"
        name: "emailInfo"
        description: "emailInfo"
        required: true
        schema:
          $ref: "#/definitions/EmailInfo"
      - name: "openDate"
        in: "query"
        description: "дата открытия кредита в формате ISO"
        required: false
        type: "string"
        format: "date"
        allowEmptyValue: false
        x-example: "2017-01-01"
      - name: "target"
        in: "query"
        required: true
        type: "string"
        default: "email"
        enum:
        - "email"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/credits/{creditId}/receipt{?bic,openDate}:
    get:
      tags:
      - "credit-controller"
      summary: "Возвращает информацию по кредиту в pdf формате"
      operationId: "getCreditDetailsReceipt"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "creditId"
        in: "path"
        description: "идентификатор кредита в АБС"
        required: false
        type: "string"
        x-example: "5167"
      - name: "openDate"
        in: "query"
        description: "дата открытия кредита в формате ISO"
        required: false
        type: "string"
        format: "date"
        allowEmptyValue: false
        x-example: "2017-01-01"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "byte"
          responseSchema:
            type: "string"
            format: "byte"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/credits/{creditId}{?bic,openDate}:
    get:
      tags:
      - "credit-controller"
      summary: "Детали кредита"
      operationId: "creditDetails"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "creditId"
        in: "path"
        description: "идентификатор кредита в АБС"
        required: false
        type: "string"
        x-example: "5167"
      - name: "openDate"
        in: "query"
        description: "дата открытия кредита в формате ISO"
        required: false
        type: "string"
        format: "date"
        allowEmptyValue: false
        x-example: "2017-01-01"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CreditDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CreditDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/credits{?bic}:
    get:
      tags:
      - "credit-controller"
      summary: "Список продуктов (кредиты) клиента в системах Банка"
      operationId: "listCreditsUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«CreditDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«CreditDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/deposits/{number}/receipt?target=email{&bic}:
    post:
      tags:
      - "deposit-controller"
      summary: "Передача информации по депозиту в pdf по email"
      operationId: "sendEmailDepositDetailsReceipt"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "emailInfo"
        description: "emailInfo"
        required: true
        schema:
          $ref: "#/definitions/EmailInfo"
      - name: "number"
        in: "path"
        description: "Номер вклада"
        required: false
        type: "string"
        x-example: "42301810377770005736"
      - name: "target"
        in: "query"
        required: true
        type: "string"
        default: "email"
        enum:
        - "email"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/deposits/{number}/receipt{?bic}:
    get:
      tags:
      - "deposit-controller"
      summary: "Возвращает информацию по депозиту в pdf формате"
      operationId: "getDepositDetailsReceiptByOperationId"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер вклада"
        required: false
        type: "string"
        x-example: "42301810377770005736"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "byte"
          responseSchema:
            type: "string"
            format: "byte"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/deposits/{number}{?bic}:
    get:
      tags:
      - "deposit-controller"
      summary: "Детали вклада"
      operationId: "depositDetails"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "number"
        in: "path"
        description: "Номер вклада"
        required: false
        type: "string"
        x-example: "42301810377770005736"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«DepositDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«DepositDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/deposits{?bic}:
    get:
      tags:
      - "deposit-controller"
      summary: "Список продуктов (вклады) клиента в системах Банка"
      operationId: "listDeposits"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«DepositDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«DepositDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "deposit-controller"
      summary: "Создание вклада"
      operationId: "createDeposit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "data"
        description: "data"
        required: true
        schema:
          $ref: "#/definitions/OpenDepositDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«OpenProductResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«OpenProductResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/feedbacks/attachments{?bic}:
    post:
      tags:
      - "feedback-controller"
      summary: "Загрузка файлов на сервер"
      operationId: "feedbackAttachmentUpload"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "file"
        in: "formData"
        description: "Загружаемый файл"
        required: true
        type: "file"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/feedback{?bic}:
    post:
      tags:
      - "feedback-controller"
      summary: "Отправка формы обратной связи"
      operationId: "feedbackUpload"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "feedbackRequest"
        description: "Тело объека содержит в себе основные параметры требуемые для\
          \ того, чтобы оставить отзыв"
        required: true
        schema:
          $ref: "#/definitions/FeedbackObjectDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«FeedbackResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«FeedbackResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/fps/banks{?bic}:
    get:
      tags:
      - "fast-payment-controller"
      summary: "Получение списка банков подключенных к системе СБП"
      operationId: "getFpsBanks"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«FPSBankDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«FPSBankDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/fps/confirmation/otp{?bic}:
    post:
      tags:
      - "fast-payment-controller"
      summary: "Получение смс при подключение СБП"
      operationId: "fpsConfirmationOtp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "requestBody"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/FPSConfirmationOtpRequestDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«FPSConfirmationOtpResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«FPSConfirmationOtpResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/fps/confirmation{?bic}:
    post:
      tags:
      - "fast-payment-controller"
      summary: "Подтверждение подключения сервиса CБП"
      operationId: "fpsConfirmation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "requestBody"
        description: "Тело запроса, которое будет содержать только введеный отп ко\
          д"
        required: true
        schema:
          $ref: "#/definitions/FPSConfirmationRequestDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«FPSConfirmationResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«FPSConfirmationResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/fps/fpsClient{?bic,phoneNumber,sourceAccountNumber}:
    get:
      tags:
      - "fast-payment-controller"
      summary: "Поиск клиента СБП по номеру телефона"
      operationId: "getFpsClient"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "phoneNumber"
        in: "query"
        description: "Номер мобильного телефона"
        required: true
        type: "string"
        pattern: "^7\\d{10}$"
        allowEmptyValue: false
      - name: "sourceAccountNumber"
        in: "query"
        description: "Номер счета для списания (необходим для получения любимого б\
          анка получателя при запросе в шину)"
        required: true
        type: "string"
        pattern: "^\\d+$"
        allowEmptyValue: false
        x-example: "40817810240500004685"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«FPSClientDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«FPSClientDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/histories/{operationId}{?bic}:
    get:
      tags:
      - "history-controller"
      summary: "Детали истории операций"
      operationId: "getHistoryByOperationId"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "operationId"
        in: "path"
        description: "ID операции из истории"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«HistoryOperationDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«HistoryOperationDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/history/aggregation{?aggregationType,bic,categoriesOnly,category,dateFrom,dateTo,limit,localOnly,mobileRequest,numbers,offset,productTypes,term}:
    get:
      tags:
      - "history-controller"
      summary: "Аналитика расходов в истории операций"
      operationId: "getAggregatedHistory"
      produces:
      - "application/json"
      parameters:
      - name: "aggregationType"
        in: "query"
        description: "Числовое значение верхнеуровнего фильтра. Допустимые значени\
          я: 1 - Списания, 2 - Поступления, 3 - Операции онлайн, 4 - Кэшбэк (опцио\
          нальный)"
        required: false
        type: "integer"
        format: "int32"
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "bic"
        in: "query"
        required: false
        type: "string"
      - name: "categoriesOnly"
        in: "query"
        description: "Возвращать в ответе только filters и categories. Без самих и\
          сторических событий. Удобно при расчёте данных за большие периоды. Чтобы\
          \ не делать склейку categories по месяцам."
        required: false
        type: "boolean"
      - name: "category"
        in: "query"
        description: "Фильтрация по определённой категории. Опциональное поле. (Ес\
          ли кликнули на сегмент в пончике)"
        required: false
        type: "string"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dateFrom"
        in: "query"
        description: "начальная дата истории"
        required: false
        type: "string"
        format: "date-time"
      - name: "dateTo"
        in: "query"
        description: "конечная дата истории"
        required: false
        type: "string"
        format: "date-time"
      - name: "limit"
        in: "query"
        description: "лимит операций"
        required: false
        type: "integer"
        minimum: -1.0
        exclusiveMinimum: false
        format: "int32"
      - name: "localOnly"
        in: "query"
        description: "только локальные данные"
        required: false
        type: "boolean"
      - name: "mobileRequest"
        in: "query"
        description: "Признак запроса из мобильного приложения."
        required: false
        type: "boolean"
      - name: "numbers"
        in: "query"
        description: "номер продукта, если не указан, возвращается история по всем\
          \ продуктам"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "offset"
        in: "query"
        description: "пропустить offset операций"
        required: false
        type: "integer"
        minimum: 0.0
        exclusiveMinimum: false
        format: "int32"
      - name: "productTypes"
        in: "query"
        description: "Тип продукта"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "card"
          - "account"
          - "loan"
        collectionFormat: "multi"
        enum:
        - "card"
        - "account"
        - "loan"
      - name: "term"
        in: "query"
        description: "строка для полнотекстового поиска"
        required: false
        type: "string"
        x-example: "Триколор ТВ"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«AggregatedHistoryOperationsDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«AggregatedHistoryOperationsDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/history/applications/{applicationId}/details{?bic}:
    get:
      tags:
      - "history-controller"
      summary: "Детальная информация о заявлении"
      operationId: "getApplicationHistoryDetails"
      produces:
      - "application/json"
      parameters:
      - name: "applicationId"
        in: "path"
        description: "ID операции"
        required: true
        type: "string"
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«HistoryApplicationGenericDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«HistoryApplicationGenericDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/history/applications/{applicationId}/receipt{?bic}:
    get:
      tags:
      - "history-controller"
      summary: "PDF заявления"
      operationId: "getApplicationReceipt"
      produces:
      - "application/pdf"
      parameters:
      - name: "applicationId"
        in: "path"
        description: "ID операции"
        required: true
        type: "string"
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "byte"
          responseSchema:
            type: "string"
            format: "byte"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "history-controller"
      summary: "Отправить заявление как PDF-файл во вложени по указанному адресу э\
        лектронной почты"
      operationId: "sendApplicationByEmail"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "applicationId"
        in: "path"
        description: "ID операции"
        required: true
        type: "string"
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "emailInfo"
        description: "emailInfo"
        required: true
        schema:
          $ref: "#/definitions/EmailInfo"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SendResultDto"
          responseSchema:
            $ref: "#/definitions/SendResultDto"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/history/applications/{applicationId}{?bic}:
    get:
      tags:
      - "history-controller"
      summary: "Получение заявления из истории"
      operationId: "getApplication"
      produces:
      - "application/json"
      parameters:
      - name: "applicationId"
        in: "path"
        description: "ID операции"
        required: true
        type: "string"
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«OperationDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«OperationDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/history/applications/{dboId}/decline{?bic}:
    post:
      tags:
      - "history-controller"
      summary: "Отказ от заявки на выпуск нового продукта"
      operationId: "declineUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dboId"
        in: "path"
        description: "ID заявления"
        required: true
        type: "string"
      - in: "body"
        name: "requestDto"
        description: "Тело запроса"
        required: false
        schema:
          $ref: "#/definitions/HistoryApplicationDeclineReasonDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/history/applications/{dboId}/markAsWatched{?bic}:
    post:
      tags:
      - "history-controller"
      summary: "Отметить заявку как просмотренную"
      operationId: "markAsWatchedUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dboId"
        in: "path"
        description: "ID заявления"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/history/applications{?bic,limit,offset,page,size}:
    get:
      tags:
      - "history-controller"
      summary: "Информация по истории заявлений"
      operationId: "getApplicationsHistory"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "limit"
        in: "query"
        description: "лимит операций"
        required: false
        type: "integer"
        minimum: -1.0
        exclusiveMinimum: false
        format: "int32"
      - name: "offset"
        in: "query"
        description: "пропустить offset операций"
        required: false
        type: "integer"
        minimum: 0.0
        exclusiveMinimum: false
        format: "int32"
      - name: "page"
        in: "query"
        description: "Номер страницы"
        required: false
        type: "integer"
        minimum: 0.0
        exclusiveMinimum: false
        format: "int32"
      - name: "size"
        in: "query"
        description: "Размер страницы"
        required: false
        type: "integer"
        minimum: 0.0
        exclusiveMinimum: false
        format: "int32"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaginationBatch«HistoryApplicationGenericDto»\
              »"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaginationBatch«HistoryApplicationGenericDto»\
              »"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/history{?bic,dateFrom,dateTo,limit,localOnly,mobileRequest,numbers,offset,productTypes,term}:
    get:
      tags:
      - "history-controller"
      summary: "Информация по истории операций по карте"
      operationId: "getHistory"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "bic"
        in: "query"
        required: false
        type: "string"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dateFrom"
        in: "query"
        description: "начальная дата истории"
        required: false
        type: "string"
        format: "date-time"
      - name: "dateTo"
        in: "query"
        description: "конечная дата истории"
        required: false
        type: "string"
        format: "date-time"
      - name: "limit"
        in: "query"
        description: "лимит операций"
        required: false
        type: "integer"
        minimum: -1.0
        exclusiveMinimum: false
        format: "int32"
      - name: "localOnly"
        in: "query"
        description: "только локальные данные"
        required: false
        type: "boolean"
      - name: "mobileRequest"
        in: "query"
        description: "Признак запроса из мобильного приложения."
        required: false
        type: "boolean"
      - name: "numbers"
        in: "query"
        description: "номер продукта, если не указан, возвращается история по всем\
          \ продуктам"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "offset"
        in: "query"
        description: "пропустить offset операций"
        required: false
        type: "integer"
        minimum: 0.0
        exclusiveMinimum: false
        format: "int32"
      - name: "productTypes"
        in: "query"
        description: "Тип продукта"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "card"
          - "account"
          - "loan"
        collectionFormat: "multi"
        enum:
        - "card"
        - "account"
        - "loan"
      - name: "term"
        in: "query"
        description: "строка для полнотекстового поиска"
        required: false
        type: "string"
        x-example: "Триколор ТВ"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaginationBatch«HistoryOperationDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaginationBatch«HistoryOperationDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/invoices/gisgmp/search{?docNumber,docType}:
    get:
      tags:
      - "invoice-controller"
      summary: "Сервис поиска начислений по документу"
      operationId: "search"
      produces:
      - "application/json"
      parameters:
      - name: "docNumber"
        in: "query"
        description: "Значение лицевого счета, водительских удостверений, инн и т\
          .д. В соответсивии с типом"
        required: true
        type: "string"
        allowEmptyValue: false
      - name: "docType"
        in: "query"
        description: "Тип документа"
        required: true
        type: "string"
        allowEmptyValue: false
        enum:
        - "uin"
        - "inn"
        - "driver_license"
        - "sts"
        - "passport_rf"
        - "birth_certificate"
        - "sailor_passport"
        - "officer"
        - "military"
        - "temporary_identity_card"
        - "release_certificate"
        - "foreign_passport"
        - "residence"
        - "refugee_certificate"
        - "migration_card"
        - "passport_ussr"
        - "snils"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«InvoiceSearchGisGmpResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«InvoiceSearchGisGmpResponse»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/invoices/markAsWatched{?bic}:
    post:
      tags:
      - "invoice-controller"
      summary: "Сервис отметки начисления как просмотренного"
      operationId: "markAsWatched"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "requestDto"
        description: "requestDto"
        required: true
        schema:
          $ref: "#/definitions/InvoiceMaskAsWatchedRequestDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«InvoiceChangeResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«InvoiceChangeResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/invoices/unwatchedInvoicesCount{?bic}:
    get:
      tags:
      - "invoice-controller"
      summary: "Сервис запроса количества непросмотренных начислений сгруппированн\
        хы по подпискам"
      operationId: "unwatchedInvoicesCount"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«UnwatchedInvoicesCategoryDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«UnwatchedInvoicesCategoryDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/invoices/{invoiceId}/mark-as-paid{?bic}:
    post:
      tags:
      - "invoice-controller"
      summary: "Сервис отметки начисления как оплаченного"
      operationId: "markInvoiceAsPaid"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - name: "invoiceId"
        in: "path"
        description: "ID счета, необходимого отметить оплаченным"
        required: true
        type: "string"
      - in: "body"
        name: "requestDto"
        description: "requestDto"
        required: true
        schema:
          $ref: "#/definitions/InvoiceMarkAsPaidRequestDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«InvoiceChangeResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«InvoiceChangeResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/invoices/{invoiceId}{?bic}:
    get:
      tags:
      - "invoice-controller"
      summary: "Сервис получения деталей начисления"
      operationId: "getDetails"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - name: "invoiceId"
        in: "path"
        description: "ID счета, необходимого отметить оплаченным"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«InvoiceGetDetailsResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«InvoiceGetDetailsResponseDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/loans/applications/attachments{?bic}:
    post:
      tags:
      - "loan-application-controller"
      summary: "Загрузка документов для заявки на кредит. Возвращает идентификатор\
        \ загруженного документа."
      operationId: "uploadFileUsingPOST"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "file"
        in: "formData"
        description: "Файл из формы на расширенную заявку кредита"
        required: true
        type: "file"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/loans/applications/dictionaries{?bic}:
    get:
      tags:
      - "loan-application-controller"
      summary: "Получение справочников"
      operationId: "getDictionariesUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«LoanApplicationDictionaryDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«LoanApplicationDictionaryDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/loans/applications/{dboId}/confirm{?bic}:
    post:
      tags:
      - "loan-application-controller"
      summary: "Подтверждение выдачи одобренного кредита"
      operationId: "confirmUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dboId"
        in: "path"
        description: "ID заявки на кредит"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«LoanApplicationConfirmDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«LoanApplicationConfirmDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/loans/applications/{dboId}/retry{?bic}:
    post:
      tags:
      - "loan-application-controller"
      summary: "Повторная заявка на кредит"
      operationId: "retryUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dboId"
        in: "path"
        description: "ID заявки на кредит"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«LoanApplicationRetryDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«LoanApplicationRetryDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/loans/applications/{dboId}{?bic}:
    get:
      tags:
      - "loan-application-controller"
      summary: "Получение черновика кредитной заявки"
      operationId: "getUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dboId"
        in: "path"
        description: "ID заявки на кредит"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«LoanApplicationDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«LoanApplicationDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    put:
      tags:
      - "loan-application-controller"
      summary: "Сохранение изменений в черновике"
      operationId: "saveLoanApplicationChangesUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dboId"
        in: "path"
        description: "ID заявки на кредит"
        required: true
        type: "string"
      - in: "body"
        name: "loanRequest"
        description: "Тело заявки кредита"
        required: false
        schema:
          $ref: "#/definitions/LoanApplicationDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "loan-application-controller"
      summary: "Удаление черновика из истории по id. Удалить заявку можно только с\
        о статусом draft."
      operationId: "deleteDraftUsingDELETE"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dboId"
        in: "path"
        description: "ID заявки на кредит"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      deprecated: false
  /clients/{clientId}/loans/applications{?bic}:
    post:
      tags:
      - "loan-application-controller"
      summary: "Создание черновика. Возвращает иденификатор созданного заявления."
      operationId: "createUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "loanRequest"
        description: "Тело заявки кредита"
        required: false
        schema:
          $ref: "#/definitions/LoanApplicationDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/passport{?bic}:
    get:
      tags:
      - "client-profile-controller"
      summary: "Незамаскированные паспортные данные клиента"
      operationId: "getClientPassportUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«ClientPassportDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«ClientPassportDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paychecks/periods{?bic}:
    get:
      tags:
      - "paycheck-controller"
      summary: "Список зарплатных листов клиента в системах Банка"
      operationId: "listRecords"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«PaycheckRecordResponse»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«PaycheckRecordResponse»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paychecks/{recordId}{?bic}:
    get:
      tags:
      - "paycheck-controller"
      summary: "Данные по зарплатному листу"
      operationId: "getPaycheck"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "recordId"
        in: "path"
        description: "recordId"
        required: false
        type: "integer"
        format: "int32"
        x-example: 532
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«PaycheckResponse»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«PaycheckResponse»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=bud{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона платежа в бюджет"
      operationId: "updateBudgetPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/BudgetPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "bud"
        enum:
        - "bud"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=card{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона платежа по номеру карты"
      operationId: "updateCardPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/CardPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "card"
        enum:
        - "card"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=depositCharge{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона пополнения вклада"
      operationId: "updateDepositChargePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/DepositPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "depositCharge"
        enum:
        - "depositCharge"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=depositWithdraw{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона частичного изъятия вклада"
      operationId: "updateDepositWithdrawPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/DepositPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "depositWithdraw"
        enum:
        - "depositWithdraw"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=fps{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона для платежа через СБП"
      operationId: "updateFpsPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/FPSPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "fps"
        enum:
        - "fps"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=ind{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона платежа ФЛ"
      operationId: "updateIndividualPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/IndividualPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "ind"
        enum:
        - "ind"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=internalSelfExchange{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона конверсионных операций между своими счетами"
      operationId: "updateInternalSelfExchangePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/InternalSelfExchangePaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "internalSelfExchange"
        enum:
        - "internalSelfExchange"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=intern{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона внутреннего платежа"
      operationId: "updateInternalPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/InternalPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "intern"
        enum:
        - "intern"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=le{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона платежа ЮЛ"
      operationId: "updateLegalEntityPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/LegalEntityPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "le"
        enum:
        - "le"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=p2p3dsBindPhone{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона перевода с привязанной карты по номеру телефона"
      operationId: "updateP2p3dsPhonePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/P2p3dsBindPhonePaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p3dsBindPhone"
        enum:
        - "p2p3dsBindPhone"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=p2p3dsBind{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона перевода с привязанной карты"
      operationId: "updateP2p3dsPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/P2p3dsBindPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p3dsBind"
        enum:
        - "p2p3dsBind"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=p2pPhone{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона перевода со своей карты по номеру телефона"
      operationId: "updateP2pPhonePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/P2pPhonePaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2pPhone"
        enum:
        - "p2pPhone"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=p2pSelf{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона перевода со своей на свою карту"
      operationId: "updateP2pSelfPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/P2pSelfPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2pSelf"
        enum:
        - "p2pSelf"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=p2p{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона перевода со своей на чужую карту"
      operationId: "updateP2pPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/P2pPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p"
        enum:
        - "p2p"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=phone{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона платежа по номеру телефона"
      operationId: "updatePhonePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/PhonePaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "phone"
        enum:
        - "phone"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=serviceProvider{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона ПУ"
      operationId: "updatePaymentServiceProviderTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/PaymentServiceProviderTemplate"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "serviceProvider"
        enum:
        - "serviceProvider"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=sp{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона платежа ИП"
      operationId: "updateSoleProprietorPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/SoleProprietorPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "sp"
        enum:
        - "sp"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}?type=tax{&bic}:
    put:
      tags:
      - "payment-template-controller"
      summary: "Изменение шаблона налогового платежа"
      operationId: "updateTaxPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "templateDto"
        description: "templateDto"
        required: true
        schema:
          $ref: "#/definitions/TaxPaymentTemplateDto"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "tax"
        enum:
        - "tax"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates/{templateId}{?bic}:
    get:
      tags:
      - "payment-template-controller"
      summary: "Чтение шаблона платежа"
      operationId: "getPaymentTemplate"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "payment-template-controller"
      summary: "Удаление шаблона платежа"
      operationId: "deletePaymentTemplate"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      deprecated: false
    patch:
      tags:
      - "payment-template-controller"
      summary: "Переименование шаблона"
      operationId: "renamePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "name"
        description: "name"
        required: true
        schema:
          $ref: "#/definitions/RenameTemplateRequest"
      - name: "templateId"
        in: "path"
        description: "templateId"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      deprecated: false
  /clients/{clientId}/paymentTemplates?source=payment{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа из существующего"
      operationId: "createPaymentTemplateFromPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "requestDto"
        description: "requestDto"
        required: true
        schema:
          $ref: "#/definitions/CreateTemplateRequestDto"
      - name: "source"
        in: "query"
        required: true
        type: "string"
        default: "payment"
        enum:
        - "payment"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=bud{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа в бюджет"
      operationId: "createBudgetPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/BudgetPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "bud"
        enum:
        - "bud"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=card{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа по номеру карты"
      operationId: "createCardPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/CardPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "card"
        enum:
        - "card"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=depositCharge{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона пополнения вклада"
      operationId: "createDepositChargePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/DepositPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "depositCharge"
        enum:
        - "depositCharge"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=depositWithdraw{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона частичного изъятия вклада"
      operationId: "createDepositWithdrawPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/DepositPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "depositWithdraw"
        enum:
        - "depositWithdraw"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=fps{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона для платежа через СБП"
      operationId: "createFpsPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/FPSPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "fps"
        enum:
        - "fps"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=ind{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа физ лицу"
      operationId: "createIndividualPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/IndividualPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "ind"
        enum:
        - "ind"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=internalSelfExchange{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона конверсионных операций между счетами"
      operationId: "createInternalSelfExchangePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/InternalSelfExchangePaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "internalSelfExchange"
        enum:
        - "internalSelfExchange"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=intern{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона внутреннего платежа"
      operationId: "createInternalPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/InternalPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "intern"
        enum:
        - "intern"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=le{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа юр лицу"
      operationId: "createLegalEntityPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/LegalEntityPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "le"
        enum:
        - "le"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=p2p3dsBindPhone{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа с привязанной карты по номеру телефона"
      operationId: "createP2p3dsBindPhonePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/P2p3dsBindPhonePaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p3dsBindPhone"
        enum:
        - "p2p3dsBindPhone"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=p2p3dsBind{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа с привязанной карты"
      operationId: "createP2p3dsBindPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/P2p3dsBindPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p3dsBind"
        enum:
        - "p2p3dsBind"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=p2pPhone{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа со своей карты по номеру телефона"
      operationId: "createP2pPhonePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/P2pPhonePaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2pPhone"
        enum:
        - "p2pPhone"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=p2pSelf{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа со своей на свою карту"
      operationId: "createP2pSelfPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/P2pSelfPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2pSelf"
        enum:
        - "p2pSelf"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=p2p{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа со своей на чужую карту"
      operationId: "createP2pPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/P2pPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p"
        enum:
        - "p2p"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=phone{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа по номеру телефона"
      operationId: "createPhonePaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/PhonePaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "phone"
        enum:
        - "phone"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=serviceProvider{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона ПУ"
      operationId: "createPaymentServiceProviderTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/PaymentServiceProviderTemplate"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "serviceProvider"
        enum:
        - "serviceProvider"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=sp{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона платежа ИП"
      operationId: "createSoleProprietorPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/SoleProprietorPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "sp"
        enum:
        - "sp"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates?type=tax{&bic}:
    post:
      tags:
      - "payment-template-controller"
      summary: "Создание шаблона налогового платежа"
      operationId: "createTaxPaymentTemplate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "template"
        description: "template"
        required: true
        schema:
          $ref: "#/definitions/TaxPaymentTemplateDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "tax"
        enum:
        - "tax"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentTemplateDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/paymentTemplates{?bic,term}:
    get:
      tags:
      - "payment-template-controller"
      summary: "Список шаблонов платежей"
      operationId: "listPaymentTemplates"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - name: "term"
        in: "query"
        description: "term"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«PaymentTemplateDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«PaymentTemplateDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/check?type=card2card{&bic}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис проверки комиссии при переводе с карты на карту"
      operationId: "checkCardTransferCommission"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "request"
        description: "Информация для расчета комиссии"
        required: false
        schema:
          $ref: "#/definitions/CardTransferCommissionCheckDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "card2card"
        enum:
        - "card2card"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CardTransferCommissionResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CardTransferCommissionResponse»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/check?type=card2phone{&bic}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис проверки комиссии при переводе с карты по номеру телефона"
      operationId: "checkCardToPhoneTransferCommission"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или опустить параметр"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "request"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/CardToPhoneNumberTransferCommissionDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "card2phone"
        enum:
        - "card2phone"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CardTransferCommissionResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CardTransferCommissionResponse»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/check?type=fps{&bic}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис проверки/подготовки платежей через сервис СБП (пока без ком\
        иссии)"
      operationId: "checkFpsPaymentOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "fpsPaymentOrderDto"
        description: "Информация для платежа через систему СБП. Пример: \n{\n  \"\
          source\": {\n    \"number\": \"40817810000000000124\"\n  },\n  \"target\"\
          : {\n    \"number\": \"79670270231\"\n    \"name\": \"Юлия Сергеевна Л.\"\
          ,\n    \"bankId\": \"vv6vvfu\"\n    \"bankName\": \"Тинькоф банк\"\n  },\n\
          \  \"message\": \"сообщение пользователю\",\n  \"amount\": {\n    \"sourceAmount\"\
          : 100,\n    \"sourceCurrency\": \"643\",\n    \"targetAmount\": 100,\n \
          \   \"targetCurrency\": \"643\",\n    \"fxRate\": 1.00\n  }\n}"
        required: true
        schema:
          $ref: "#/definitions/FPSPaymentOrderDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "fps"
        enum:
        - "fps"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«FPSPaymentOrderDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«FPSPaymentOrderDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/commission{?bic,currency,sourceBic,sourceNumber,sourceValidTo,targetBic,type,value}:
    get:
      tags:
      - "payments-commission-controller"
      summary: "Расчёт комиссии"
      operationId: "calculateCommission"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - name: "currency"
        in: "query"
        description: "Валюта"
        required: false
        type: "string"
      - name: "sourceBic"
        in: "query"
        description: "БИК банка пользователя"
        required: true
        type: "string"
        pattern: "^[0-9]{9}$"
      - name: "sourceNumber"
        in: "query"
        description: "список маскированных или полных номеров карты отправителя пл\
          атежа (список нужен для работы с СКС к которому привязано несколько карт\
          )"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "sourceValidTo"
        in: "query"
        description: "список сроков действия карт в формате MM/YY (список нужен дл\
          я работы с СКС к которому привязано несколько карт)"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "targetBic"
        in: "query"
        description: "БИК банка назначения"
        required: true
        type: "string"
        pattern: "^[0-9]{9}$"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        enum:
        - "intern"
        - "ind"
        - "le"
        - "sp"
        - "bud"
        - "tax"
      - name: "value"
        in: "query"
        description: "Величина для расчёта комиссии"
        required: true
        type: "number"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«CommissionResult»"
          responseSchema:
            $ref: "#/definitions/JsonItem«CommissionResult»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?check=allById&type=serviceProvider{&dboid}:
    get:
      tags:
      - "payments-bank-controller"
      summary: "Сервис для возврата всех шагов уточнения реквизитов платежа ПУ"
      operationId: "getPaymentServiceProviderCheckByDboId"
      produces:
      - "application/json"
      parameters:
      - name: "check"
        in: "query"
        required: true
        type: "string"
        default: "allById"
        enum:
        - "allById"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dboid"
        in: "query"
        description: "dboid"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "serviceProvider"
        enum:
        - "serviceProvider"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«PaymentServiceProviderResponse»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«PaymentServiceProviderResponse»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?status=finalStep&type=serviceProvider{&check,dboid}:
    get:
      tags:
      - "payments-bank-controller"
      summary: "Сервис для возврата последнего шага уточнения реквизитов"
      operationId: "getPaymentServiceProvidersCheckFinalStepBydboId"
      produces:
      - "application/json"
      parameters:
      - name: "check"
        in: "query"
        required: true
        type: "string"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "dboid"
        in: "query"
        description: "dboid"
        required: true
        type: "string"
      - name: "status"
        in: "query"
        required: true
        type: "string"
        default: "finalStep"
        enum:
        - "finalStep"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "serviceProvider"
        enum:
        - "serviceProvider"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentServiceProviderResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentServiceProviderResponse»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=bud{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки платежей в пользу бюджета"
      operationId: "orderBudgetPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - in: "body"
        name: "budgetPaymentOrder"
        description: "Информация для перевода по реквизитам в бюджет"
        required: true
        schema:
          $ref: "#/definitions/BudgetPaymentOrderDto"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "bud"
        enum:
        - "bud"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=card{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки платежей по номеру карты"
      operationId: "cardOrderPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - in: "body"
        name: "cardPaymentOrder"
        description: "Информация для платежа по номеру карты"
        required: true
        schema:
          $ref: "#/definitions/CardPaymentOrderDto"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "card"
        enum:
        - "card"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=depositCharge{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис пополнения вклада"
      operationId: "orderDepositChargePayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "depositPaymentOrder"
        description: "depositPaymentOrder"
        required: true
        schema:
          $ref: "#/definitions/DepositPaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "depositCharge"
        enum:
        - "depositCharge"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=depositWithdraw{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис частичного изъятия вклада, в т.ч. на другой вклад"
      operationId: "orderDepositWithdrawPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "depositPaymentOrder"
        description: "depositPaymentOrder"
        required: true
        schema:
          $ref: "#/definitions/DepositPaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "depositWithdraw"
        enum:
        - "depositWithdraw"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=fps{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки платежей через сервис СБП"
      operationId: "fpsPaymentOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "fpsPaymentOrderDto"
        description: "Информация для платежа через систему СБП. Пример: \n{\n \"source\"\
          : {\n   \"number\": \"40817810000000000124\"\n },\n \"target\": {\n   \"\
          number\": \"79670270231\",\n   \"name\": \"Юлия Сергеевна Л.\",\n   \"bankId\"\
          : \"vv6vvfu\"\n   \"bankName\": \"Тинькоф банк\"\n },\n \"details\": {\n\
          \   \"operationId\": \"56765432gfd\",\n   \"operationControlValue\": \"\
          4hj43nkj\",\n   \"origRefNumber\": \"83078472\",\n   \"referenceId\": \"\
          100001\"\n },\n \"message\": \"сообщение пользователю\",\n \"amount\": {\n\
          \   \"sourceAmount\": 100,\n   \"sourceCurrency\": \"643\",\n   \"targetAmount\"\
          : 100,\n   \"targetCurrency\": \"643\",\n   \"feeAmount\": 10,\n   \"feeCurrency\"\
          : \"643\",\n   \"fxRate\": 1.00\n }\n}"
        required: true
        schema:
          $ref: "#/definitions/FPSPaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "fps"
        enum:
        - "fps"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=ind{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки переводов в пользу ФЛ"
      operationId: "orderIndividualPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "individualPaymentOrder"
        description: "Информация для перевода по реквизитам ФЛ"
        required: true
        schema:
          $ref: "#/definitions/IndividualPaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "ind"
        enum:
        - "ind"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=internalSelfExchange{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки конверсионных переводов между своими счетами"
      operationId: "internalSelfExchangeOrderPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "paymentOrder"
        description: "Информация для платежа по номеру карты (P2P)"
        required: true
        schema:
          $ref: "#/definitions/InternalSelfExchangePaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "internalSelfExchange"
        enum:
        - "internalSelfExchange"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=intern{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки внутренних переводов"
      operationId: "orderInternalPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "internalPaymentOrder"
        description: "internalPaymentOrder"
        required: true
        schema:
          $ref: "#/definitions/InternalPaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "intern"
        enum:
        - "intern"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=invoices{&bic}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис оплаты начислений. Поддерживается оплата одного и более нач\
        исления"
      operationId: "paymentOrderInvoices"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "request"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/PaymentInvoicesRequest"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "invoices"
        enum:
        - "invoices"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«PaymentStatusDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«PaymentStatusDto»»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=le{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки переводов в пользу ЮЛ"
      operationId: "orderLegalEntityPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "legalEntityPaymentOrder"
        description: "Информация для перевода по реквизитам ЮЛ"
        required: true
        schema:
          $ref: "#/definitions/LegalEntityPaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "le"
        enum:
        - "le"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=p2p3dsBindPhoneStart{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "p-2p-3ds-payments-controller"
      summary: "Сервис инициирования отправки платежей P2P_3DS на номер телефона д\
        ля привязанных карт"
      operationId: "p2p3dsBindPhonePaymentStart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "p2p3dsBindPaymentOrderDto"
        description: "Информация для платежа с привязанной карты на карту (P2P_3DS)"
        required: true
        schema:
          $ref: "#/definitions/P2p3dsBindPhonePaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p3dsBindPhoneStart"
        enum:
        - "p2p3dsBindPhoneStart"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«P2p3dsStartResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«P2p3dsStartResponse»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=p2p3dsBindStart{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "p-2p-3ds-payments-controller"
      summary: "Сервис инициирования отправки платежей P2P_3DS для привязанных кар\
        т"
      operationId: "p2p3dsBindPaymentStart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "p2p3dsBindPaymentOrderDto"
        description: "Информация для платежа с привязанной карты на карту (P2P_3DS)"
        required: true
        schema:
          $ref: "#/definitions/P2p3dsBindPaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p3dsBindStart"
        enum:
        - "p2p3dsBindStart"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«P2p3dsStartResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«P2p3dsStartResponse»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=p2p3dsPhoneStart{&bic}:
    post:
      tags:
      - "p-2p-3ds-payments-controller"
      summary: "Сервис инициирования отправки платежей P2P_3DS на номер телефона"
      operationId: "p2p3dsPhonePaymentStart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "p2p3dsPaymentOrderDto"
        description: "Информация для платежа с карты на номер телефона (P2P_3DS)"
        required: true
        schema:
          $ref: "#/definitions/P2p3dsPhonePaymentOrderDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p3dsPhoneStart"
        enum:
        - "p2p3dsPhoneStart"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«P2p3dsStartResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«P2p3dsStartResponse»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=p2p3dsStart{&bic}:
    post:
      tags:
      - "p-2p-3ds-payments-controller"
      summary: "Сервис инициирования отправки платежей P2P_3DS"
      operationId: "p2p3dsPaymentStart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "p2p3dsPaymentOrderDto"
        description: "Информация для платежа с карты на карту (P2P_3DS)"
        required: true
        schema:
          $ref: "#/definitions/P2p3dsPaymentOrderDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p3dsStart"
        enum:
        - "p2p3dsStart"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«P2p3dsStartResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«P2p3dsStartResponse»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=p2pPhone{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки переводов со своей карты по номеру телефона (P2P)"
      operationId: "orderP2pPhonePayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "p2pPaymentOrder"
        description: "Информация для платежа по номеру карты (P2P)"
        required: true
        schema:
          $ref: "#/definitions/P2pPhonePaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2pPhone"
        enum:
        - "p2pPhone"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=p2pSelf{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки переводов между своими картами"
      operationId: "orderP2pSelfPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "p2pSelfPaymentOrder"
        description: "Информация для платежа по номеру карты (P2P)"
        required: true
        schema:
          $ref: "#/definitions/P2pSelfPaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2pSelf"
        enum:
        - "p2pSelf"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=p2p{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки переводов со своей карты на чужую карту (P2P)"
      operationId: "orderP2pPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "p2pPaymentOrder"
        description: "Информация для платежа по номеру карты (P2P)"
        required: true
        schema:
          $ref: "#/definitions/P2pPaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "p2p"
        enum:
        - "p2p"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=phone{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки платежей по номеру мобильного телефона"
      operationId: "phoneOrderPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "phoneNumberPaymentOrder"
        description: "Информация для платежа по номеру мобильного телефона"
        required: true
        schema:
          $ref: "#/definitions/PhonePaymentOrderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "phone"
        enum:
        - "phone"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=serviceProvider{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис проведение процедуры оплаты платежа ПУ"
      operationId: "paymentTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "request"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/PaymentServiceProviderDto"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "serviceProvider"
        enum:
        - "serviceProvider"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=serviceProvider{&check}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис уточнение реквизитов и параметров платежа ПУ"
      operationId: "checkParamsOfPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "check"
        in: "query"
        required: true
        type: "string"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "request"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/PaymentServiceProviderCheckRequest"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "serviceProvider"
        enum:
        - "serviceProvider"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentServiceProviderResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentServiceProviderResponse»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=sp{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки переводов в пользу ИП"
      operationId: "orderSoleProprietorPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - in: "body"
        name: "soleProprietorPaymentOrderDto"
        description: "Информация для перевода по реквизитам ИП"
        required: true
        schema:
          $ref: "#/definitions/SoleProprietorPaymentOrderDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "sp"
        enum:
        - "sp"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/order?type=tax{&bic,saveAsTemplate,usedTemplateId}:
    post:
      tags:
      - "payments-bank-controller"
      summary: "Сервис отправки налоговых платежей"
      operationId: "orderTaxPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "saveAsTemplate"
        in: "query"
        description: "Сохранить в качестве шаблона, имя шаблона"
        required: false
        type: "string"
        maxLength: 2000
        allowEmptyValue: false
      - in: "body"
        name: "taxPaymentOrder"
        description: "Информация для налогового перевода"
        required: true
        schema:
          $ref: "#/definitions/TaxPaymentOrderDto"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "tax"
        enum:
        - "tax"
      - name: "usedTemplateId"
        in: "query"
        description: "Id использованного шаблона шаблона"
        required: false
        type: "string"
        maxLength: 64
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/{paymentId}/receipt?target=email{&bic}:
    post:
      tags:
      - "operation-payment-bank-controller"
      summary: "Передача информации по платежу в pdf по email"
      operationId: "sendEmailPaymentOrderReceipt"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "emailInfo"
        description: "emailInfo"
        required: true
        schema:
          $ref: "#/definitions/EmailInfo"
      - name: "paymentId"
        in: "path"
        description: "Идентификатор платежа"
        required: false
        type: "string"
        x-example: "42019b42-c582-4a30-abd4-aecf675edc61"
      - name: "target"
        in: "query"
        required: true
        type: "string"
        default: "email"
        enum:
        - "email"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/{paymentId}/receipt{?bic}:
    get:
      tags:
      - "operation-payment-bank-controller"
      summary: "Возвращает информацию по платежу в pdf формате"
      operationId: "getPaymentOrderReceiptByOperationId"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "paymentId"
        in: "path"
        description: "Идентификатор платежа"
        required: false
        type: "string"
        x-example: "42019b42-c582-4a30-abd4-aecf675edc61"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
            format: "byte"
          responseSchema:
            type: "string"
            format: "byte"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/{paymentId}/status{?bic}:
    get:
      tags:
      - "payments-bank-controller"
      summary: "Сервис получения статуса отправленного платежа"
      operationId: "getPaymentStatus"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "paymentId"
        in: "path"
        description: "ID платежа"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentStatusDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/payments/{paymentId}{?bic}:
    get:
      tags:
      - "payments-bank-controller"
      summary: "Сервис получения данных отправленного платежа"
      operationId: "getPayment"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "paymentId"
        in: "path"
        description: "paymentId"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«GenericPaymentOrderDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«GenericPaymentOrderDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/product/alias{?bic}:
    put:
      tags:
      - "product-alias-controller"
      summary: "Список продуктов (вклады) клиента в системах Банка"
      operationId: "setProductAlias"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "details"
        description: "details"
        required: true
        schema:
          $ref: "#/definitions/SetProductAliasRequestDetails"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«SetProductAliasResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«SetProductAliasResponse»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/product/{number}/configuration{?bic}:
    put:
      tags:
      - "product-configuration-controller"
      summary: "Конфигурация продукта клиента"
      operationId: "setProductConfiguration"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "details"
        description: "Настройки продукта"
        required: false
        schema:
          $ref: "#/definitions/SetProductConfigurationRequestDto"
      - name: "number"
        in: "path"
        description: "Номер продукта"
        required: false
        type: "string"
        x-example: "532461______4575"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«SetProductConfigurationResponse»"
          responseSchema:
            $ref: "#/definitions/JsonItem«SetProductConfigurationResponse»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/profile{?bic}:
    get:
      tags:
      - "client-profile-controller"
      summary: "Профиль клиента Банка"
      operationId: "clientProfile"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«ClientProfileDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«ClientProfileDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/settings/fps{?bic}:
    get:
      tags:
      - "settings-controller"
      summary: "Получение СБП настроек клиента"
      operationId: "getFpsSettings"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«FpsSettingsDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«FpsSettingsDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/settings/limits?type=balance{&bic}:
    get:
      tags:
      - "settings-controller"
      summary: "Возвращает остаток по всем лимитам"
      operationId: "getBalance"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "balance"
        enum:
        - "balance"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "number"
          responseSchema:
            type: "object"
            additionalProperties:
              type: "number"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/settings/limits?type=spent{&bic}:
    get:
      tags:
      - "settings-controller"
      summary: "Возвращает расход по лимитам"
      operationId: "getSpent"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "spent"
        enum:
        - "spent"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "number"
          responseSchema:
            type: "object"
            additionalProperties:
              type: "number"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/settings/limits{?bic}:
    get:
      tags:
      - "settings-controller"
      summary: "Возвращает все установленные лимиты ДБО"
      operationId: "getAll"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "number"
          responseSchema:
            type: "object"
            additionalProperties:
              type: "number"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    put:
      tags:
      - "settings-controller"
      summary: "Обновляет все переданные лимиты"
      operationId: "updateAll"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "settings"
        description: "settings"
        required: true
        schema:
          type: "object"
          additionalProperties:
            type: "number"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "number"
          responseSchema:
            type: "object"
            additionalProperties:
              type: "number"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/settings{?bic,keys}:
    get:
      tags:
      - "settings-controller"
      summary: "Получение настроек клиента"
      operationId: "getAppSettings"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - name: "keys"
        in: "query"
        description: "Список ключей настроек, по которым нужно получить значения"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "FPS_ACCOUNT"
          - "FPS_PHONE"
          - "INVISIBLE"
        collectionFormat: "multi"
        allowEmptyValue: false
        enum:
        - "FPS_ACCOUNT"
        - "FPS_PHONE"
        - "INVISIBLE"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«SettingDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«SettingDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/settings{?bic}:
    put:
      tags:
      - "settings-controller"
      summary: "Обновляет настройки клиента"
      operationId: "updateAppSettings"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
        x-example: "@me"
      - in: "body"
        name: "settings"
        description: "Настройки клиента"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/SettingDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«string»"
          responseSchema:
            $ref: "#/definitions/JsonItem«string»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/subscriptions/gisgmp{?bic}:
    post:
      tags:
      - "subscription-controller"
      summary: "Сервис создания GISGMP подписки"
      operationId: "createGisGmpSubscription"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "request"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/CreateSubscriptionItemDto"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«InvoiceSubscriptionResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«InvoiceSubscriptionResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/subscriptions/invoices{?bic,dateFrom,dateTo,paid}:
    get:
      tags:
      - "subscription-controller"
      summary: "Сервис запроса начислений сгруппированных по подпискам"
      operationId: "getSubscriptionInvoices"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - name: "dateFrom"
        in: "query"
        description: "Дата начала периода выборки"
        required: true
        type: "string"
        allowEmptyValue: false
      - name: "dateTo"
        in: "query"
        description: "Дата окончания периода выборки"
        required: true
        type: "string"
        allowEmptyValue: false
      - name: "paid"
        in: "query"
        description: "Выбрать оплаченные начисления?"
        required: true
        type: "boolean"
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«InvoiceSubscriptionResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«InvoiceSubscriptionResponseDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/subscriptions/search{?bic}:
    post:
      tags:
      - "subscription-controller"
      summary: "Сервис поиска начислений"
      operationId: "searchInvoices"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "request"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/BillingSubscriptionRq"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«SubscriptionSearchResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«SubscriptionSearchResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /clients/{clientId}/subscriptions/{subscriptionId}/deleteSubscription{?bic}:
    delete:
      tags:
      - "subscription-controller"
      summary: "Сервис удаления подписки"
      operationId: "deleteSubscriptionOneStep"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - name: "subscriptionId"
        in: "path"
        description: "ID счета, необходимого удалить"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«SubscriptionItemDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«SubscriptionItemDto»"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      deprecated: false
  /clients/{clientId}/subscriptions{?bic}:
    get:
      tags:
      - "subscription-controller"
      summary: "Сервис получения всех подписок пользователя"
      operationId: "getAllSubscription"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«SubscriptionListResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«SubscriptionListResponseDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    post:
      tags:
      - "subscription-controller"
      summary: "Сервис создания подписки"
      operationId: "createSubscription"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "request"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/BillingSubscriptionRq"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«SubscriptionCreateUpdateOrderResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«SubscriptionCreateUpdateOrderResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    put:
      tags:
      - "subscription-controller"
      summary: "Сервис изменения подписки"
      operationId: "updateSubscription"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "request"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/BillingSubscriptionRq"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«SubscriptionCreateUpdateOrderResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«SubscriptionCreateUpdateOrderResponseDto»"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
    delete:
      tags:
      - "subscription-controller"
      summary: "Сервис удаления подписки"
      operationId: "deleteSubscription"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      - in: "body"
        name: "request"
        description: "request"
        required: true
        schema:
          $ref: "#/definitions/BillingSubscriptionRq"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«SubscriptionCreateUpdateOrderResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«SubscriptionCreateUpdateOrderResponseDto»"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      deprecated: false
  /clients{?bic,msisdn,pan}:
    get:
      tags:
      - "client-profile-controller"
      summary: "Поиск клиента по номеру мобильного телефона или номеру карты"
      operationId: "searchClient"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка, в котором обслуживается клиент"
        required: false
        type: "string"
      - name: "msisdn"
        in: "query"
        description: "Номер мобильного телефона"
        required: false
        type: "string"
        pattern: "^7\\d{10}$"
      - name: "pan"
        in: "query"
        description: "Номер банковской карты"
        required: false
        type: "string"
        pattern: "^[2-7][0-9]{15,18}$"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«ClientSearchInfo»"
          responseSchema:
            $ref: "#/definitions/JsonItem«ClientSearchInfo»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /currency/rates{?bic}:
    get:
      tags:
      - "currency-rates-controller"
      summary: "currencyRates"
      operationId: "currencyRatesUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'\
          \ или не указывать"
        required: false
        type: "string"
        allowEmptyValue: false
        x-example: "@me"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CurrencyRates"
          responseSchema:
            $ref: "#/definitions/CurrencyRates"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /customers/@me/permissions:
    get:
      tags:
      - "permissions-controller"
      summary: "Возвращает список методов HTTP разрешенные для использования польз\
        ователем"
      operationId: "listOfPermissions"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "array"
              items:
                type: "string"
                enum:
                - "GET"
                - "HEAD"
                - "POST"
                - "PUT"
                - "PATCH"
                - "DELETE"
                - "OPTIONS"
                - "TRACE"
          responseSchema:
            type: "object"
            additionalProperties:
              type: "array"
              items:
                type: "string"
                enum:
                - "GET"
                - "HEAD"
                - "POST"
                - "PUT"
                - "PATCH"
                - "DELETE"
                - "OPTIONS"
                - "TRACE"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /customers/{clientId}/previousAuth:
    get:
      tags:
      - "previous-auth-controller"
      summary: "Информация по предыдущему входу"
      operationId: "previousAuth"
      produces:
      - "application/json"
      parameters:
      - name: "clientId"
        in: "path"
        description: "ID клиента, для текущего авторизованного клиента - '@me'"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«AuthInfoDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«AuthInfoDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /dadata{?count,id,query,type}:
    get:
      tags:
      - "dadata-controller"
      summary: "Автоматическая проверка и исправление контактных данных"
      operationId: "datacheck"
      produces:
      - "application/json"
      parameters:
      - name: "count"
        in: "query"
        description: "максимальное количество элементов в результатирующей выборке"
        required: false
        type: "integer"
        format: "int32"
      - name: "id"
        in: "query"
        description: "id запроса. Возвращается в ответе для связывания ответа с за\
          просом"
        required: false
        type: "string"
      - name: "query"
        in: "query"
        description: "поисковый запрос"
        required: false
        type: "string"
      - name: "type"
        in: "query"
        description: "тип запроса"
        required: false
        type: "string"
        x-example: "bank"
        enum:
        - "bank"
        - "party"
        - "address"
        - "fio"
        - "email"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«DadataResponseDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«DadataResponseDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /payments/p2p3dsComplete{?md,model,paRes,paymentId}:
    post:
      tags:
      - "p-2p-3ds-payments-controller"
      summary: "Сервис завершения платежей P2P_3DS"
      operationId: "p2p3dsPaymentComplete"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "md"
        in: "query"
        required: true
        type: "string"
      - name: "model"
        in: "query"
        description: "model"
        required: false
        items:
          type: "object"
          additionalProperties:
            type: "object"
      - name: "paRes"
        in: "query"
        required: true
        type: "string"
      - name: "paymentId"
        in: "query"
        description: "paymentId"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ModelAndView"
          responseSchema:
            $ref: "#/definitions/ModelAndView"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /payments/targetType{?bic,inn,number}:
    get:
      tags:
      - "payments-common-controller"
      summary: "Проверка типа платежа"
      operationId: "checkTargetType"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка"
        required: true
        type: "string"
        allowEmptyValue: false
      - name: "inn"
        in: "query"
        description: "ИНН"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "number"
        in: "query"
        description: "Номер счёта"
        required: true
        type: "string"
        allowEmptyValue: false
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/PaymentTargetTypeDto"
          responseSchema:
            $ref: "#/definitions/PaymentTargetTypeDto"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /regions:
    get:
      tags:
      - "region-controller"
      summary: "Список всех регионов"
      operationId: "getAllUsingGET_1"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/RegionDto"
          responseSchema:
            type: "array"
            items:
              $ref: "#/definitions/RegionDto"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /serviceProviders/@first?type=phoneNumber{&phoneNumber}:
    get:
      tags:
      - "payment-catalog-controller"
      summary: "Возвращает код оператора по номеру телефона"
      operationId: "operatorCode"
      produces:
      - "application/json"
      parameters:
      - name: "phoneNumber"
        in: "query"
        description: "Номер телефона"
        required: true
        type: "string"
        allowEmptyValue: false
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "phoneNumber"
        enum:
        - "phoneNumber"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentOperatorDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentOperatorDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /serviceProviders/{category}{?region,term}:
    get:
      tags:
      - "payment-catalog-controller"
      summary: "Список поставщиков услуг заданной категории"
      operationId: "serviceProviders_1"
      produces:
      - "application/json"
      parameters:
      - name: "category"
        in: "path"
        description: "ID категории. Может быть '@any' для поиска по всем категория\
          м."
        required: true
        type: "string"
        x-example: "OW--MOBILE"
      - name: "region"
        in: "query"
        description: "регионы присутствия"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "term"
        in: "query"
        description: "строка для полнотекстового поиска"
        required: false
        type: "string"
        x-example: "Триколор ТВ"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«PaymentOperatorDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«PaymentOperatorDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /serviceProviders/{operatorCode}?type=operatorCode:
    get:
      tags:
      - "payment-catalog-controller"
      summary: "Возвращает поставщика услуг по operatorCode"
      operationId: "serviceProviders"
      produces:
      - "application/json"
      parameters:
      - name: "operatorCode"
        in: "path"
        description: "Код оператора"
        required: true
        type: "string"
        x-example: "OW||MT8"
      - name: "type"
        in: "query"
        required: true
        type: "string"
        default: "operatorCode"
        enum:
        - "operatorCode"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«PaymentOperatorDto»"
          responseSchema:
            $ref: "#/definitions/JsonItem«PaymentOperatorDto»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /serviceProviders{?region,term}:
    get:
      tags:
      - "payment-catalog-controller"
      summary: "Список категорий поставщиков услуг"
      operationId: "serviceProviderCategories"
      produces:
      - "application/json"
      parameters:
      - name: "region"
        in: "query"
        description: "регионы присутствия"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "term"
        in: "query"
        description: "строка для полнотекстового поиска"
        required: false
        type: "string"
        x-example: "Триколор ТВ"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«List«PaymentOperatorDto»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«List«PaymentOperatorDto»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /shop/sections:
    get:
      tags:
      - "products-shop-controller"
      summary: "Получение продуктов для витрины"
      operationId: "getAllUsingGET"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
          responseSchema:
            type: "string"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /shopwindow/card{?bic,type}:
    get:
      tags:
      - "shop-window-controller"
      summary: "Возвращает витрину продуктов карт"
      operationId: "getCardsByFilterUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "type"
        in: "query"
        description: "type"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«ShopWindowList«ShopWindowCard»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«ShopWindowList«ShopWindowCard»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /shopwindow/credit{?bic,type}:
    get:
      tags:
      - "shop-window-controller"
      summary: "Возвращает витрину продуктов кредитов"
      operationId: "getCreditsByFilterUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "type"
        in: "query"
        description: "type"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«ShopWindowList«ShopWindowCredit»»"
          responseSchema:
            $ref: "#/definitions/JsonItem«ShopWindowList«ShopWindowCredit»»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /shopwindow/loans/programs/{programId}{?bic}:
    get:
      tags:
      - "shop-window-controller"
      summary: "Возвращает программу кредита по id"
      operationId: "getLoanProgramByIdUsingGET"
      produces:
      - "application/json"
      parameters:
      - name: "bic"
        in: "query"
        description: "БИК банка клиента, для текущего авторизованного клиента - '@me'"
        required: false
        type: "string"
        allowEmptyValue: false
      - name: "programId"
        in: "path"
        description: "Id кредитной программы"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/JsonItem«Program»"
          responseSchema:
            $ref: "#/definitions/JsonItem«Program»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
  /subscriptions/providers:
    get:
      tags:
      - "subscription-provider-controller"
      summary: "Список всех доступных подписок"
      operationId: "getAllUsingGET_2"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SubscriptionCategoryDto"
          responseSchema:
            type: "array"
            items:
              $ref: "#/definitions/SubscriptionCategoryDto"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: false
definitions:
  AccountDetailsDto:
    type: "object"
    properties:
      canBeClosed:
        type: "string"
        description: "признак, что может быть закрыт"
        enum:
        - "[0"
        - "1]"
      currencyRequisites:
        description: "Реквизиты валютного счета"
        $ref: "#/definitions/BanksInfoDetailsDto"
      interestRate:
        type: "string"
        description: "текущая ставка"
      reference:
        description: "Данные по справке"
        $ref: "#/definitions/ProductDetailsReferenceDto"
      requisites:
        description: "Реквизиты счета"
        $ref: "#/definitions/AccountDetailsRequisitesDto"
    title: "AccountDetailsDto"
  AccountDetailsRequisitesDto:
    type: "object"
    properties:
      accountNumber:
        type: "string"
        example: "40817810240500004685"
        description: "Номер счета"
      bankName:
        type: "string"
        example: "АО Банк Зенит Сочи"
        description: "Наименование банка"
      bic:
        type: "string"
        example: "040396717"
        description: "БИК банка"
      corrAccount:
        type: "string"
        example: "30101810400000000717"
        description: "Корр счет банка"
      inn:
        type: "string"
        example: "040396717"
        description: "ИНН"
      owner:
        type: "string"
        example: "Чочуа Нино Торникеевна"
        description: "Владелец счета"
      purpose:
        type: "string"
        example: "Перевод собственных средств. НДС не облагается."
        description: "назначение платежа"
    title: "AccountDetailsRequisitesDto"
  AccountDto:
    type: "object"
    properties:
      alias:
        type: "string"
        example: "Зарплатный счет"
        description: "Алиас продукта"
      bic:
        type: "string"
        description: "БИК банка"
      candepo:
        type: "string"
        example: "1"
        description: "признак возможности пополнения продукта"
      cardBalance:
        type: "number"
        description: "баланс счета из процессинга"
      cashbackDetails:
        $ref: "#/definitions/CashbackDetailsDto"
      closed:
        type: "string"
        format: "date"
        example: "2017-01-01"
        description: "дата закрытия продукта"
      credit:
        description: "детали кредита, если счет является кредитным СКС"
        $ref: "#/definitions/CreditDto"
      currcode:
        type: "string"
        example: "EUR"
        description: "валюта продукта"
      details:
        description: "детали счета"
        $ref: "#/definitions/AccountDetailsDto"
      fpsEnabled:
        type: "boolean"
        description: "признак того, что счет выбран как счет для начисления перево\
          дов через СБП"
      isCardAccount:
        type: "boolean"
        description: "признак того, что счет является СКС"
      name:
        type: "string"
        example: "Карточный счет"
        description: "наименование продукта"
      number:
        type: "string"
        example: "40817810100000005651"
        description: "номер продукта"
      opened:
        type: "string"
        format: "date"
        example: "2017-01-01"
        description: "дата открытия продукта"
      parentnumber:
        type: "string"
        example: "40817840500000005373"
        description: "номер счета, к которому привязан продукт"
      rest:
        type: "string"
        example: "17.23"
        description: "баланс продукта"
      status:
        description: "статус продукта"
        $ref: "#/definitions/StatusDto"
      subtype:
        type: "string"
        example: "ClientAccount"
        description: "подтип продукта, специфичный для каждого вида продукта"
      type:
        type: "string"
        example: "account"
        description: "тип продукта"
        enum:
        - "account"
        - "card"
        - "deposit"
        - "credit"
    title: "AccountDto"
  AccountPaymentInfo:
    type: "object"
    properties:
      commission:
        type: "array"
        items:
          $ref: "#/definitions/Commission"
      maxSumma:
        type: "integer"
      minSumma:
        type: "integer"
    title: "AccountPaymentInfo"
  Action:
    type: "object"
    properties:
      link:
        type: "string"
      title:
        type: "string"
    title: "Action"
  AggregatedHistoryOperationsDto:
    type: "object"
    properties:
      categories:
        type: "array"
        items:
          $ref: "#/definitions/CategoryDto"
      filters:
        type: "array"
        items:
          $ref: "#/definitions/FilterDto"
      historyOperations:
        $ref: "#/definitions/PaginationBatch«HistoryOperationDto»"
    title: "AggregatedHistoryOperationsDto"
  AggregationDetailsDto:
    type: "object"
    properties:
      category:
        type: "string"
        description: "Категория операции"
      description:
        type: "string"
        description: "Описание операции"
      hslColor:
        type: "array"
        description: "Цвет заливки (HSL формат)"
        items:
          type: "number"
          format: "float"
      icon:
        type: "string"
        description: "Иконка"
      iconSource:
        type: "string"
        description: "Иконка в формате base64 (может использоваться только для инт\
          ернет операций)"
      promoDesc:
        type: "string"
        description: "Подробное описание промо акции"
      promoTitle:
        type: "string"
        description: "Заголовок промо акции"
      rgbColor:
        type: "string"
        description: "Цвет заливки (RGB формат)"
    title: "AggregationDetailsDto"
  ApplicationAdditionalDocumentDto:
    type: "object"
    properties:
      documentNumber:
        type: "string"
        example: "123145"
        description: "Номер приложенного документа без форматирования"
      fileId:
        type: "string"
        example: "3d539a09-2d66-4990-d0be-5be2cf9ebc1a"
        description: "Идентификатор загруженного файла"
      type:
        type: "string"
        description: "Тип дополнительного документа"
        enum:
        - "INN"
        - "DRIVER_LICENSE"
        - "SNILS"
        - "FOREIGN_PASSPORT"
        - "MILITARY"
    title: "ApplicationAdditionalDocumentDto"
  ApplicationAgreementsDto:
    type: "object"
    properties:
      agreeDataProcessing:
        type: "boolean"
        description: "Пользователь дал согласие на обработку персональных данных"
      protectedBorrower:
        type: "boolean"
        description: "Пользователь присоеденился к программе защищенный заемщик"
      salaryClient:
        type: "boolean"
        description: "Зарплатный клиент банка зенит"
    title: "ApplicationAgreementsDto"
  ApplicationCatalogDto:
    type: "object"
    properties:
      id:
        type: "string"
        example: "male"
        description: "Id (код) значения справочника"
      value:
        type: "string"
        example: "Мужской"
        description: "Значение элемента справочника"
    title: "ApplicationCatalogDto"
  ApplicationContactInfoDto:
    type: "object"
    properties:
      additionalAddress:
        type: "string"
        description: "Дополнительный адрес. Поле не пустое, если пользователь прож\
          ивает не по месту прописки."
      email:
        type: "string"
        example: "megaclient@megadomen.com"
        description: "Email"
      mobilePhone:
        type: "string"
        example: "78000000000"
        description: "Личный номер мобильного телефона для связи"
      reasonToLive:
        description: "Основания для проживания."
        $ref: "#/definitions/ApplicationCatalogDto"
      startLiving:
        type: "string"
        format: "date"
        example: "2010-12-24"
        description: "Дата, когда начал проживать по этому адресу"
    title: "ApplicationContactInfoDto"
  ApplicationExpensesInfoDto:
    type: "object"
    properties:
      monthlyAverage:
        type: "number"
        example: 10000.0
        description: "Среднемесячные расходы"
    title: "ApplicationExpensesInfoDto"
  ApplicationIncomeInfoDto:
    type: "object"
    properties:
      amount:
        type: "number"
        example: 10000.0
        description: "Сумма дохода"
      type:
        description: "Тип дохода"
        $ref: "#/definitions/ApplicationCatalogDto"
    title: "ApplicationIncomeInfoDto"
  ApplicationLoanInfoDto:
    type: "object"
    properties:
      amount:
        type: "number"
        example: 3000.0
        description: "Сумма, на которую оформляется кредит"
      conditionId:
        type: "string"
        example: "3d539a09-2d66-4990-d0be-5be2cf9ebc1a"
        description: "Уникальный id выбранного условия"
      factors:
        type: "array"
        description: "Факторы"
        items:
          $ref: "#/definitions/ApplicationLoanInfoFactorDto"
      loanPurpose:
        type: "string"
        description: "Цели кредитов"
        enum:
        - "REPAIR"
        - "AUTO"
        - "OTHER"
      period:
        type: "integer"
        format: "int32"
        example: 36
        description: "Период, на который выдается кредит. Исчисляется в месяцах"
      programId:
        type: "string"
        example: "3d539a09-2d66-4990-d0be-5be2cf9ebc1a"
        description: "Уникальный id выбранной пользователем программы кредита"
    title: "ApplicationLoanInfoDto"
  ApplicationLoanInfoFactorDto:
    type: "object"
    properties:
      id:
        type: "string"
        example: "3d539a09-2d66-4990-d0be-5be2cf9ebc1a"
        description: "Уникальный идентификатор фактора"
      value:
        type: "boolean"
        description: "true – если необходимо учитывать этот фактор при расчете кре\
          дита"
    title: "ApplicationLoanInfoFactorDto"
  ApplicationPassportFilesDto:
    type: "object"
    properties:
      addressPageFileId:
        type: "string"
        example: "3d539a09-2d66-4990-d0be-5be2cf9ebc1a"
        description: "Идентификатор файла изображения страницы прописки паспорта"
      mainPageFileId:
        type: "string"
        example: "3d539a09-2d66-4990-d0be-5be2cf9ebc1a"
        description: "Идентификатор файла изображения главной страницы паспорта"
    title: "ApplicationPassportFilesDto"
  ApplicationSelfInfoDto:
    type: "object"
    properties:
      birthDate:
        type: "string"
        format: "date"
        example: "1960-05-22"
        description: "Дата рождения клиента банка"
      birthPlace:
        type: "string"
        example: "г. Иваново"
        description: "Место рождения клиента банка"
      citizenship:
        type: "string"
        example: "Российская Федерация"
        description: "Гражданство"
      gender:
        description: "Пол"
        $ref: "#/definitions/ApplicationCatalogDto"
      lawCity:
        type: "string"
        example: "Иваново"
        description: "Город"
      lawCountry:
        type: "string"
        example: "Россия"
        description: "Страна"
      lawCountryCode:
        type: "string"
        example: "RU"
        description: "Код страны"
      lawFlat:
        type: "string"
        example: "2"
        description: "Номер квартиры"
      lawHouse:
        type: "string"
        example: "1"
        description: "Номер дома"
      lawRegion:
        type: "string"
        example: "Ивановская область"
        description: "Регион"
      lawStreet:
        type: "string"
        example: "Иванова"
        description: "Улица"
      lawZip:
        type: "string"
        example: "123456"
        description: "Почтовый индекс"
      name:
        type: "string"
        example: "Иван"
        description: "Имя"
      passportDate:
        type: "string"
        format: "date"
        example: "2010-12-24"
        description: "Дата выдачи паспорта"
      passportNumber:
        type: "string"
        example: "1234"
        description: "Номер паспорта"
      passportOrg:
        type: "string"
        example: "ОВД 1"
        description: "Организация выдавшая паспорт"
      passportOrgCode:
        type: "string"
        example: "001-001"
        description: "Код организации выдавшей паспорт"
      passportSeries:
        type: "string"
        example: "123456"
        description: "Серия паспорта"
      patronymicName:
        type: "string"
        example: "Иванович"
        description: "Отчество"
      surname:
        type: "string"
        example: "Иванов"
        description: "Фамилия"
    title: "ApplicationSelfInfoDto"
  ApplicationSocialStatusDto:
    type: "object"
    properties:
      additionalInfo:
        type: "string"
        example: "Я родственник публичного должностного лица"
        description: "Дополнительная информация"
      childrenAmount:
        type: "integer"
        format: "int32"
        example: 10
        description: "Количество несовершеннолетних детей"
      education:
        description: "Образование"
        $ref: "#/definitions/ApplicationCatalogDto"
      familyStatus:
        description: "Семейное положение"
        $ref: "#/definitions/ApplicationCatalogDto"
      otherDependents:
        type: "integer"
        format: "int32"
        example: 2
        description: "Количество иных иждивенцев"
      prevFullName:
        type: "string"
        example: "Иванов Иван Иванович"
        description: "Предыдущее полное имя в сдучае, если менял"
      shouldServe:
        type: "boolean"
        description: "Подлежите ли вы призыву на срочную военную службу?"
      socialStatus:
        description: "Социальный статус"
        $ref: "#/definitions/ApplicationCatalogDto"
      startWork:
        type: "string"
        format: "date"
        example: "2010-12-24"
        description: "Начало полного трудового стажа"
    title: "ApplicationSocialStatusDto"
  ApplicationWorkPlaceDto:
    type: "object"
    properties:
      companyEmployees:
        description: "Количество сотрудников в организации"
        $ref: "#/definitions/ApplicationCatalogDto"
      companyInn:
        type: "string"
        example: "32214400"
        description: "Инн организации"
      companyName:
        type: "string"
        example: "ООО Рога и копыта"
        description: "Название организации"
      legalAddress:
        type: "string"
        example: "123456, Россия, Ивановская область, г. Иваново, ул Иванова, 1, о\
          фис 1"
        description: "Юридический адрес организации"
      organizationScope:
        description: "Сфера деятельности организации"
        $ref: "#/definitions/ApplicationCatalogDto"
      postLevel:
        description: "Уровень должности"
        $ref: "#/definitions/ApplicationCatalogDto"
      salaryBeforeTax:
        type: "number"
        example: 10000.0
        description: "Зарплата до налогообложения"
      startWork:
        type: "string"
        format: "date"
        example: "2010-12-24"
        description: "Начало работы в компании"
      workPhone:
        type: "string"
        example: "78000000000"
        description: "Рабочий номер организации"
      workType:
        description: "Тип работы (основная / по совместительству)"
        $ref: "#/definitions/ApplicationCatalogDto"
    title: "ApplicationWorkPlaceDto"
  AuthInfoDto:
    type: "object"
    properties:
      city:
        type: "string"
        description: "Город"
      country:
        type: "string"
        description: "Страна"
      date:
        type: "string"
        format: "date-time"
        description: "Дата"
      imeiDeviceBrand:
        type: "string"
        description: "IMEI телефона"
      imeiDeviceModel:
        type: "string"
      imeiDeviceType:
        type: "string"
      region:
        type: "string"
        description: "Область/регион"
      userAgent:
        type: "string"
        example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML,\
          \ like Gecko) Chrome/70.0.3538.110 Safari/537.36"
        description: "Полная информация о браузере"
      userAgentBrowserFamily:
        type: "string"
        example: "Google chrome"
        description: "Название браузера"
      userAgentBrowserNameVersion:
        type: "string"
        example: "Google chrome 70"
        description: "Версия браузера"
      userAgentBrowserType:
        type: "string"
        example: "browser"
        description: "Тип браузера"
      userAgentDeviceBrand:
        type: "string"
        example: "Iphone"
        description: "Бренд устройства (только для мобильных телефонов)"
      userAgentDeviceModel:
        type: "string"
        example: "XS Max"
        description: "Модель устройства (только для мобильных телефонов)"
      userAgentDeviceType:
        type: "string"
        example: "MOBILE, DESKTOP"
        description: "Тип устройства"
      userAgentOSFamily:
        type: "string"
        example: "Microsoft Windows"
        description: "Операционная система"
      userAgentOSNameVersion:
        type: "string"
        example: "Microsoft Windows 10.0"
        description: "Модель операционной системы"
    title: "AuthInfoDto"
  BadgeInfoDto:
    type: "object"
    properties:
      badgeType:
        type: "string"
        description: "Тип бейджика"
        enum:
        - "GIBDD"
        - "TAX"
        - "HCS"
        - "APPCRED"
      count:
        type: "integer"
        format: "int32"
        example: 10
        description: "Количество не просмотренных уведомлений"
    title: "BadgeInfoDto"
  BankRequestCardDto:
    type: "object"
    properties:
      averageIncome:
        type: "string"
        description: "Среднемесячный доход"
      cardCategory:
        type: "string"
        description: "Категория карты"
      cardCurrency:
        type: "string"
        description: "Валюта карты"
      cardName:
        type: "string"
        description: "Карта (название продукта)"
      city:
        type: "string"
        description: "Город"
      creationDate:
        type: "string"
        format: "date-time"
        description: "дата и время заявки"
      creditLimit:
        type: "string"
        description: "Желаемый кредитный лимит"
      internetBank:
        type: "boolean"
        description: "Канал подачи заявки"
      paymentSystem:
        type: "string"
        description: "Платежная система"
      phone:
        type: "string"
        description: "Телефон для связи"
      productId:
        type: "string"
        description: "идентификатор продукта"
      timeToCall:
        type: "string"
        description: "Во сколько можно звонить"
    title: "BankRequestCardDto"
  BankRequestCreditDto:
    type: "object"
    properties:
      averageIncome:
        type: "string"
        description: "Среднемесячный доход"
      city:
        type: "string"
        description: "Город"
      creationDate:
        type: "string"
        format: "date-time"
        description: "дата и время заявки"
      creditGoal:
        type: "string"
        description: "Цель кредита"
      creditLength:
        type: "string"
        description: "Срок кредита (лет)"
      internetBank:
        type: "boolean"
        description: "Канал подачи заявки"
      phone:
        type: "string"
        description: "Телефон для связи"
      productId:
        type: "string"
        description: "идентификатор продукта"
      region:
        type: "string"
        description: "Регион"
      specials:
        type: "array"
        description: "Спецусловия"
        items:
          type: "string"
      sum:
        type: "string"
        description: "Сумма кредита (рублей)"
      timeToCall:
        type: "string"
        description: "Во сколько можно звонить"
    title: "BankRequestCreditDto"
  BankRequestDetailsDto:
    type: "object"
    properties:
      creationDate:
        type: "string"
        format: "date-time"
        description: "дата и время заявки"
    title: "BankRequestDetailsDto"
  BankRequestDto:
    type: "object"
    properties:
      clientId:
        $ref: "#/definitions/ClientId"
      details:
        $ref: "#/definitions/BankRequestDetailsDto"
      documentId:
        type: "string"
      documentNumber:
        type: "string"
      emailCategory:
        type: "string"
        enum:
        - "DEFAULT"
        - "OPERATION"
        - "ACCOUNT"
        - "CARD"
        - "CREDIT"
        - "DEPOSIT"
        - "FEEDBACK"
        - "CUSTOMER_APPLICATION"
        - "CUSTOMER_APPLICATION_CARD"
        - "LOAN_REPAYMENT"
      requestType:
        type: "string"
        enum:
        - "credit_card_request"
        - "debit_card_request"
        - "cash_credit_request"
        - "auto_credit_request"
        - "mortgage_credit_request"
        - "partial_loan_repayment_request"
        - "full_loan_repayment_request"
      subject:
        type: "string"
    title: "BankRequestDto"
  BankRequestLoanRepaymentDto:
    type: "object"
    properties:
      account:
        type: "string"
        description: "Счёт списания"
      birthDate:
        type: "string"
        format: "date"
        description: "Дата рождения"
      contactEmail:
        type: "string"
        description: "Email"
      contractDate:
        type: "string"
        format: "date"
        description: "Дата договора"
      contractNumber:
        type: "string"
        description: "Договор №"
      creationDate:
        type: "string"
        format: "date-time"
        description: "дата и время заявки"
      idNbs:
        type: "string"
        description: "Ид. в НБС"
      includingMonthlyPayment:
        type: "boolean"
        description: "Включая ежемесячный платеж"
      job:
        type: "string"
        description: "Место работы"
      loanType:
        type: "string"
        example: "mortgage"
        description: "Тип кредита (авто, потребительский или ипотека)"
        enum:
        - "cash"
        - "auto"
        - "mortgage"
      maturityDate:
        type: "string"
        format: "date"
        description: "Дата погашения"
      originCreditAmount:
        type: "string"
        description: "Сумма кредита в случае, когда источник средств для досрочног\
          о возврата кредита - кредит (originSource = credit)"
      originCreditBankName:
        type: "string"
        description: "Наименование банка в случае, когда источник средств для доср\
          очного возврата кредита - кредит (originSource = credit)"
      originSource:
        type: "string"
        example: "own_money"
        description: "Источник средств для досрочного возврата кредита - собственн\
          ые средства, кредит, государственная субсидия, материнский капитал, проч\
          ее"
        enum:
        - "own_money"
        - "credit"
        - "government_help"
        - "mother_family_capital"
        - "other"
      originSourceDescription:
        type: "string"
        description: "Описание источника средств для ЧДП/ПДП в случае, когда указа\
          но 'прочее' (originSource = other)"
      recalculatePaymentSum:
        type: "boolean"
        description: "Перерасчет суммы платежа"
      recalculationType:
        type: "string"
        example: "reduce_monthly_payment"
        description: "Тип перерасчёта при ЧДП - перерасчет ежемесячного платежа ил\
          и сокращение срока возврата кредита"
        enum:
        - "reduce_monthly_payment"
        - "reduce_credit_period"
      requestCreationDate:
        type: "string"
        format: "date"
        description: "Дата формирования заявки"
      sendNewPaymentSchedule:
        type: "boolean"
        description: "Высылать обновлённый график погашения"
      sum:
        type: "string"
        description: "Сумма (из заявки)"
    title: "BankRequestLoanRepaymentDto"
  BanksInfoDetailsDto:
    type: "object"
    properties:
      account:
        type: "string"
        example: "with PJSC BANK ZENIT"
        description: "Счет получателя"
      beneficiaryBank:
        type: "string"
        example: "PJSC BANK ZENIT, MOSCOW."
        description: "Банк получателя"
      beneficiarySwift:
        type: "string"
        example: "ZENIRUMM"
        description: "S.W.I.F.T. банка получателя"
      corrAccount:
        type: "string"
        example: "30101810350040000851"
        description: "Корреспондентский счет"
      curr:
        type: "string"
        example: "USD"
        description: "Валюта счета"
      intermBank:
        type: "string"
        example: "JPMORGAN CHASE BANK, NEW-YORK"
        description: "Банк-корреспондент"
      intermSwift:
        type: "string"
        example: "CHASUS33"
        description: "S.W.I.F.T. банка-корреспондента"
    title: "BanksInfoDetailsDto"
  BaseRate:
    type: "object"
    properties:
      buyAt:
        type: "string"
      currency:
        type: "string"
      diff:
        type: "string"
      lotSize:
        type: "integer"
        format: "int32"
      sellAt:
        type: "string"
    title: "BaseRate"
  Benefit:
    type: "object"
    properties:
      icon:
        type: "string"
      label:
        type: "string"
      postfix:
        type: "string"
      value:
        type: "string"
    title: "Benefit"
  BillingRequestField:
    type: "object"
    properties:
      fieldID:
        type: "string"
        example: "1"
        description: "Id поля"
      fieldName:
        type: "string"
        example: "%recipient"
        description: "Наименование поля"
      fieldValue:
        type: "string"
        example: "%recipient"
        description: "Значение поля"
    title: "BillingRequestField"
  BillingResponseField:
    type: "object"
    properties:
      DataType:
        type: "string"
        example: "String"
        description: "Тип значения поля"
      Hint:
        type: "string"
        example: "Введите ИНН"
        description: "Подсказка поля"
      Mask:
        type: "string"
      Max:
        type: "string"
        example: "10"
        description: "Мах значение поля"
      Min:
        type: "string"
        example: "10"
        description: "Мин значение поля"
      Name:
        type: "string"
        example: "%recipient"
        description: "Наименование поля"
      Note:
        type: "string"
      OnChange:
        type: "string"
      Order:
        type: "string"
        example: "1"
        description: "Порядок расположения поля"
      Print:
        type: "string"
        enum:
        - "true"
        - "false"
      ReadOnly:
        type: "string"
        example: "true"
        description: "Только для чтения"
        enum:
        - "true"
        - "false"
      RegExp:
        type: "string"
        example: "\\d"
        description: "Регулярное выражение для значения поля"
      Req:
        type: "string"
        example: "false"
        description: "Обязательное"
        enum:
        - "true"
        - "false"
      RightNum:
        type: "string"
      Sum:
        type: "string"
        enum:
        - "true"
        - "false"
      Template:
        type: "string"
        example: "12345678"
        description: "Шаблон поля"
        enum:
        - "true"
        - "false"
      Type:
        type: "string"
        example: "Input"
        description: "Тип элемента отображения поля"
        enum:
        - "Input"
        - "Select"
        - "Period"
        - "CheckBox"
        - "Memo"
        - "SelectTable"
        - "InpuTable"
      Visible:
        type: "string"
        example: "true"
        description: "Видимость поля"
        enum:
        - "true"
        - "false"
      fieldValue:
        type: "string"
        example: "false"
        description: "Значение поля"
      id:
        type: "string"
    title: "BillingResponseField"
  BillingSubscriptionRq:
    type: "object"
    properties:
      dboid:
        type: "string"
        example: "1234"
        description: "Уникальный индентификатор операции"
      fields:
        type: "array"
        description: "Поля операции"
        items:
          $ref: "#/definitions/BillingRequestField"
      step:
        type: "integer"
        format: "int32"
        example: 1
        description: "Номер шага операции"
    title: "BillingSubscriptionRq"
  BillingSubscriptionRs:
    type: "object"
    properties:
      dboid:
        type: "string"
        example: "1234"
        description: "Уникальный индентификатор операции"
      fields:
        type: "array"
        description: "Поля операции"
        items:
          $ref: "#/definitions/BillingResponseField"
      step:
        type: "integer"
        format: "int32"
        example: 1234
        description: "Уникальный индентификатор операции"
    title: "BillingSubscriptionRs"
  BudgetOrderDetailsDto:
    type: "object"
    required:
    - "inn"
    - "kbk"
    - "kpp"
    - "name"
    - "nds"
    - "oktmo"
    - "payerStatus"
    - "purpose"
    - "uin"
    properties:
      bankName:
        type: "string"
        description: "Банк получателя"
      documentDate:
        type: "string"
        description: "Налоговый период (поле 107 ПД)"
      documentNumber:
        type: "string"
        description: "Номер налогового документа (поле 108 ПД)"
      individualInfo:
        type: "string"
        description: "Идентификатор сведений о физическом лице (поле 108)"
      inn:
        type: "string"
        description: "ИНН получателя (поле 61)"
      kbk:
        type: "string"
        description: "КБК (поле 104)"
      kpp:
        type: "string"
        description: "КПП получателя (поле 103)"
      name:
        type: "string"
        description: "Наименование получателя (поле 8)"
      nds:
        type: "string"
        description: "Признак необходимости НДС"
        enum:
        - "'no_tax'"
        - "'included'"
      oktmo:
        type: "string"
        description: "ОКТМО получателя (поле 105)"
      payerInfo:
        type: "string"
        description: "Сведения о плательщике"
      payerInn:
        type: "string"
        description: "ИНН плательщика (поле 60)"
      payerStatus:
        type: "string"
        description: "Статус плательщика (составителя) (поле 101)"
      purpose:
        type: "string"
        description: "Назначения платежа (поле 24)"
      uin:
        type: "string"
        description: "УИН (поле 22)"
    title: "BudgetOrderDetailsDto"
  BudgetPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        description: "Для платежей в бюджет"
        $ref: "#/definitions/BudgetOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      invoiceId:
        type: "string"
        example: "GISGMP_18810177190110104783"
        description: "Сведения об индентификаторе начисления"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        description: "Сведения о получателе платежа/перевода"
        $ref: "#/definitions/PaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "BudgetPaymentOrderDto"
  BudgetPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/BudgetPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "BudgetPaymentTemplateDto"
  Card:
    type: "object"
    properties:
      action:
        $ref: "#/definitions/Action"
      advantages:
        type: "array"
        items:
          type: "string"
      benefits:
        type: "array"
        items:
          $ref: "#/definitions/Benefit"
      category:
        type: "string"
      color:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      currencies:
        type: "array"
        items:
          type: "string"
      desc:
        type: "array"
        items:
          $ref: "#/definitions/Desc"
      id:
        type: "string"
      image:
        type: "string"
      name:
        type: "string"
      payment:
        type: "string"
      type:
        type: "string"
    title: "Card"
  CardBlockRequestDetailsDto:
    type: "object"
    properties:
      description:
        type: "string"
      code:
        type: "string"
        enum:
        - "LOST"
        - "STOLEN"
        - "UNBLOCK"
        - "OTHER"
    title: "CardBlockRequestDetailsDto"
  CardBlockResponseDto:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      type:
        type: "string"
        enum:
        - "SUCCESS"
    title: "CardBlockResponseDto"
  CardDetailsCashbackDto:
    type: "object"
    properties:
      cashbackExpected:
        type: "number"
        example: 2123.45
        description: "Ожидаемая сумма кэшбэка"
      cashbackPaid:
        type: "number"
        example: 1251.65
        description: "Выплаченная сумма кэшбэка"
      outstandingAmount:
        type: "number"
        example: 10251.65
        description: "Сумма, на которую необходимо выполнить операции до конца тек\
          ущего периода для получения кэшбэка"
      programCode:
        type: "string"
        description: "код программы cashback, если programCode=\"\", то на карте н\
          ет кэшбэка"
      requiredAmount:
        type: "number"
        example: 20000.0
        description: "Сумма, на которую необходимо выполнить операции в каждом пер\
          иоде для получения кэшбэка в соответствии с условиями обслуживания"
      status:
        type: "string"
        description: "Наличие данных по кэшбэку: ok - по карте есть программа лоял\
          ьности и данные доступны, err - данные недоступны (ошибка при запросе да\
          нных), nocb - по данной карте нет программы лояльности"
        enum:
        - "ok"
        - "err"
        - "nocb"
    title: "CardDetailsCashbackDto"
  CardDetailsDto:
    type: "object"
    properties:
      authPinAttempts:
        type: "number"
        description: "Счётчик некорректного ввода PIN"
      brand:
        type: "string"
        example: "MC"
        description: "Платежная система карты"
        enum:
        - "VISA"
        - "MC"
        - "MIR"
        - "UP"
      cardHolder:
        type: "string"
        description: "Идентификатор владельца карты. Для дополнительных карт отобр\
          ажается имя клиента, к которому привязана карта (не счетовой контракт)"
      cashback:
        description: "данные по кэшбэку"
        $ref: "#/definitions/CardDetailsCashbackDto"
      category:
        type: "string"
        description: "Категория карты"
      creditInfo:
        description: "детали кредитной карты"
        $ref: "#/definitions/CredCardInfoDto"
      currencyRequisites:
        description: "Реквизиты валютного счета"
        $ref: "#/definitions/BanksInfoDetailsDto"
      isCreditCard:
        type: "boolean"
        description: "признак кредитной карты"
      islinked:
        type: "string"
        description: "признак доп. карты"
        enum:
        - "[0"
        - "1]"
      minpay:
        type: "string"
      minpaydate:
        type: "string"
        format: "date"
      mobilepayment:
        type: "array"
        description: "доступные платежные системы"
        items:
          $ref: "#/definitions/CardDetailsMobilePaymentDto"
      money:
        description: "данные о балансе карты"
        $ref: "#/definitions/CardDetailsMoneyDto"
      nfcAccess:
        type: "string"
        description: "Название продукта в системе процессинга"
      services:
        description: "дополнительные данные по карте"
        $ref: "#/definitions/CardDetailsServicesDto"
      subStatus:
        description: "статус карты из процессинга"
        $ref: "#/definitions/StatusDto"
      subType:
        type: "string"
        description: "Код субтипа карточного контракта, по которому однозначно опр\
          еделяется дизайн карты"
      token:
        type: "string"
        description: "токен привязки карты"
      type:
        type: "string"
        example: "debit"
        description: "Тип карты"
        enum:
        - "debit"
        - "credit"
      validto:
        type: "string"
        example: "11/23"
        description: "Срок действия карты в формате MM/YY"
    title: "CardDetailsDto"
  CardDetailsMobilePaymentDto:
    type: "object"
    properties:
      dateFrom:
        type: "string"
        format: "date"
        description: "дата активации"
      deviceType:
        type: "string"
        description: "тип устройства – телефон, планшет и т.д."
      paySystem:
        type: "string"
        description: "информация о token provider"
        enum:
        - "Apple"
        - "Android"
        - "Samsung"
    title: "CardDetailsMobilePaymentDto"
  CardDetailsMoneyDto:
    type: "object"
    properties:
      available:
        type: "string"
        description: "доступный остаток"
      creditLimit:
        type: "string"
        description: "неиспользованный кредитный лимит"
      reserved:
        type: "string"
        description: "сумма заблокированных средств"
      self:
        type: "string"
        description: "сумма собственных средств"
    title: "CardDetailsMoneyDto"
  CardDetailsServicesDto:
    type: "object"
    properties:
      block:
        type: "string"
        description: "возможность блокировки"
      changeLimits:
        type: "string"
        description: "возможность изменения лимитов по карте"
      geoLimits:
        $ref: "#/definitions/CardDetailsServicesGeoLimitsDto"
      reference:
        $ref: "#/definitions/ProductDetailsReferenceDto"
      sms:
        $ref: "#/definitions/CardDetailsServicesSmsDto"
      tranWindow:
        $ref: "#/definitions/CardDetailsServicesTranWindowDto"
    title: "CardDetailsServicesDto"
  CardDetailsServicesGeoLimitsDto:
    type: "object"
    properties:
      countries:
        type: "array"
        description: "массив стран, в которых разрешено совершать операции"
        items:
          type: "string"
      status:
        type: "string"
        description: "признак включения геоограничителей"
        enum:
        - "[0"
        - "1]"
    title: "CardDetailsServicesGeoLimitsDto"
  CardDetailsServicesSmsDto:
    type: "object"
    properties:
      currCode:
        type: "string"
        description: "код валюты для tarrif"
      status:
        type: "string"
        description: "признак включения смс-уведомлениий"
        enum:
        - "[0"
        - "1]"
      tarrif:
        type: "string"
        description: "стоимость  услуги 40 рублей в месяц"
    title: "CardDetailsServicesSmsDto"
  CardDetailsServicesTranWindowDto:
    type: "object"
    properties:
      duration:
        type: "string"
        description: "сколько минут действует окно"
      onAt:
        type: "string"
        description: "время, когда окно было включено"
      operations:
        type: "string"
        description: "сколько всего операций можно совершить в рамках окна"
      operationsLeft:
        type: "string"
        description: "сколько осталось операций"
      status:
        type: "string"
        description: "признак включения транзакционного окна"
        enum:
        - "[0"
        - "1]"
      sum:
        type: "string"
      sumLeft:
        type: "string"
    title: "CardDetailsServicesTranWindowDto"
  CardDto:
    type: "object"
    properties:
      alias:
        type: "string"
        example: "Зарплатный счет"
        description: "Алиас продукта"
      bic:
        type: "string"
        description: "БИК банка"
      candepo:
        type: "string"
        example: "1"
        description: "признак возможности пополнения продукта"
      closed:
        type: "string"
        format: "date"
        example: "2017-01-01"
        description: "дата закрытия продукта"
      currcode:
        type: "string"
        example: "EUR"
        description: "валюта продукта"
      details:
        description: "Детали карты"
        $ref: "#/definitions/CardDetailsDto"
      name:
        type: "string"
        example: "Карточный счет"
        description: "наименование продукта"
      number:
        type: "string"
        example: "40817810100000005651"
        description: "номер продукта"
      opened:
        type: "string"
        format: "date"
        example: "2017-01-01"
        description: "дата открытия продукта"
      parentnumber:
        type: "string"
        example: "40817840500000005373"
        description: "номер счета, к которому привязан продукт"
      rest:
        type: "string"
        example: "17.23"
        description: "баланс продукта"
      status:
        description: "статус продукта"
        $ref: "#/definitions/StatusDto"
      subtype:
        type: "string"
        example: "ClientAccount"
        description: "подтип продукта, специфичный для каждого вида продукта"
      type:
        type: "string"
        example: "account"
        description: "тип продукта"
        enum:
        - "account"
        - "card"
        - "deposit"
        - "credit"
    title: "CardDto"
  CardLimitChangeResponseDto:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      status:
        type: "string"
        enum:
        - "success"
    title: "CardLimitChangeResponseDto"
  CardLimitsDto:
    type: "object"
    properties:
      code:
        type: "string"
        example: "TRANS_D"
        description: "Код"
        enum:
        - "TRANS_D"
        - "TRANS_M"
        - "EL_COMM"
        - "ABROAD"
      description:
        type: "string"
        example: "Лимит по карте"
        description: "Описание"
      indicator:
        type: "string"
        example: "Y"
        description: "Индикатор включения, отключения лимита"
        enum:
        - "Y"
        - "N"
      remaining:
        type: "string"
        example: "6000.0"
        description: "Остаток по лимиту"
      sum:
        type: "string"
        example: "20000.0"
        description: "Сумма"
    title: "CardLimitsDto"
  CardNotificationDto:
    type: "object"
    properties:
      dateEnabled:
        type: "string"
        format: "date"
        description: "Дата с которой нотификация установлена"
      type:
        type: "string"
        description: "Тип установленной нотификации: sms_transact - получение смс\
          \ по транзакциям, не включая остаток по карте; sms_balance - получение с\
          мс с остатком по карте"
        enum:
        - "sms_transact"
        - "sms_balance"
    title: "CardNotificationDto"
  CardNotificationRequest:
    type: "object"
    required:
    - "validTo"
    properties:
      bic:
        type: "string"
      clientId:
        type: "string"
      number:
        type: "string"
      type:
        type: "string"
        example: "sms_balance"
        description: "Тип установленной нотификации: sms_transact - получение смс\
          \ по транзакциям, не включая остаток по карте; sms_balance - получение с\
          мс с остатком по карте"
        enum:
        - "sms_transact"
        - "sms_balance"
      validTo:
        type: "string"
        pattern: "^\\d{2}/\\d{2}$"
    title: "CardNotificationRequest"
  CardNotificationsDto:
    type: "object"
    properties:
      notifications:
        type: "array"
        description: "Список подключенных нотификаций"
        items:
          $ref: "#/definitions/CardNotificationDto"
      number:
        type: "string"
        description: "Номер карты"
    title: "CardNotificationsDto"
  CardPaymentInfo:
    type: "object"
    properties:
      commission:
        type: "array"
        items:
          $ref: "#/definitions/Commission"
      maxSumma:
        type: "integer"
      minSumma:
        type: "integer"
    title: "CardPaymentInfo"
  CardPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      message:
        type: "string"
        description: "сообщение получателю платежа"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        $ref: "#/definitions/CardPaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "CardPaymentOrderDto"
  CardPaymentOrderTargetDto:
    type: "object"
    required:
    - "number"
    properties:
      number:
        type: "string"
        description: "номер карты получателя платежа"
        pattern: "^[2-7][0-9]{15,18}$"
    title: "CardPaymentOrderTargetDto"
  CardPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/CardPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "CardPaymentTemplateDto"
  CardStyle:
    type: "object"
    properties:
      brand:
        type: "string"
        example: "MC"
        description: "Платежная система карты"
        enum:
        - "VISA"
        - "MC"
        - "MIR"
        - "UP"
      category:
        type: "string"
        example: "Gold"
        description: "Категория карты"
      hexColor:
        type: "string"
        example: "1EA8AF"
        description: "Цвет оформления карты"
    title: "CardStyle"
  CardToPhoneNumberTransferCommissionDto:
    type: "object"
    required:
    - "phoneNumber"
    - "sourceNumber"
    - "sourceValidTo"
    properties:
      phoneNumber:
        type: "string"
        description: "телефонный номер на который осуществляется перевод"
      sourceNumber:
        type: "string"
        description: "маскированный или полный номер карты отправителя платежа"
      sourceValidTo:
        type: "string"
        description: "срок действия карты в формате MM/YY"
        pattern: "\\d{2}/\\d{2}"
      transferAmount:
        type: "number"
        description: "сумма перевода"
        minimum: 0.0
        exclusiveMinimum: false
      transferCurrency:
        type: "string"
        description: "валюта списания"
    title: "CardToPhoneNumberTransferCommissionDto"
  CardTokenCreateRequest:
    type: "object"
    required:
    - "cvc"
    - "number"
    - "validTo"
    properties:
      cvc:
        type: "string"
        example: "232"
        description: "проверочный код карты"
        pattern: "^\\d{3}$"
      desc:
        type: "string"
        example: "Иванов И."
        description: "Описание привязанной карты"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      number:
        type: "string"
        example: "4012001037141112"
        description: "полный номер карты"
        pattern: "^[2-7][0-9]{15,18}$"
      validTo:
        type: "string"
        example: "12/23"
        description: "срок действия карты"
        pattern: "^\\d{2}/\\d{2}$"
    title: "CardTokenCreateRequest"
  CardTokenDto:
    type: "object"
    properties:
      alias:
        type: "string"
        example: "Mastercard Gold"
        description: "Алиас для карты"
      bankName:
        type: "string"
        example: "Банк ЗЕНИТ Сочи"
        description: "Наименование банка - эмитента карты"
      belong:
        type: "string"
        description: "Признак принадлежности карты: OURS - карта клиента, BANK - к\
          арта клиента Банка, OTHER - другая карта"
        enum:
        - "OURS"
        - "BANK"
        - "OTHER"
      desc:
        type: "string"
        example: "Губаз Асида Яковлевна"
        description: "Описание карты (часто ФИО владельца)"
      hidden:
        type: "boolean"
        description: "Признак, что продукт был добровольно скрыт пользователем"
      id:
        type: "string"
        example: "14e6cd4c-c88e-45f5-88cc-ae934d8d1e20"
        description: "Идентификатор"
      maskedNumber:
        type: "string"
        example: "557030______7905"
        description: "Маскированный номер карты, по которй получен токен"
      name:
        type: "string"
        example: "Mastercard Gold *8954"
        description: "Наименование карты"
      paymentSystem:
        type: "string"
        description: "Платежная система карты: VISA - Visa, MC - Mastercard, MIR -\
          \ МИР, UP - Unionpay"
        enum:
        - "VISA"
        - "MC"
        - "MIR"
        - "UP"
      rgbColor:
        type: "string"
        example: "1EA8AF"
        description: "Цвет карты в формате RGB"
      token:
        type: "string"
        example: "2D7AA4920565490D868C710154C3BD1E"
        description: "Токен карты"
      validTo:
        type: "string"
        example: "08/21"
        description: "Срок действия карты, по которой получен токен"
    title: "CardTokenDto"
  CardTransferCommissionCheckDto:
    type: "object"
    required:
    - "bic"
    - "sourceNumber"
    - "sourceValidTo"
    - "targetNumber"
    properties:
      bic:
        type: "string"
        example: "040396717"
        description: "БИК"
        pattern: "^[0-9]{9}$"
      sourceNumber:
        type: "string"
        example: "543236______3061"
        description: "маскированный или полный номер карты отправителя платежа"
      sourceValidTo:
        type: "string"
        example: "12/19"
        description: "срок действия карты в формате MM/YY"
        pattern: "\\d{2}/\\d{2}"
      targetNumber:
        type: "string"
        example: "543236______3061"
        description: "маскированный или полный номер карты получателя платежа"
      transferAmount:
        type: "number"
        example: 10.0
        description: "сумма перевода"
        minimum: 0.0
        exclusiveMinimum: false
      transferCurrency:
        type: "string"
        example: "RUR"
        description: "валюта списания"
        enum:
        - "RUR"
    title: "CardTransferCommissionCheckDto"
  CardTransferCommissionResponse:
    type: "object"
    required:
    - "commission"
    - "valid"
    properties:
      commission:
        type: "number"
        example: 1.1
        description: "размер комиссии для перевода"
      messageCode:
        type: "integer"
        format: "int32"
        description: "машиночитаемое сообщение о ошибке (0 - OK, 1 - недостаточно\
          \ средств, 2 - совпадают номера карт отправителя и получателя, 3 - неизв\
          естная карта отправителя, 4 данные по карте отправителя не удалось найти\
          \ в WSO, 5 - неподдерживаемая валюта перевода)"
      valid:
        type: "boolean"
        description: "достаточно ли денег для перевода"
    title: "CardTransferCommissionResponse"
  CashbackDetailsDto:
    type: "object"
    properties:
      accountedForCashback:
        type: "string"
        description: "Сумма проводок по СКС, учтенная для выполнения условия начис\
          ления кэшбэка"
      accountedForInterestRate:
        type: "string"
        description: "Сумма проводок по СКС, учтенная для выполнения условия приме\
          нения процентной ставки"
      activeInterestRate:
        type: "string"
        description: "Действующая процентная ставка по СКС"
      fixedThresholdForCashback:
        type: "string"
        description: "Сумма операций по СКС, которая необходима для выполнения усл\
          овия применения кэшбека. Фиксированное число"
      fixedThresholdForInterestRate:
        type: "string"
        description: "Сумма операций по СКС, которая необходима для выполнения усл\
          овия применения процентой ставки. Фиксированное число"
      lastMonthCashback:
        type: "string"
        description: "Сумма выплаченного кэшбэка за прошлый месяц"
      lastMonthEarnedInterest:
        type: "string"
        description: "Сумма начисленных процентов за прошлый месяц"
      outstandingAmount:
        type: "string"
        example: "10251.65"
        description: "Сумма, на которую необходимо выполнить операции до конца тек\
          ущего периода для получения кэшбэка"
      plannedCashback:
        type: "string"
        description: "Сумма из счётчика предварительно начисленного кэшбэка (ожида\
          емый кэшбэк)"
      thresholdForInterestRate:
        type: "string"
        description: "Сумма операций по СКС, которая необходима для выполнения усл\
          овия применения процентой ставки"
      withCashback:
        type: "boolean"
        description: "Признак начисления кэшбэка"
    title: "CashbackDetailsDto"
  CategoryDto:
    type: "object"
    properties:
      amount:
        type: "number"
      caption:
        type: "string"
      currency:
        type: "string"
      hslColor:
        type: "array"
        items:
          type: "number"
          format: "float"
      icon:
        type: "string"
      iconSource:
        type: "string"
      percentage:
        type: "number"
      rgbColor:
        type: "string"
      subCategories:
        type: "array"
        items:
          $ref: "#/definitions/CategoryDto"
    title: "CategoryDto"
  ChangePinRequestDetailsDto:
    type: "object"
    properties:
      passNum:
        type: "string"
        description: "6 цифр паспорта"
        enum:
        - "\\d{6}"
      phoneNumber:
        type: "string"
        description: "номер телефона"
        enum:
        - "\\d{12}"
      pin:
        type: "string"
        description: "четыре цифры ПИН кода"
        enum:
        - "\\d{4}"
    title: "ChangePinRequestDetailsDto"
  ChangePinResponseDto:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
        - "success"
    title: "ChangePinResponseDto"
  ClientId:
    type: "object"
    properties:
      bic:
        type: "string"
      userId:
        type: "string"
    title: "ClientId"
  ClientPassportDto:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date"
        description: "Дата выдачи паспорта"
      number:
        type: "string"
        example: "123456"
        description: "Номер паспорта"
      organ:
        type: "string"
        example: "ОВД 1"
        description: "Организация выдавшая паспорт"
      organCode:
        type: "string"
        example: "001-001"
        description: "Код организации выдавшей документ"
      series:
        type: "string"
        example: "1234"
        description: "Серия паспорта"
    title: "ClientPassportDto"
  ClientProfileDto:
    type: "object"
    properties:
      bic:
        type: "string"
        description: "Бик клиента"
      birthDate:
        type: "string"
        format: "date"
        description: "Дата рождения клиента банка"
      birthPlace:
        type: "string"
        example: "г. Воронеж"
        description: "Место рождения клиента банка"
      branchId:
        type: "string"
      clientId:
        type: "string"
        description: "ID клиента"
      docDate:
        type: "string"
        format: "date"
        description: "Дата выдачи документа"
      docNumber:
        type: "string"
        description: "Номер документа"
      docOrgan:
        type: "string"
        example: "ОВД 1"
        description: "Организация выдавшая документ"
      docOrganCode:
        type: "string"
        example: "001-001"
        description: "Код организации выдавшей документ"
      docSeries:
        type: "string"
        description: "Серия документа"
      docType:
        type: "string"
        description: "Тип документа"
      email:
        type: "string"
        description: "Email клиента"
      inn:
        type: "string"
        description: "ИНН"
      internationalName:
        type: "string"
        description: "Имя в международном формате (на латинице)"
      lawAddress:
        type: "string"
        description: "Полный адрес"
      lawCity:
        type: "string"
        description: "Город"
      lawCountry:
        type: "string"
        description: "Страна"
      lawCountryCode:
        type: "string"
        description: "Код страны"
      lawFlat:
        type: "string"
        description: "Номер квартиры"
      lawHouse:
        type: "string"
        description: "Номер дома"
      lawStreet:
        type: "string"
        description: "Улица"
      lawZip:
        type: "string"
        description: "Почтовый индекс"
      name:
        type: "string"
        description: "Имя"
      nameFull:
        type: "string"
        description: "Полное имя"
      patronymicName:
        type: "string"
        description: "Отчество"
      phoneHome:
        type: "string"
        description: "Домашний телефон"
      phoneMobile:
        type: "string"
        description: "Мобильный телефон"
      phoneSms:
        type: "string"
        description: "Телефон для уведомлений по СМС"
      phoneWork:
        type: "string"
        description: "Рабочий телефон"
      readOnly:
        type: "boolean"
      surname:
        type: "string"
        description: "Фамилия"
      w4clientId:
        type: "string"
        description: "ИД клиента в инверсии"
    title: "ClientProfileDto"
  ClientSearchInfo:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Имя"
    title: "ClientSearchInfo"
  Commission:
    type: "object"
    properties:
      absolute:
        type: "boolean"
      commissionValue:
        type: "integer"
      maxSumma:
        type: "integer"
      minSumma:
        type: "integer"
    title: "Commission"
  CommissionResult:
    type: "object"
    properties:
      commission:
        type: "number"
      value:
        type: "number"
    title: "CommissionResult"
  Condition:
    type: "object"
    properties:
      amount:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      condition:
        type: "string"
      contribution:
        type: "number"
        format: "double"
      factors:
        type: "array"
        items:
          $ref: "#/definitions/Factor"
      id:
        type: "string"
      ltv:
        type: "number"
        format: "double"
      period:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      rate:
        type: "number"
        format: "double"
    title: "Condition"
  CreateSubscriptionItemDto:
    type: "object"
    properties:
      documentValue:
        type: "string"
        example: "11АА111112"
        description: "Значение лицевого счета, водительского удостоверения, стс ил\
          и инн"
      name:
        type: "string"
        example: "Мои штрафы"
        description: "Альяс для подписки"
      operatorCode:
        type: "string"
        example: "GISGMP||GIBDD"
        description: "Передается оператор код текущего провайдера"
      categoryType:
        type: "string"
        enum:
        - "GIBDD"
        - "TAX"
        - "HCS"
      documentType:
        type: "string"
        enum:
        - "uin"
        - "inn"
        - "driver_license"
        - "sts"
        - "passport_rf"
        - "birth_certificate"
        - "sailor_passport"
        - "officer"
        - "military"
        - "temporary_identity_card"
        - "release_certificate"
        - "foreign_passport"
        - "residence"
        - "refugee_certificate"
        - "migration_card"
        - "passport_ussr"
        - "snils"
    title: "CreateSubscriptionItemDto"
  CreateTemplateRequestDto:
    type: "object"
    required:
    - "operationId"
    - "templateName"
    properties:
      dayOfPeriod:
        type: "string"
        description: "День недели или число месяца"
      endDate:
        type: "string"
        format: "date-time"
        description: "Дата окончания выполнения регулярных платежей"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      isLastDayOfPeriod:
        type: "boolean"
        description: "Последний день месяца/недели"
      isTimetable:
        type: "boolean"
        description: "Регулярный - true, false - нет"
      lastPaymentDate:
        type: "string"
        format: "date-time"
        description: "Дата последнего успешного платежа"
      maxCount:
        type: "string"
        description: "Количество платежей которые необходимо совершить"
      operationId:
        type: "string"
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      periodStep:
        type: "string"
        description: "Устаревший параметр, оставлен для совместимости"
      periodType:
        type: "string"
        description: "EVERY_MONTH - каждый месяц и EVERY_WEEK - каждую неделю"
        enum:
        - "EVERY_MONTH"
        - "EVERY_WEEK"
      startDate:
        type: "string"
        format: "date-time"
        description: "Дата начала выполнения регулярных платежей"
      templateName:
        type: "string"
        minLength: 0
        maxLength: 2000
    title: "CreateTemplateRequestDto"
  CredCardInfoDto:
    type: "object"
    properties:
      accruedInterest:
        type: "number"
        description: "Сумма начисл % по ОД"
      balance:
        type: "number"
        description: "Доступные ср. (Собств. ср. + неисп. лим.). Собств. ср. - это\
          \ положительный остаток на СКС"
      creditLimit:
        type: "number"
        description: "Лимит кредита (установленный)"
      creditUnused:
        type: "number"
        description: "Лимит кредита (неиспользованный)"
      currency:
        type: "string"
        description: "Валюта"
      dueDate:
        type: "string"
        format: "date"
        description: "Платёж до даты"
      graceAmount:
        type: "number"
        description: "Сумма для погашения в рамках грейс"
      interestRate:
        type: "number"
        format: "double"
        description: "Процентная ставка"
      minPayment:
        type: "number"
        description: "Сумма, обязательная к погашению (минимальный платёж)"
      totalOverdue:
        type: "number"
        description: "Просрочка (общая сумма)"
    title: "CredCardInfoDto"
  CreditDetailsDto:
    type: "object"
    properties:
      arrears:
        type: "string"
        description: "сумма просрочки"
      creditId:
        type: "string"
        description: "идентификатор кредита в АБС"
      dateOfArrears:
        type: "string"
        format: "date"
        description: "дата возникновения просрочки, она появляется в день просрочк\
          и и потом ежедневно обновляется, т.к. штрафы ежедневно начисляются"
      fullSumToPay:
        type: "string"
        description: "полная сумма к погашению, которая формируется из остатка по\
          \ долгу, по процентам, по штрафам и т.п"
      interest:
        type: "string"
      interestRate:
        type: "string"
      limit:
        type: "string"
        description: "кредитный лимит (если применим)"
      loanAccount:
        type: "string"
      nextPlanPay:
        type: "string"
        description: "плановый платеж - платеж по графику (сумма минимального плат\
          ежа)"
      nextpay:
        type: "string"
        description: "следующий платеж. может быть выше платежа по графику, если е\
          сть штрафы"
      nextpaydate:
        type: "string"
        format: "date"
        description: "дата следующего платежа"
      paidDebt:
        type: "string"
        description: "уже выплачено в погашение долга"
      paidRepayment:
        type: "string"
        description: "уже выплачено в погашение процентов"
      payAccounts:
        type: "array"
        description: "счета погашения"
        items:
          type: "string"
      penalty:
        type: "string"
      planCloseDate:
        type: "string"
        format: "date"
        description: "дата окончания кредита"
      principal:
        type: "string"
        description: "полная сумма задолженности"
      services:
        $ref: "#/definitions/CreditDetailsServicesDto"
      totalAmountPay:
        type: "string"
        description: "сумма платежа для погашения ПРОСРОЧЕННОЙ задолженности на да\
          нный момент"
    title: "CreditDetailsDto"
  CreditDetailsServicesDto:
    type: "object"
    properties:
      canEarlyClose:
        type: "string"
      canGetGraph:
        type: "string"
      canPartialPay:
        type: "string"
    title: "CreditDetailsServicesDto"
  CreditDto:
    type: "object"
    properties:
      alias:
        type: "string"
        example: "Зарплатный счет"
        description: "Алиас продукта"
      bic:
        type: "string"
        description: "БИК банка"
      candepo:
        type: "string"
        example: "1"
        description: "признак возможности пополнения продукта"
      closed:
        type: "string"
        format: "date"
        example: "2017-01-01"
        description: "дата закрытия продукта"
      currcode:
        type: "string"
        example: "EUR"
        description: "валюта продукта"
      details:
        $ref: "#/definitions/CreditDetailsDto"
      isCreditCardAccount:
        type: "boolean"
        description: "кредит привязан к СКС"
      name:
        type: "string"
        example: "Карточный счет"
        description: "наименование продукта"
      number:
        type: "string"
        example: "40817810100000005651"
        description: "номер продукта"
      opened:
        type: "string"
        format: "date"
        example: "2017-01-01"
        description: "дата открытия продукта"
      parentnumber:
        type: "string"
        example: "40817840500000005373"
        description: "номер счета, к которому привязан продукт"
      rest:
        type: "string"
        example: "17.23"
        description: "баланс продукта"
      status:
        description: "статус продукта"
        $ref: "#/definitions/StatusDto"
      subtype:
        type: "string"
        example: "ClientAccount"
        description: "подтип продукта, специфичный для каждого вида продукта"
      type:
        type: "string"
        example: "account"
        description: "тип продукта"
        enum:
        - "account"
        - "card"
        - "deposit"
        - "credit"
    title: "CreditDto"
  CreditPaymentScheduleDto:
    type: "object"
    properties:
      currency:
        type: "string"
        example: "RUR"
        description: "Валюта кредита"
      loanDebts:
        type: "string"
        example: "864135.21"
        description: "Ссудная задолженность на дату запроса"
      outstanding:
        type: "string"
        example: "0.00"
        description: "Просроченная ссудная задолженность"
      paidSum:
        type: "number"
        description: "уже выплачено, которая формируется из сколько уже выплачено\
          \ в погашение долга и в погашение процентов"
      payDebtTotal:
        type: "number"
        description: "уже выплачено в погашение долга"
      payRepaymentTotal:
        type: "number"
        description: "уже выплачено в погашение процентов"
      scheduleList:
        type: "array"
        description: "массив с планом платежей по кредиту"
        items:
          $ref: "#/definitions/CreditPaymentScheduleItemDto"
      unpaidInterest:
        type: "string"
        example: "0.00"
        description: "Просроченные проценты"
    title: "CreditPaymentScheduleDto"
  CreditPaymentScheduleItemDto:
    type: "object"
    properties:
      fees:
        type: "string"
        example: "0"
        description: "Комиссия"
      payDebt:
        type: "string"
        description: "уже выплачено в погашение долга"
      payRepayment:
        type: "string"
        description: "уже выплачено в погашение процентов"
      paymentDate:
        type: "string"
        format: "date"
        description: "запланированная дата платежа/дата проведенного платежа"
      period:
        type: "string"
        example: "25.03.17 - 31.03.17"
        description: "Период"
      state:
        type: "string"
        description: "состояние"
        enum:
        - "PAID"
        - "PLAN"
      sum:
        type: "number"
        description: "сумма платежа"
      sumToPay:
        type: "string"
        description: "остаток кредита после платежа"
    title: "CreditPaymentScheduleItemDto"
  CrossRate:
    type: "object"
    properties:
      diff:
        type: "string"
      id:
        type: "string"
        description: "ID курса состоящий из source+tartget валюты"
      rate:
        type: "string"
      sourceCurrency:
        type: "string"
      targetCurrency:
        type: "string"
    title: "CrossRate"
  CurrencyRates:
    type: "object"
    properties:
      baseRates:
        type: "array"
        items:
          $ref: "#/definitions/BaseRate"
      crossRates:
        type: "array"
        items:
          $ref: "#/definitions/CrossRate"
      timestamp:
        type: "string"
        format: "date-time"
    title: "CurrencyRates"
  DadataResponseDto:
    type: "object"
    properties:
      dataset:
        type: "object"
      id:
        type: "string"
        description: "id запроса. Возвращается в ответе для связывания ответа с за\
          просом"
    title: "DadataResponseDto"
  DepositDetailsDto:
    type: "object"
    properties:
      activeto:
        type: "string"
        format: "date"
        description: "срок действия договора(для срочных вкладов"
      canRecharge:
        type: "string"
        description: "возможность пополнения"
      canWithdraw:
        type: "string"
        description: "возможность частичного снятия"
      contractNum:
        type: "string"
        description: "номер договора"
      currencyRequisites:
        description: "Реквизиты валютного счета"
        $ref: "#/definitions/BanksInfoDetailsDto"
      interestrate:
        type: "string"
        description: "текущая ставка"
      minRechargeSum:
        type: "string"
        description: "минимальная сумма для пополнения вклада"
      minRest:
        type: "string"
        description: "Неснижаемый остаток"
      paymentOfInterest:
        $ref: "#/definitions/DepositDetailsPaymentOfInterestDto"
      rechargeLastDate:
        type: "string"
        format: "date"
        description: "дата, до которой доступно пополнение вклада"
      requisites:
        $ref: "#/definitions/DepositDetailsRequisitesDto"
      services:
        $ref: "#/definitions/DepositDetailsServicesDto"
      withdrawSum:
        type: "string"
        description: "сумма доступная для частичного снятия"
    title: "DepositDetailsDto"
  DepositDetailsPaymentOfInterestDto:
    type: "object"
    properties:
      account:
        type: "string"
        description: "счет куда выплачиваются проценты. Может быть пустым для капи\
          тализации"
      capitalize:
        type: "string"
        description: "вклад с капитализацией или выплатой процентов"
      type:
        type: "string"
        description: "тип выплат процентов - ежемесячно или в конце срока attheend"
    title: "DepositDetailsPaymentOfInterestDto"
  DepositDetailsRequisitesDto:
    type: "object"
    properties:
      accountNumber:
        type: "string"
      bankName:
        type: "string"
        description: "название банка получателя"
      bic:
        type: "string"
      corrAccount:
        type: "string"
        description: "коррсчет"
      inn:
        type: "string"
    title: "DepositDetailsRequisitesDto"
  DepositDetailsServicesDto:
    type: "object"
    properties:
      autoProlongOff:
        type: "string"
      canClose:
        type: "string"
      canRecharge:
        type: "string"
    title: "DepositDetailsServicesDto"
  DepositDto:
    type: "object"
    properties:
      alias:
        type: "string"
        example: "Зарплатный счет"
        description: "Алиас продукта"
      bic:
        type: "string"
        description: "БИК банка"
      candepo:
        type: "string"
        example: "1"
        description: "признак возможности пополнения продукта"
      closed:
        type: "string"
        format: "date"
        example: "2017-01-01"
        description: "дата закрытия продукта"
      currcode:
        type: "string"
        example: "EUR"
        description: "валюта продукта"
      details:
        $ref: "#/definitions/DepositDetailsDto"
      name:
        type: "string"
        example: "Карточный счет"
        description: "наименование продукта"
      number:
        type: "string"
        example: "40817810100000005651"
        description: "номер продукта"
      opened:
        type: "string"
        format: "date"
        example: "2017-01-01"
        description: "дата открытия продукта"
      parentnumber:
        type: "string"
        example: "40817840500000005373"
        description: "номер счета, к которому привязан продукт"
      rest:
        type: "string"
        example: "17.23"
        description: "баланс продукта"
      status:
        description: "статус продукта"
        $ref: "#/definitions/StatusDto"
      subtype:
        type: "string"
        example: "ClientAccount"
        description: "подтип продукта, специфичный для каждого вида продукта"
      type:
        type: "string"
        example: "account"
        description: "тип продукта"
        enum:
        - "account"
        - "card"
        - "deposit"
        - "credit"
    title: "DepositDto"
  DepositPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        description: "Сведения о получателе платежа/перевода"
        $ref: "#/definitions/PaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "DepositPaymentOrderDto"
  DepositPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/DepositPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "DepositPaymentTemplateDto"
  Desc:
    type: "object"
    properties:
      header:
        type: "string"
      list:
        type: "array"
        items:
          type: "string"
    title: "Desc"
  EmailInfo:
    type: "object"
    properties:
      emailAddress:
        type: "string"
        example: "info@roox.ru"
        description: "Email"
    title: "EmailInfo"
  Error:
    type: "object"
    properties:
      code:
        type: "string"
      data:
        type: "object"
      details:
        type: "array"
        items:
          type: "object"
      displayMessage:
        type: "string"
      message:
        type: "string"
      status:
        type: "integer"
        format: "int32"
      target:
        type: "string"
    title: "Error"
  FPSBankDto:
    type: "object"
    properties:
      bankId:
        type: "string"
        example: "vv6vvfu"
        description: "Уникальный идентификатор банка из системы быстрых платежей"
      bankName:
        type: "string"
        example: "Тинькофф банк"
        description: "Название банка"
      isZenit:
        type: "boolean"
        example: false
        description: "Переменная должная быть true, если этот банк Зенит"
      logoUrl:
        type: "string"
        example: "https://fps.com/images/tinkoff.png"
        description: "Ссылка на логотип банка в формате png или jpg"
    title: "FPSBankDto"
  FPSClientDto:
    type: "object"
    properties:
      banks:
        type: "array"
        description: "Список банков подключенных к СПБ, в которых клиент был найде\
          н по номеру телефона. Вернет максимум два банка: 'Зенит' и любимый банк"
        items:
          $ref: "#/definitions/FPSBankDto"
      clientName:
        type: "string"
        example: "Юлия Сергеевна Л."
        description: "Имя клиента"
      favoriteBankId:
        type: "string"
        example: "vv6vvfu"
        description: "Уникальный идентификатор любимого банка клиента из системы б\
          ыстрых платежей, если он установлен"
    title: "FPSClientDto"
  FPSConfirmationOtpRequestDto:
    type: "object"
    required:
    - "confirmationType"
    properties:
      accountNumber:
        type: "string"
        example: "42301840300000000280"
        description: "Номер счета клиента, на который будут поступать деньги при п\
          ереводах через СБП. \\nЕсли номер счета не указывается, значит нам необх\
          одимо только подтвердить номер телефона, а пользователь уже подключил СБ\
          П. isFpsEnabled = true"
      confirmationType:
        type: "string"
        enum:
        - "REGISTRATION"
        - "CHANGE_PHONE"
        - "CHANGE_ACCOUNT"
    title: "FPSConfirmationOtpRequestDto"
  FPSConfirmationOtpResponseDto:
    type: "object"
    properties:
      operationId:
        type: "string"
        example: "767a3b9a-21f0-498d-9d17-5dea0c8d20d3"
        description: "Индетификатор запроса от сервиса БП"
    title: "FPSConfirmationOtpResponseDto"
  FPSConfirmationRequestDto:
    type: "object"
    required:
    - "confirmationType"
    - "operationId"
    - "otpCode"
    properties:
      accountNumber:
        type: "string"
        example: "42301840300000000280"
        description: "Номер счета клиента"
      confirmationType:
        type: "string"
        enum:
        - "REGISTRATION"
        - "CHANGE_PHONE"
        - "CHANGE_ACCOUNT"
      operationId:
        type: "string"
        example: "767a3b9a-21f0-498d-9d17-5dea0c8d20d3"
        description: "Индетификатор операции подключения сервиса БП. Передается в\
          \ запросе на ОТП при подключение СБП"
      otpCode:
        type: "string"
        example: "81jcb0"
        description: "Шести символьный отп код, который может содержать как цифры\
          \ так и латинские буквы"
    title: "FPSConfirmationRequestDto"
  FPSConfirmationResponseDto:
    type: "object"
    properties:
      displayDescription:
        type: "string"
        example: "Теперь другие люди смогут переводить вам деньги просто по номеру\
          \ вашего телефона. Они будут приходить на Счёт RUB. В любой момент вы мо\
          жете изменить счёт на другой."
        description: "В случае успеха в этом дополнительном тексте должно быть упо\
          мянуто, куда будут приходить начисления и должно быть указано название с\
          чета. В примере это Счет RUB"
      displayTitle:
        type: "string"
        example: "Система быстрых переводов настроена"
        description: "В ответ в зависимости от успеха или неуспеха проведения реги\
          страции должны возвращаться тексты."
      isSuccess:
        type: "boolean"
        description: "true – регистрация прошла успешно. false – регистрация не уд\
          алась"
    title: "FPSConfirmationResponseDto"
  FPSPaymentDetailDto:
    type: "object"
    properties:
      operationControlValue:
        type: "string"
        example: "4hj43nkj"
        description: "Контрольное число из шага 1"
      operationId:
        type: "string"
        example: "56765432gfd"
        description: "Идентификатор операции из шага 1"
      origRefNumber:
        type: "string"
        example: "83078472"
        description: "Ссылочный номер перевода из шага 2"
      referenceId:
        type: "string"
        example: "100001"
        description: "Идентификатор перевода из шага 2"
    title: "FPSPaymentDetailDto"
  FPSPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        description: "Детали платежа СБП"
        $ref: "#/definitions/FPSPaymentDetailDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      message:
        type: "string"
        example: "сообщение пользователю"
        description: "Передаем сообщение пользователю через СБП. Ограничение в 140\
          \ символов"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/FPSPaymentOrderSourceDto"
      target:
        description: "Сведения об получатели платежа СБП"
        $ref: "#/definitions/FPSPaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "FPSPaymentOrderDto"
  FPSPaymentOrderSourceDto:
    type: "object"
    properties:
      number:
        type: "string"
        example: "42301840300000000280"
        description: "Номер счета, с которого совершается перевод"
    title: "FPSPaymentOrderSourceDto"
  FPSPaymentOrderTargetDto:
    type: "object"
    properties:
      bank:
        description: "Банк, в который надо сделать перевод"
        $ref: "#/definitions/FPSBankDto"
      name:
        type: "string"
        example: "Юлия Сергеевна Л."
        description: "Имя пользователя, на которого будет начисление"
      number:
        type: "string"
        example: "79304001999"
        description: "Номер телефона пользователя, на который будет начисление"
    title: "FPSPaymentOrderTargetDto"
  FPSPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/FPSPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "FPSPaymentTemplateDto"
  Factor:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      value:
        type: "number"
        format: "double"
    title: "Factor"
  FeedbackObjectDto:
    type: "object"
    required:
    - "fullName"
    - "message"
    properties:
      attachedPhotos:
        type: "array"
        description: "uuid'ы вложенных фотографий"
        items:
          type: "string"
      email:
        type: "string"
        description: "Email пользователя, который указан в профиле. Может быть пус\
          тым"
      fullName:
        type: "string"
        example: "Пядухов Вадим Олегович"
        description: "Полное имя Клиента"
      message:
        type: "string"
        description: "Сообщение пользователя"
      phoneNumber:
        type: "string"
        example: "88005006677"
        description: "Номер мобильного телефона пользователя. Может быть пустым"
    title: "FeedbackObjectDto"
  FeedbackResponseDto:
    type: "object"
    required:
    - "success"
    properties:
      success:
        type: "boolean"
        description: "Булевая переменная, которая сигнализирует, что запрос на отп\
          равку завершился успешно"
    title: "FeedbackResponseDto"
  FieldsRequest:
    type: "object"
    properties:
      fieldID:
        type: "string"
        description: "Передается только в случае передачи массива Additional. Соот\
          ветствует ID Input поля"
      fieldName:
        type: "string"
        description: "Передается только в случае передачи массива Additional. Соот\
          ветствует названию Input поля"
      fieldValue:
        type: "string"
        description: "Передается только в случае передачи массива Additional. Соот\
          ветствует введенному пользователем значению в Input поле"
    title: "FieldsRequest"
  FieldsResponse:
    type: "object"
    properties:
      dataType:
        type: "string"
      fieldValue:
        type: "string"
      hint:
        type: "string"
      id:
        type: "string"
        description: "ID поля"
      isPrint:
        type: "boolean"
      isReadOnly:
        type: "boolean"
        description: "Только для чтения поля"
      isRequired:
        type: "boolean"
        description: "Обязательное поле (boolean)"
      isSum:
        type: "boolean"
        description: "Поле для ввода суммы (boolean)"
      isTemplate:
        type: "boolean"
      isVisible:
        type: "boolean"
        description: "Вывод поля"
      mask:
        type: "string"
        description: "Маска регулярного выражения"
      max:
        type: "string"
        description: "Максимальное значение поля"
      min:
        type: "string"
        description: "Минимальное значение поля"
      name:
        type: "string"
        description: "Имя поля"
      order:
        type: "string"
      regExp:
        type: "string"
      rightNum:
        type: "string"
      type:
        type: "string"
        enum:
        - "Input"
        - "Select"
        - "Period"
        - "CheckBox"
        - "Memo"
        - "SelectTable"
        - "InpuTable"
    title: "FieldsResponse"
  FilterDto:
    type: "object"
    properties:
      aggregationType:
        type: "integer"
        format: "int32"
      amount:
        type: "number"
      currency:
        type: "string"
    title: "FilterDto"
  FpsSettingsDto:
    type: "object"
    properties:
      accountInvalid:
        type: "boolean"
        description: "Признак того, что счет привязанный к СБП стал невалидным. Ес\
          ли не подключался - вернет false"
      enabled:
        type: "boolean"
        description: "Признак того, что пользователь уже подключил СБП и пользуетс\
          я"
      phoneChanged:
        type: "boolean"
        description: "Признак того, что пользователь был подключен к системе СБП и\
          \ после сменил свой номер телефона. Если не подключался - вернет false"
    title: "FpsSettingsDto"
  GenericPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "GenericPaymentOrderDto"
  HistoryApplicationAccountDto:
    title: "HistoryApplicationAccountDto"
    allOf:
    - $ref: "#/definitions/HistoryApplicationGenericDto"
    - type: "object"
      properties:
        applicationId:
          type: "string"
          description: "Идентификатор заявления"
        applicationNumber:
          type: "string"
          description: "Номер заявления"
        applicationStatus:
          type: "string"
          description: "Статус заявления"
          enum:
          - "exec"
          - "done"
          - "proc"
          - "decl"
          - "draft"
          - "entered"
          - "denied"
          - "approved"
          - "sign_documents"
          - "loan_issued"
          - "refused"
        applicationStatusComment:
          type: "string"
          description: "Комментарий к статусу заявления"
        applicationType:
          type: "string"
          description: "Тип заявления"
          enum:
          - "open_product"
          - "bank_request"
          - "loan_application"
        bankRequestType:
          type: "string"
          description: "Тип запроса в банк"
          enum:
          - "credit_card_request"
          - "debit_card_request"
          - "cash_credit_request"
          - "auto_credit_request"
          - "mortgage_credit_request"
          - "partial_loan_repayment_request"
          - "full_loan_repayment_request"
        createDateTime:
          type: "string"
          format: "date-time"
          description: "Дата создания заявления"
        details:
          $ref: "#/definitions/HistoryApplicationAccountDetailsDto"
        productType:
          type: "string"
          description: "Тип продукта"
          enum:
          - "account"
          - "deposit"
          - "loan"
      title: "HistoryApplicationAccountDto"
  HistoryApplicationBankRequestDto:
    title: "HistoryApplicationBankRequestDto"
    allOf:
    - $ref: "#/definitions/HistoryApplicationGenericDto"
    - type: "object"
      properties:
        applicationId:
          type: "string"
          description: "Идентификатор заявления"
        applicationNumber:
          type: "string"
          description: "Номер заявления"
        applicationStatus:
          type: "string"
          description: "Статус заявления"
          enum:
          - "exec"
          - "done"
          - "proc"
          - "decl"
          - "draft"
          - "entered"
          - "denied"
          - "approved"
          - "sign_documents"
          - "loan_issued"
          - "refused"
        applicationStatusComment:
          type: "string"
          description: "Комментарий к статусу заявления"
        applicationType:
          type: "string"
          description: "Тип заявления"
          enum:
          - "open_product"
          - "bank_request"
          - "loan_application"
        bankRequestType:
          type: "string"
          description: "Тип запроса в банк"
          enum:
          - "credit_card_request"
          - "debit_card_request"
          - "cash_credit_request"
          - "auto_credit_request"
          - "mortgage_credit_request"
          - "partial_loan_repayment_request"
          - "full_loan_repayment_request"
        createDateTime:
          type: "string"
          format: "date-time"
          description: "Дата создания заявления"
        details:
          $ref: "#/definitions/BankRequestDetailsDto"
        productType:
          type: "string"
          description: "Тип продукта"
          enum:
          - "account"
          - "deposit"
          - "loan"
      title: "HistoryApplicationBankRequestDto"
  HistoryApplicationDeclineReasonDto:
    type: "object"
    properties:
      reason:
        type: "string"
        example: "Не подходят условия кредита"
        description: "Текстовое описание причины отказа"
    title: "HistoryApplicationDeclineReasonDto"
  HistoryApplicationDepositDto:
    title: "HistoryApplicationDepositDto"
    allOf:
    - $ref: "#/definitions/HistoryApplicationGenericDto"
    - type: "object"
      properties:
        applicationId:
          type: "string"
          description: "Идентификатор заявления"
        applicationNumber:
          type: "string"
          description: "Номер заявления"
        applicationStatus:
          type: "string"
          description: "Статус заявления"
          enum:
          - "exec"
          - "done"
          - "proc"
          - "decl"
          - "draft"
          - "entered"
          - "denied"
          - "approved"
          - "sign_documents"
          - "loan_issued"
          - "refused"
        applicationStatusComment:
          type: "string"
          description: "Комментарий к статусу заявления"
        applicationType:
          type: "string"
          description: "Тип заявления"
          enum:
          - "open_product"
          - "bank_request"
          - "loan_application"
        bankRequestType:
          type: "string"
          description: "Тип запроса в банк"
          enum:
          - "credit_card_request"
          - "debit_card_request"
          - "cash_credit_request"
          - "auto_credit_request"
          - "mortgage_credit_request"
          - "partial_loan_repayment_request"
          - "full_loan_repayment_request"
        createDateTime:
          type: "string"
          format: "date-time"
          description: "Дата создания заявления"
        details:
          $ref: "#/definitions/HistoryApplicationDepositDetailsDto"
        productType:
          type: "string"
          description: "Тип продукта"
          enum:
          - "account"
          - "deposit"
          - "loan"
      title: "HistoryApplicationDepositDto"
  HistoryApplicationGenericDto:
    type: "object"
    discriminator: "subtype"
    properties:
      applicationId:
        type: "string"
        description: "Идентификатор заявления"
      applicationNumber:
        type: "string"
        description: "Номер заявления"
      applicationStatus:
        type: "string"
        description: "Статус заявления"
        enum:
        - "exec"
        - "done"
        - "proc"
        - "decl"
        - "draft"
        - "entered"
        - "denied"
        - "approved"
        - "sign_documents"
        - "loan_issued"
        - "refused"
      applicationStatusComment:
        type: "string"
        description: "Комментарий к статусу заявления"
      applicationType:
        type: "string"
        description: "Тип заявления"
        enum:
        - "open_product"
        - "bank_request"
        - "loan_application"
      bankRequestType:
        type: "string"
        description: "Тип запроса в банк"
        enum:
        - "credit_card_request"
        - "debit_card_request"
        - "cash_credit_request"
        - "auto_credit_request"
        - "mortgage_credit_request"
        - "partial_loan_repayment_request"
        - "full_loan_repayment_request"
      createDateTime:
        type: "string"
        format: "date-time"
        description: "Дата создания заявления"
      productType:
        type: "string"
        description: "Тип продукта"
        enum:
        - "account"
        - "deposit"
        - "loan"
    title: "HistoryApplicationGenericDto"
  HistoryApplicationLoanApplicationDto:
    title: "HistoryApplicationLoanApplicationDto"
    allOf:
    - $ref: "#/definitions/HistoryApplicationGenericDto"
    - type: "object"
      properties:
        applicationId:
          type: "string"
          description: "Идентификатор заявления"
        applicationNumber:
          type: "string"
          description: "Номер заявления"
        applicationStatus:
          type: "string"
          description: "Статус заявления"
          enum:
          - "exec"
          - "done"
          - "proc"
          - "decl"
          - "draft"
          - "entered"
          - "denied"
          - "approved"
          - "sign_documents"
          - "loan_issued"
          - "refused"
        applicationStatusComment:
          type: "string"
          description: "Комментарий к статусу заявления"
        applicationType:
          type: "string"
          description: "Тип заявления"
          enum:
          - "open_product"
          - "bank_request"
          - "loan_application"
        bankRequestType:
          type: "string"
          description: "Тип запроса в банк"
          enum:
          - "credit_card_request"
          - "debit_card_request"
          - "cash_credit_request"
          - "auto_credit_request"
          - "mortgage_credit_request"
          - "partial_loan_repayment_request"
          - "full_loan_repayment_request"
        createDateTime:
          type: "string"
          format: "date-time"
          description: "Дата создания заявления"
        details:
          description: "Детали поданного заявления и статус рассмотрения"
          $ref: "#/definitions/LoanApplicationDetailsDto"
        productType:
          type: "string"
          description: "Тип продукта"
          enum:
          - "account"
          - "deposit"
          - "loan"
      title: "HistoryApplicationLoanApplicationDto"
  HistoryOperationAmountDto:
    type: "object"
    properties:
      accCurrAmount:
        type: "number"
      amount:
        type: "number"
        description: "Стоимость платежа"
      cashbackAmount:
        type: "number"
        description: "Кэшбэк по операции"
      cashbackCurrency:
        type: "string"
        description: "Валюта кэшбэка"
        enum:
        - "AUD"
        - "AZN"
        - "ARS"
        - "AMD"
        - "THB"
        - "BHD"
        - "BYN"
        - "BGN"
        - "BOB"
        - "BRL"
        - "BYR"
        - "KRW"
        - "XCD"
        - "HKD"
        - "PYG"
        - "DKK"
        - "MKD"
        - "AED"
        - "DOP"
        - "VND"
        - "USD"
        - "P25"
        - "EGP"
        - "EUR"
        - "PLN"
        - "XAU"
        - "JPY"
        - "INR"
        - "JOD"
        - "IQD"
        - "ISK"
        - "C45"
        - "CAD"
        - "QAR"
        - "KES"
        - "BAM"
        - "HRK"
        - "GEL"
        - "ALL"
        - "MUR"
        - "MYR"
        - "MAD"
        - "MXN"
        - "MDL"
        - "NPR"
        - "NZD"
        - "ILS"
        - "TWD"
        - "TMT"
        - "NOK"
        - "OMR"
        - "PKR"
        - "MOP"
        - "E69"
        - "XPD"
        - "XPT"
        - "RON"
        - "IDR"
        - "RUB"
        - "C56"
        - "SAR"
        - "SCR"
        - "RSD"
        - "SGD"
        - "SYP"
        - "KGS"
        - "TJS"
        - "C44"
        - "E70"
        - "C95"
        - "XAG"
        - "MNT"
        - "TND"
        - "TRY"
        - "KZT"
        - "UGX"
        - "UZS"
        - "UYU"
        - "UAH"
        - "PHP"
        - "HUF"
        - "GBP"
        - "CZK"
        - "CLP"
        - "SEK"
        - "CHF"
        - "LKR"
        - "CNY"
        - "RUR"
        - "UNDEFINED"
      currency:
        type: "string"
        description: "Валюта платежа"
        enum:
        - "AUD"
        - "AZN"
        - "ARS"
        - "AMD"
        - "THB"
        - "BHD"
        - "BYN"
        - "BGN"
        - "BOB"
        - "BRL"
        - "BYR"
        - "KRW"
        - "XCD"
        - "HKD"
        - "PYG"
        - "DKK"
        - "MKD"
        - "AED"
        - "DOP"
        - "VND"
        - "USD"
        - "P25"
        - "EGP"
        - "EUR"
        - "PLN"
        - "XAU"
        - "JPY"
        - "INR"
        - "JOD"
        - "IQD"
        - "ISK"
        - "C45"
        - "CAD"
        - "QAR"
        - "KES"
        - "BAM"
        - "HRK"
        - "GEL"
        - "ALL"
        - "MUR"
        - "MYR"
        - "MAD"
        - "MXN"
        - "MDL"
        - "NPR"
        - "NZD"
        - "ILS"
        - "TWD"
        - "TMT"
        - "NOK"
        - "OMR"
        - "PKR"
        - "MOP"
        - "E69"
        - "XPD"
        - "XPT"
        - "RON"
        - "IDR"
        - "RUB"
        - "C56"
        - "SAR"
        - "SCR"
        - "RSD"
        - "SGD"
        - "SYP"
        - "KGS"
        - "TJS"
        - "C44"
        - "E70"
        - "C95"
        - "XAG"
        - "MNT"
        - "TND"
        - "TRY"
        - "KZT"
        - "UGX"
        - "UZS"
        - "UYU"
        - "UAH"
        - "PHP"
        - "HUF"
        - "GBP"
        - "CZK"
        - "CLP"
        - "SEK"
        - "CHF"
        - "LKR"
        - "CNY"
        - "RUR"
        - "UNDEFINED"
      feeAmount:
        type: "number"
        description: "Комиссия"
      feeCurrency:
        type: "string"
        description: "Валюта комиссии"
        enum:
        - "AUD"
        - "AZN"
        - "ARS"
        - "AMD"
        - "THB"
        - "BHD"
        - "BYN"
        - "BGN"
        - "BOB"
        - "BRL"
        - "BYR"
        - "KRW"
        - "XCD"
        - "HKD"
        - "PYG"
        - "DKK"
        - "MKD"
        - "AED"
        - "DOP"
        - "VND"
        - "USD"
        - "P25"
        - "EGP"
        - "EUR"
        - "PLN"
        - "XAU"
        - "JPY"
        - "INR"
        - "JOD"
        - "IQD"
        - "ISK"
        - "C45"
        - "CAD"
        - "QAR"
        - "KES"
        - "BAM"
        - "HRK"
        - "GEL"
        - "ALL"
        - "MUR"
        - "MYR"
        - "MAD"
        - "MXN"
        - "MDL"
        - "NPR"
        - "NZD"
        - "ILS"
        - "TWD"
        - "TMT"
        - "NOK"
        - "OMR"
        - "PKR"
        - "MOP"
        - "E69"
        - "XPD"
        - "XPT"
        - "RON"
        - "IDR"
        - "RUB"
        - "C56"
        - "SAR"
        - "SCR"
        - "RSD"
        - "SGD"
        - "SYP"
        - "KGS"
        - "TJS"
        - "C44"
        - "E70"
        - "C95"
        - "XAG"
        - "MNT"
        - "TND"
        - "TRY"
        - "KZT"
        - "UGX"
        - "UZS"
        - "UYU"
        - "UAH"
        - "PHP"
        - "HUF"
        - "GBP"
        - "CZK"
        - "CLP"
        - "SEK"
        - "CHF"
        - "LKR"
        - "CNY"
        - "RUR"
        - "UNDEFINED"
    title: "HistoryOperationAmountDto"
  HistoryOperationDetailsDto:
    type: "object"
    properties:
      agentAccount:
        type: "string"
        description: "Номер счета контрагента"
      agentBankAcc:
        type: "string"
        description: "Корр. счет банка контрагента"
      agentBankBic:
        type: "string"
        description: "БИК банка контрагента"
      agentName:
        type: "string"
        description: "Название счета контрагента"
      cbcCode:
        type: "string"
        description: "Код бюджетной классификации"
      chargeType:
        type: "string"
        description: "Направление операции (DEBIT - исходящая, CREDIT - входящая)"
        enum:
        - "debit"
        - "credit"
        - "other"
      docDateParam:
        type: "string"
        description: "Дата документа"
      docNumParam:
        type: "string"
        description: "Номер документа"
      factDate:
        type: "string"
        format: "date"
        description: "Дата списания"
      geoData:
        $ref: "#/definitions/HistoryOperationDetailsGeoDataDto"
      mcc:
        type: "string"
        description: "Код поставщика услуг"
      message:
        type: "string"
        description: "Сообщение получателю платежа"
      opDateTime:
        type: "string"
        format: "date-time"
        description: "Время старта операции"
      opNum:
        type: "string"
        description: "Номер операции"
      payGrndParam:
        type: "string"
        description: "Основание платежа"
      payTypeParam:
        type: "string"
        description: "Тип платежа"
      payerKpp:
        type: "string"
        description: "КПП плательщика"
      receiverKpp:
        type: "string"
        description: "КПП получателя"
      statementDate:
        type: "string"
        format: "date-time"
        description: "Время проведения операции"
      taxPeriodParam:
        type: "string"
        description: "Налоговый период"
      uin:
        type: "string"
        description: "УИН бюджетного платежа"
    title: "HistoryOperationDetailsDto"
  HistoryOperationDetailsGeoDataDto:
    type: "object"
    properties:
      city:
        type: "string"
      country:
        type: "string"
      merchant:
        type: "string"
    title: "HistoryOperationDetailsGeoDataDto"
  HistoryOperationDto:
    type: "object"
    properties:
      aggregationDetails:
        description: "Дополнительные сведения аггрегирования событий истории"
        $ref: "#/definitions/AggregationDetailsDto"
      bic:
        type: "string"
        description: "БИК банка"
      dboId:
        type: "string"
        description: "ИД транзакции для платежей поставщиков услуг"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладами: CHARGE - пополнение вклада, WITHDRAW\
          \ - частичное изъятие вклада"
        enum:
        - "CHARGE"
        - "WITHDRAW"
      description:
        type: "string"
        description: "Описание операции"
      destination:
        type: "string"
        description: "Номер счёта получателя"
      destinationDetails:
        type: "string"
        description: "Описание получателя операции"
      documentReference:
        type: "string"
        description: "Код операции в системах Банка"
      documentStatus:
        type: "string"
        description: "Статус операции"
        enum:
        - "proc"
        - "exec"
        - "done"
        - "decl"
      documentStatusComment:
        type: "string"
        description: " Описание статуса операции"
      historyType:
        type: "string"
        description: "Источник события истории (OFFLINE_PROC - процессинг Банка, OFFLINE_ABS\
          \ - АБС Банка, ONLINE - ДБО)"
        enum:
        - "offline_proc"
        - "offline_abs"
        - "online"
      ids:
        description: "Параметры операции"
        $ref: "#/definitions/HistoryOperationIds"
      internalTargetType:
        type: "string"
        description: "Тип назначения платежной операции для внутренних переводов:\
          \ SELF - между своими счетами, SELF_EXCHANGE - перевод между своими счет\
          ами с конвертацией, OTHER - перевод другому клиенту"
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      logo:
        type: "string"
        format: "byte"
        description: "Лого для платежей поставщика услуг"
      mobilePayment:
        type: "string"
        description: "Идентификатор мобильной операции, в случае отсутствия = EMPTY"
      number:
        type: "string"
        description: "номер продукта, к которому относится событие"
      openBalance:
        type: "number"
        description: "Баланс до начала проведения операции"
      operationAmount:
        $ref: "#/definitions/HistoryOperationAmountDto"
      operationDetails:
        $ref: "#/definitions/HistoryOperationDetailsDto"
      operationId:
        type: "string"
        description: "ИД операции"
      p2pTargetType:
        type: "string"
        description: "Тип назначения операции с картами: CARD_SELF - между своими\
          \ картами, CARD_OTHER - на чужую карту, PHONE - перевод по номеру телефо\
          на"
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentDirection:
        type: "string"
        description: "направление платежа (INCOMING - входящее,   OUTGOING - исход\
          ящее)"
        enum:
        - "incoming"
        - "outgoing"
      paymentType:
        type: "string"
        description: "Тип платежной операции"
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      productType:
        type: "string"
        description: "Тип продукта"
        enum:
        - "card"
        - "cardacc"
        - "account"
        - "deposit"
        - "credit"
      serviceProviderCategoryId:
        type: "string"
        description: "ИД категории поставщика услуг"
      serviceProviderCategoryName:
        type: "string"
        description: "Имя категории поставщика услуг"
      serviceProviderId:
        type: "string"
        description: "ИД поставщика услуг"
      serviceProviderName:
        type: "string"
      source:
        type: "string"
        description: "Номер счёта отправителя"
      sourceDetails:
        type: "string"
        description: "Описание источника операции"
      sourceInfo:
        description: "Информация об источнике операции"
        $ref: "#/definitions/HistorySourceInfo"
      status:
        type: "string"
        description: "A = Active (авторизовано), M = Matched (пришло подтверждение\
          , и склеено с фин.доком), D = Decline (отклонено), C = Closed (закрыто п\
          о истечении срока, когда подтверждение так и не пришло), R = Reverse (ре\
          версал по операции), '' - успешная операция"
      targetInfo:
        description: "Информация об получателе операции"
        $ref: "#/definitions/HistoryTargetInfo"
      targetType:
        type: "string"
        description: "Тип назначения платежной операции для платежей по реквизитам\
          : LEGAL_ENTITY - юр. лицо, BUDGET - бюджет, INDIVIDUAL - физ. лицо, SOLE_PROPRIETOR\
          \ - ИП, TAX - налог"
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
      timeTable:
        description: "Регулярный платеж"
        $ref: "#/definitions/TimeTable"
      usedTemplateId:
        type: "string"
        description: "ИД используемого шаблона"
    title: "HistoryOperationDto"
  HistoryOperationIds:
    type: "object"
    properties:
      arn:
        type: "string"
      extId:
        type: "string"
      intId:
        type: "string"
      parentId:
        type: "string"
      rrn:
        type: "string"
    title: "HistoryOperationIds"
  HistorySourceInfo:
    type: "object"
    properties:
      alias:
        type: "string"
        example: "Карточный счет"
        description: "Алиас счета/карты источника"
      cardStyle:
        description: "Параметры оформления карты (если isCard=true)"
        $ref: "#/definitions/CardStyle"
      isCard:
        type: "boolean"
        description: "Признак события по карте/карточному счету"
      name:
        type: "string"
        example: "Текущий счёт"
        description: "Описание счета/карты источника"
      number:
        type: "string"
        example: "40817810600000007072"
        description: "Номер счета/карты источника"
    title: "HistorySourceInfo"
  HistoryTargetInfo:
    type: "object"
    properties:
      alias:
        type: "string"
        example: "Зарплатный счет"
        description: "Алиас счета/карты получателя"
      name:
        type: "string"
        example: "Текущий счёт"
        description: "Описание счета/карты получателя"
      number:
        type: "string"
        example: "40817810600000007072"
        description: "Номер счета/карты получателя"
    title: "HistoryTargetInfo"
  IndividualOrderDetailsDto:
    type: "object"
    required:
    - "name"
    - "nds"
    - "purpose"
    properties:
      bankName:
        type: "string"
        description: "Банк получателя"
      name:
        type: "string"
        description: "ФИО получателя"
      nds:
        type: "string"
        description: "Признак необходимости НДС"
        enum:
        - "'no_tax'"
        - "'included'"
      purpose:
        type: "string"
        description: "Назначение платежа"
    title: "IndividualOrderDetailsDto"
  IndividualPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        description: "Для платежей ФЛ"
        $ref: "#/definitions/IndividualOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        description: "Сведения о получателе платежа/перевода"
        $ref: "#/definitions/PaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "IndividualPaymentOrderDto"
  IndividualPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/IndividualPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "IndividualPaymentTemplateDto"
  InternalPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        description: "Сведения о получателе платежа/перевода"
        $ref: "#/definitions/PaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "InternalPaymentOrderDto"
  InternalPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/InternalPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "InternalPaymentTemplateDto"
  InternalSelfExchangePaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        description: "Сведения о получателе платежа/перевода"
        $ref: "#/definitions/PaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "InternalSelfExchangePaymentOrderDto"
  InternalSelfExchangePaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/InternalSelfExchangePaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "InternalSelfExchangePaymentTemplateDto"
  InvoiceAbstractChangeDetailsResponseDto:
    type: "object"
    discriminator: "subtype"
    title: "InvoiceAbstractChangeDetailsResponseDto"
  InvoiceBill:
    type: "object"
    properties:
      amount:
        type: "string"
        example: "123.67"
        description: "Сумма начисления"
      beginDate:
        type: "string"
        format: "date-time"
        example: "2013-11-01 00:00:00"
        description: "Дата открытия начисления"
      billPurpose:
        type: "string"
        example: "50"
        description: "Основания для начисления"
      discountDate:
        type: "string"
        example: "2018-12-17"
        description: "Дата окончания действия скидки для начисления"
      discountSize:
        type: "string"
        example: "50"
        description: "Размер скидки для начисления %"
      endDate:
        type: "string"
        format: "date-time"
        example: "2013-11-30 00:00:00"
        description: "Дата закрытия начисления"
      expireDate:
        type: "string"
        format: "date-time"
        example: "2018-11-30 00:00:00"
        description: "Дата просрачивания начисления"
      invoiceId:
        type: "string"
        example: "GISGMP_1"
        description: "Id начисления"
      isWatched:
        type: "boolean"
        example: true
        description: "Просмотрено"
      number:
        type: "string"
        example: "2861146553091301"
        description: "Номер начисления"
      operation:
        description: "Детали операции"
        $ref: "#/definitions/PaymentBankOperationDto"
      operationId:
        type: "string"
        example: "126432423"
        description: "Id операции оплаты"
      paid:
        type: "boolean"
        example: true
        description: "Оплачено"
      paidAmount:
        type: "number"
        example: 500.0
        description: "Сумма оплаченная по начислению"
      penaltyFee:
        type: "string"
        example: "3.67"
        description: "Штраф начисления"
      provider:
        description: "Детали поставщика услуг"
        $ref: "#/definitions/PaymentOperatorDto"
      recipientBankName:
        type: "string"
        example: "ГУ БАНКА РОССИИ ПО ЦФО"
        description: "Имя банка получателя"
      recipientName:
        type: "string"
        example: "ЖКХ Москвы (ЕИРЦ Банк Москвы)"
        description: "Наименование поставщика услуг"
      status:
        type: "string"
        example: "Счет просрочен"
        description: "Статус начисления"
      subsName:
        type: "string"
        example: "УК Ромашка 5090"
        description: "Наименование подписки"
      type:
        type: "string"
        example: "Обычный"
        description: "Тип начисления"
    title: "InvoiceBill"
  InvoiceChangeResponseDto:
    type: "object"
    properties:
      details:
        description: "Детали начисления"
        $ref: "#/definitions/InvoiceAbstractChangeDetailsResponseDto"
      invoiceId:
        type: "string"
        example: "GISGMP_1"
        description: "Id начисления"
    title: "InvoiceChangeResponseDto"
  InvoiceGetDetailsResponseDto:
    type: "object"
    properties:
      operation:
        description: "Детали операции"
        $ref: "#/definitions/PaymentBankOperationDto"
      operationId:
        type: "string"
        example: "12375432314"
        description: "Id операции"
      response:
        description: "Детали начисления"
        $ref: "#/definitions/BillingSubscriptionRs"
    title: "InvoiceGetDetailsResponseDto"
  InvoiceMarkAsPaidDetailsResponseDto:
    title: "InvoiceMarkAsPaidDetailsResponseDto"
    allOf:
    - $ref: "#/definitions/InvoiceAbstractChangeDetailsResponseDto"
    - type: "object"
      title: "InvoiceMarkAsPaidDetailsResponseDto"
  InvoiceMarkAsPaidRequestDto:
    type: "object"
    properties:
      paidAmount:
        type: "number"
        description: "Сумма оплаченная по начислению"
    title: "InvoiceMarkAsPaidRequestDto"
  InvoiceMarkAsWatchedDetailsResponseDto:
    title: "InvoiceMarkAsWatchedDetailsResponseDto"
    allOf:
    - $ref: "#/definitions/InvoiceAbstractChangeDetailsResponseDto"
    - type: "object"
      title: "InvoiceMarkAsWatchedDetailsResponseDto"
  InvoiceMaskAsWatchedRequestDto:
    type: "object"
    properties:
      invoicesIds:
        type: "array"
        description: "Массив Id счетов(invoiceId), необходимых отметить, как просм\
          отренные"
        items:
          type: "string"
    title: "InvoiceMaskAsWatchedRequestDto"
  InvoiceSearchGisGmpResponse:
    type: "object"
    properties:
      bills:
        type: "array"
        items:
          $ref: "#/definitions/StateChargesDto"
    title: "InvoiceSearchGisGmpResponse"
  InvoiceSubscriptionDto:
    type: "object"
    properties:
      alias:
        type: "string"
        example: "Мои штрафы"
        description: "Alias для подписки"
      bills:
        type: "array"
        description: "Начисления"
        items:
          $ref: "#/definitions/InvoiceBill"
      id:
        type: "string"
        description: "Subscription id"
      subscription:
        description: "Детали поставщика услуг"
        $ref: "#/definitions/PaymentOperatorDto"
    title: "InvoiceSubscriptionDto"
  InvoiceSubscriptionResponseDto:
    type: "object"
    properties:
      items:
        type: "array"
        description: "Начисления"
        items:
          $ref: "#/definitions/InvoiceSubscriptionDto"
    title: "InvoiceSubscriptionResponseDto"
  JsonItem«AccountDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/AccountDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«AccountDto»"
  JsonItem«AggregatedHistoryOperationsDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/AggregatedHistoryOperationsDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«AggregatedHistoryOperationsDto»"
  JsonItem«AuthInfoDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/AuthInfoDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«AuthInfoDto»"
  JsonItem«BanksInfoDetailsDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/BanksInfoDetailsDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«BanksInfoDetailsDto»"
  JsonItem«CardBlockResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CardBlockResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«CardBlockResponseDto»"
  JsonItem«CardDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CardDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«CardDto»"
  JsonItem«CardLimitChangeResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CardLimitChangeResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«CardLimitChangeResponseDto»"
  JsonItem«CardTokenDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CardTokenDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«CardTokenDto»"
  JsonItem«CardTransferCommissionResponse»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CardTransferCommissionResponse"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«CardTransferCommissionResponse»"
  JsonItem«ChangePinResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ChangePinResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«ChangePinResponseDto»"
  JsonItem«ClientPassportDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ClientPassportDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«ClientPassportDto»"
  JsonItem«ClientProfileDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ClientProfileDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«ClientProfileDto»"
  JsonItem«ClientSearchInfo»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ClientSearchInfo"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«ClientSearchInfo»"
  JsonItem«CommissionResult»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CommissionResult"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«CommissionResult»"
  JsonItem«CredCardInfoDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CredCardInfoDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«CredCardInfoDto»"
  JsonItem«CreditDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CreditDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«CreditDto»"
  JsonItem«CreditPaymentScheduleDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/CreditPaymentScheduleDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«CreditPaymentScheduleDto»"
  JsonItem«DadataResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DadataResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«DadataResponseDto»"
  JsonItem«DepositDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/DepositDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«DepositDto»"
  JsonItem«FPSClientDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/FPSClientDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«FPSClientDto»"
  JsonItem«FPSConfirmationOtpResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/FPSConfirmationOtpResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«FPSConfirmationOtpResponseDto»"
  JsonItem«FPSConfirmationResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/FPSConfirmationResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«FPSConfirmationResponseDto»"
  JsonItem«FPSPaymentOrderDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/FPSPaymentOrderDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«FPSPaymentOrderDto»"
  JsonItem«FeedbackResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/FeedbackResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«FeedbackResponseDto»"
  JsonItem«FpsSettingsDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/FpsSettingsDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«FpsSettingsDto»"
  JsonItem«GenericPaymentOrderDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/GenericPaymentOrderDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«GenericPaymentOrderDto»"
  JsonItem«HistoryApplicationGenericDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/HistoryApplicationGenericDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«HistoryApplicationGenericDto»"
  JsonItem«HistoryOperationDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/HistoryOperationDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«HistoryOperationDto»"
  JsonItem«InvoiceChangeResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/InvoiceChangeResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«InvoiceChangeResponseDto»"
  JsonItem«InvoiceGetDetailsResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/InvoiceGetDetailsResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«InvoiceGetDetailsResponseDto»"
  JsonItem«InvoiceSearchGisGmpResponse»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/InvoiceSearchGisGmpResponse"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«InvoiceSearchGisGmpResponse»"
  JsonItem«InvoiceSubscriptionResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/InvoiceSubscriptionResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«InvoiceSubscriptionResponseDto»"
  JsonItem«List«AccountDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/AccountDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«AccountDto»»"
  JsonItem«List«BadgeInfoDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/BadgeInfoDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«BadgeInfoDto»»"
  JsonItem«List«CardDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/CardDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«CardDto»»"
  JsonItem«List«CardLimitsDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/CardLimitsDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«CardLimitsDto»»"
  JsonItem«List«CardNotificationsDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/CardNotificationsDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«CardNotificationsDto»»"
  JsonItem«List«CardTokenDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/CardTokenDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«CardTokenDto»»"
  JsonItem«List«CreditDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/CreditDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«CreditDto»»"
  JsonItem«List«DepositDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/DepositDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«DepositDto»»"
  JsonItem«List«FPSBankDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/FPSBankDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«FPSBankDto»»"
  JsonItem«List«LoanApplicationDictionaryDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/LoanApplicationDictionaryDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«LoanApplicationDictionaryDto»»"
  JsonItem«List«PaycheckRecordResponse»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/PaycheckRecordResponse"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«PaycheckRecordResponse»»"
  JsonItem«List«PaycheckResponse»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/PaycheckResponse"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«PaycheckResponse»»"
  JsonItem«List«PaymentOperatorDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/PaymentOperatorDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«PaymentOperatorDto»»"
  JsonItem«List«PaymentServiceProviderResponse»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/PaymentServiceProviderResponse"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«PaymentServiceProviderResponse»»"
  JsonItem«List«PaymentStatusDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/PaymentStatusDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«PaymentStatusDto»»"
  JsonItem«List«PaymentTemplateDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/PaymentTemplateDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«PaymentTemplateDto»»"
  JsonItem«List«SettingDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/SettingDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«SettingDto»»"
  JsonItem«List«UnwatchedInvoicesCategoryDto»»:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/UnwatchedInvoicesCategoryDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«List«UnwatchedInvoicesCategoryDto»»"
  JsonItem«LoanApplicationConfirmDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/LoanApplicationConfirmDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«LoanApplicationConfirmDto»"
  JsonItem«LoanApplicationDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/LoanApplicationDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«LoanApplicationDto»"
  JsonItem«LoanApplicationRetryDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/LoanApplicationRetryDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«LoanApplicationRetryDto»"
  JsonItem«OpenProductResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/OpenProductResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«OpenProductResponseDto»"
  JsonItem«OperationDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/OperationDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«OperationDto»"
  JsonItem«P2p3dsStartResponse»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/P2p3dsStartResponse"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«P2p3dsStartResponse»"
  JsonItem«PaginationBatch«HistoryApplicationGenericDto»»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/PaginationBatch«HistoryApplicationGenericDto»"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«PaginationBatch«HistoryApplicationGenericDto»»"
  JsonItem«PaginationBatch«HistoryOperationDto»»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/PaginationBatch«HistoryOperationDto»"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«PaginationBatch«HistoryOperationDto»»"
  JsonItem«PaymentOperatorDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/PaymentOperatorDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«PaymentOperatorDto»"
  JsonItem«PaymentServiceProviderResponse»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/PaymentServiceProviderResponse"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«PaymentServiceProviderResponse»"
  JsonItem«PaymentStatusDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/PaymentStatusDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«PaymentStatusDto»"
  JsonItem«PaymentTemplateDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/PaymentTemplateDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«PaymentTemplateDto»"
  JsonItem«Program»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/Program"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«Program»"
  JsonItem«SetProductAliasResponse»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/SetProductAliasResponse"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«SetProductAliasResponse»"
  JsonItem«SetProductConfigurationResponse»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/SetProductConfigurationResponse"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«SetProductConfigurationResponse»"
  JsonItem«ShopWindowList«ShopWindowCard»»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ShopWindowList«ShopWindowCard»"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«ShopWindowList«ShopWindowCard»»"
  JsonItem«ShopWindowList«ShopWindowCredit»»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/ShopWindowList«ShopWindowCredit»"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«ShopWindowList«ShopWindowCredit»»"
  JsonItem«SubscriptionCreateUpdateOrderResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/SubscriptionCreateUpdateOrderResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«SubscriptionCreateUpdateOrderResponseDto»"
  JsonItem«SubscriptionItemDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/SubscriptionItemDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«SubscriptionItemDto»"
  JsonItem«SubscriptionListResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/SubscriptionListResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«SubscriptionListResponseDto»"
  JsonItem«SubscriptionSearchResponseDto»:
    type: "object"
    properties:
      data:
        $ref: "#/definitions/SubscriptionSearchResponseDto"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«SubscriptionSearchResponseDto»"
  JsonItem«string»:
    type: "object"
    properties:
      data:
        type: "string"
      error:
        $ref: "#/definitions/Error"
    title: "JsonItem«string»"
  LegalEntityOrderDetailsDto:
    type: "object"
    required:
    - "inn"
    - "kpp"
    - "name"
    - "nds"
    - "purpose"
    properties:
      bankName:
        type: "string"
        description: "Банк получателя"
      inn:
        type: "string"
        description: "ИНН получателя"
      kpp:
        type: "string"
        description: "КПП получателя"
      name:
        type: "string"
        description: "ФИО получателя"
      nds:
        type: "string"
        description: "Признак необходимости НДС"
        enum:
        - "'no_tax'"
        - "'included'"
      purpose:
        type: "string"
        description: "Назначение платежа"
    title: "LegalEntityOrderDetailsDto"
  LegalEntityPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        description: "Для платежей ЮЛ"
        $ref: "#/definitions/LegalEntityOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        description: "Сведения о получателе платежа/перевода"
        $ref: "#/definitions/PaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "LegalEntityPaymentOrderDto"
  LegalEntityPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/LegalEntityPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "LegalEntityPaymentTemplateDto"
  LoanApplicationConfirmDto:
    type: "object"
    properties:
      displayMessage:
        type: "string"
        description: "Текст для отображения"
      success:
        type: "boolean"
        description: "Подтверждение выдачи кредита прошло успешно"
    title: "LoanApplicationConfirmDto"
  LoanApplicationDictionaryDto:
    type: "object"
    properties:
      type:
        type: "string"
        example: "clientGender"
        description: "Тип (код) справочника"
      values:
        type: "array"
        description: "Наполнение справочника"
        items:
          $ref: "#/definitions/LoanApplicationDictionaryValueDto"
    title: "LoanApplicationDictionaryDto"
  LoanApplicationDictionaryValueDto:
    type: "object"
    properties:
      id:
        type: "string"
        example: "male"
        description: "Id (код) значения справочника"
      value:
        type: "string"
        example: "Мужской"
        description: "Значение элемента справочника"
    title: "LoanApplicationDictionaryValueDto"
  LoanApplicationDto:
    type: "object"
    properties:
      additionalDocuments:
        type: "array"
        description: "Дополнительные документы"
        items:
          $ref: "#/definitions/ApplicationAdditionalDocumentDto"
      agreements:
        description: "Данные о соглашениях пользователя"
        $ref: "#/definitions/ApplicationAgreementsDto"
      contactInfo:
        description: "Контактные данные"
        $ref: "#/definitions/ApplicationContactInfoDto"
      dboId:
        type: "string"
        example: "3d539a09-2d66-4990-d0be-5be2cf9ebc10"
        description: "Id заявки"
      expensesInfo:
        description: "Данные о расходах"
        $ref: "#/definitions/ApplicationExpensesInfoDto"
      incomesInfo:
        type: "array"
        description: "Данные о доходах"
        items:
          $ref: "#/definitions/ApplicationIncomeInfoDto"
      loanInfo:
        description: "Данные для шага с информацией о кредите и целе кредита"
        $ref: "#/definitions/ApplicationLoanInfoDto"
      passportInfo:
        description: "Данные для шага с фото паспорта"
        $ref: "#/definitions/ApplicationPassportFilesDto"
      selfInfo:
        description: "Данные для шага с информацией о пользователе"
        $ref: "#/definitions/ApplicationSelfInfoDto"
      socialStatus:
        description: "Шаг социального статуса"
        $ref: "#/definitions/ApplicationSocialStatusDto"
      step:
        type: "string"
        description: "Тип последнего сохраненного шага"
        enum:
        - "LOAN_SETTINGS"
        - "SELF_INFO"
        - "PASSPORT"
        - "ADDITIONAL_DOCUMENT"
        - "SOCIAL_STATUS"
        - "WORK_PLACES"
        - "INCOME_EXPENSES"
        - "CONTACT_INFO"
        - "AGREEMENTS"
        - "FINAL"
      workPlaces:
        type: "array"
        description: "Данные о работе"
        items:
          $ref: "#/definitions/ApplicationWorkPlaceDto"
    title: "LoanApplicationDto"
  LoanApplicationRetryDto:
    type: "object"
    properties:
      dboId:
        type: "string"
        example: "3d539a09-2d66-4990-d0be-5be2cf9ebc1a"
        description: "Id новой созданной заявки на кредит"
      success:
        type: "boolean"
        description: "Статус операции"
    title: "LoanApplicationRetryDto"
  ModelAndView:
    type: "object"
    properties:
      empty:
        type: "boolean"
      model:
        type: "object"
      modelMap:
        type: "object"
        additionalProperties:
          type: "object"
      reference:
        type: "boolean"
      status:
        type: "string"
        enum:
        - "100"
        - "101"
        - "102"
        - "103"
        - "200"
        - "201"
        - "202"
        - "203"
        - "204"
        - "205"
        - "206"
        - "207"
        - "208"
        - "226"
        - "300"
        - "301"
        - "302"
        - "303"
        - "304"
        - "305"
        - "307"
        - "308"
        - "400"
        - "401"
        - "402"
        - "403"
        - "404"
        - "405"
        - "406"
        - "407"
        - "408"
        - "409"
        - "410"
        - "411"
        - "412"
        - "413"
        - "414"
        - "415"
        - "416"
        - "417"
        - "418"
        - "419"
        - "420"
        - "421"
        - "422"
        - "423"
        - "424"
        - "426"
        - "428"
        - "429"
        - "431"
        - "451"
        - "500"
        - "501"
        - "502"
        - "503"
        - "504"
        - "505"
        - "506"
        - "507"
        - "508"
        - "509"
        - "510"
        - "511"
      view:
        $ref: "#/definitions/View"
      viewName:
        type: "string"
    title: "ModelAndView"
  OpenAccountDto:
    type: "object"
    properties:
      accountCurrency:
        type: "string"
        example: "RUR"
        description: "валюта счёта (буквенный код ISO)"
      accountType:
        type: "string"
        example: "current"
        description: "тип депозита"
        enum:
        - "'current'"
        - "'savings'"
      bic:
        type: "string"
        example: "040396717"
        description: "БИК банка клиента"
        pattern: "^[0-9]{9}$"
      cardAccNum:
        type: "string"
        description: "Номер любого карточного счета клиента в филиале, где открыва\
          ется счёт (временно передаётся в legacy API вместо bic)."
      description:
        type: "string"
        description: "комментарий"
      targetAmount:
        type: "string"
        example: "2019-01-01"
        description: "Целевая сумма для накопительного счета. Используется только\
          \ для накопительного депозита (savings)"
      targetDate:
        type: "string"
        format: "date"
        example: "2019-01-01"
        description: "Целевая дата для накопительного счета. Используется только д\
          ля накопительного депозита (savings)"
    title: "OpenAccountDto"
  OpenDepositAmountDto:
    type: "object"
    required:
    - "sourceAmount"
    properties:
      fxRate:
        type: "number"
        format: "double"
        description: "курс конвертации, по умолчанию = 1.00"
      sourceAmount:
        type: "number"
        description: "сумма списания. Для рублёвых депозитов со рублевого счёта (к\
          арты) достаточно только этой суммы"
      sourceCurrency:
        type: "string"
        description: "валюта списания"
      targetAmount:
        type: "number"
        description: "сумма зачисления в валюте депозита (по умолчанию = сумме спи\
          сания)"
      targetCurrency:
        type: "string"
        description: "валюта зачисления буквенный код ISO валюты депозита (по умол\
          чанию = валюте списания)"
    title: "OpenDepositAmountDto"
  OpenDepositCloseTargetDto:
    type: "object"
    required:
    - "contractType"
    - "number"
    properties:
      bic:
        type: "string"
        description: "БИК банка, в котором открыт счёт для перечисления денег посл\
          е закрытия вклада"
      contractType:
        type: "string"
        enum:
        - "['account'"
        - "'card'"
        - "'cardacc']"
      number:
        type: "string"
    title: "OpenDepositCloseTargetDto"
  OpenDepositDto:
    type: "object"
    properties:
      amount:
        description: "данные перевода средств для открытия счета"
        $ref: "#/definitions/OpenDepositAmountDto"
      bic:
        type: "string"
        example: "040396717"
        description: "БИК филиала клиента"
        pattern: "^[0-9]{9}$"
      closeTarget:
        description: "счет для перечисления при закрытии"
        $ref: "#/definitions/OpenDepositCloseTargetDto"
      depositGroupType:
        type: "string"
        description: "тип группы депозитов"
      depositType:
        type: "string"
        example: "5"
        description: "тип депозита"
      description:
        type: "string"
        description: "назначение платежа"
      percent:
        type: "string"
        example: "3.2"
        description: "процентная ставка"
      percentTarget:
        description: "счет для перечисления процентов"
        $ref: "#/definitions/OpenDepositPercentTargetDto"
      period:
        type: "string"
        example: "30"
        description: "срок депозита в днях"
      source:
        description: "источник средств для счета"
        $ref: "#/definitions/OpenDepositSourceDto"
    title: "OpenDepositDto"
  OpenDepositPercentTargetDto:
    type: "object"
    required:
    - "contractType"
    - "number"
    properties:
      bic:
        type: "string"
        description: "БИК банка, в котором открыт счёт для перечисления процентов"
      contractType:
        type: "string"
        enum:
        - "['account'"
        - "'card'"
        - "'cardacc']"
      number:
        type: "string"
    title: "OpenDepositPercentTargetDto"
  OpenDepositSourceDto:
    type: "object"
    required:
    - "contractType"
    properties:
      bic:
        type: "string"
        example: "040396717"
        description: "БИК банка, в котором открыт счёт-источник средств"
      contractType:
        type: "string"
        example: "account"
        enum:
        - "['account'"
        - "'cardacc']"
      number:
        type: "string"
        example: "40817810400000064318"
        description: "Номер счета"
    title: "OpenDepositSourceDto"
  OpenProductResponseDto:
    type: "object"
    properties:
      accountNumber:
        type: "string"
        example: "40817810700000600171"
        description: "номер счета"
      applicationId:
        type: "string"
        example: "ecd4320e-4f14-4be1-8f18-a61591cf12f8"
        description: "id операции в ДБО"
      documentReference:
        type: "string"
        description: "id документа, присвоенный ему в АБС"
      documentStatus:
        type: "string"
        description: "статус обработки документа:<ul><li>proc - в обработке,</li><li>exec\
          \ - принят к исполнению (прошел все проверки),</li><li>done - исполнен,</li><li>decl\
          \ - отклонен</li></ul>"
        enum:
        - "proc"
        - "exec"
        - "done"
        - "decl"
      documentStatusComment:
        type: "string"
        example: "Успешно"
        description: "Описание статуса обработки"
    title: "OpenProductResponseDto"
  OperationDto:
    type: "object"
    properties:
      accountNumber:
        type: "string"
      amount:
        type: "number"
      bankRequest:
        $ref: "#/definitions/BankRequestDto"
      bic:
        type: "string"
      clientId:
        type: "string"
      currency:
        type: "string"
      dateTime:
        type: "string"
        format: "date-time"
      details:
        type: "string"
      documentDate:
        type: "string"
        format: "date"
      documentNumber:
        type: "string"
      documentReference:
        type: "string"
      documentStatus:
        type: "string"
        enum:
        - "proc"
        - "exec"
        - "done"
        - "decl"
      documentStatusComment:
        type: "string"
      feeAmount:
        type: "number"
      feeCurrency:
        type: "string"
      genericPayment:
        $ref: "#/definitions/GenericPaymentOrderDto"
      id:
        type: "string"
      loanApplication:
        $ref: "#/definitions/LoanApplicationDto"
      openAccount:
        $ref: "#/definitions/OpenAccountDto"
      openDeposit:
        $ref: "#/definitions/OpenDepositDto"
      openProductType:
        type: "string"
        enum:
        - "ACCOUNT"
        - "DEPOSIT"
        - "LOAN_REPAYMENT_MORTGAGE"
        - "LOAN_REPAYMENT_CREDIT"
      payment:
        $ref: "#/definitions/PaymentOrderDto"
      purpose:
        type: "string"
      sourceDescription:
        type: "string"
      sourceNumber:
        type: "string"
      statementDateTime:
        type: "string"
        format: "date-time"
      targetDescription:
        type: "string"
      targetNumber:
        type: "string"
      type:
        type: "string"
        enum:
        - "PAYMENT_BANK"
        - "PAYMENT_SERVICE_PROVIDER"
        - "PAYMENT_P2P"
        - "PAYMENT_P2P_3DS"
        - "OPEN_PRODUCT"
        - "BANK_REQUEST"
        - "LOAN_APPLICATION"
      typeDescription:
        type: "string"
    title: "OperationDto"
  P2p3dsBindPaymentOrderDto:
    type: "object"
    required:
    - "source"
    - "target"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        $ref: "#/definitions/P2pPaymentOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        $ref: "#/definitions/P2p3dsBindPaymentOrderSourceDto"
      target:
        $ref: "#/definitions/P2pPaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "P2p3dsBindPaymentOrderDto"
  P2p3dsBindPaymentOrderSourceDto:
    type: "object"
    properties:
      description:
        type: "string"
        description: "описание источника платежа"
      number:
        type: "string"
        description: "маскированный номер карты - источника платежа (необязательны\
          й)"
      token:
        type: "string"
        description: "токен привязанной карты - источника платежа"
      validTo:
        type: "string"
        description: "срок действия карты - источника платежа (необязательный)"
        pattern: "^\\d{2}/\\d{2}$"
    title: "P2p3dsBindPaymentOrderSourceDto"
  P2p3dsBindPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/P2p3dsBindPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "P2p3dsBindPaymentTemplateDto"
  P2p3dsBindPhonePaymentOrderDto:
    type: "object"
    required:
    - "source"
    - "target"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        $ref: "#/definitions/P2pPaymentOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        $ref: "#/definitions/P2p3dsBindPaymentOrderSourceDto"
      target:
        $ref: "#/definitions/P2pPhonePaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "P2p3dsBindPhonePaymentOrderDto"
  P2p3dsBindPhonePaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/P2p3dsBindPhonePaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "P2p3dsBindPhonePaymentTemplateDto"
  P2p3dsPaymentOrderDto:
    type: "object"
    required:
    - "source"
    - "target"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        $ref: "#/definitions/P2pPaymentOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        $ref: "#/definitions/P2p3dsPaymentOrderSourceDto"
      target:
        $ref: "#/definitions/P2pPaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "P2p3dsPaymentOrderDto"
  P2p3dsPaymentOrderSourceDto:
    type: "object"
    properties:
      cvc:
        type: "string"
        description: "проверочный код карты - источника платежа"
        pattern: "^\\d{3}$"
      description:
        type: "string"
        description: "описание источника платежа"
      number:
        type: "string"
        description: "номер карты - источника платежа"
      validTo:
        type: "string"
        description: "срок действия карты - источника платежа"
        pattern: "^\\d{2}/\\d{2}$"
    title: "P2p3dsPaymentOrderSourceDto"
  P2p3dsPhonePaymentOrderDto:
    type: "object"
    required:
    - "source"
    - "target"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        $ref: "#/definitions/P2pPaymentOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        $ref: "#/definitions/P2p3dsPaymentOrderSourceDto"
      target:
        $ref: "#/definitions/P2pPhonePaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "P2p3dsPhonePaymentOrderDto"
  P2p3dsStartResponse:
    type: "object"
    properties:
      md:
        type: "string"
      paReq:
        type: "string"
      paymentId:
        type: "string"
      termUrl:
        type: "string"
      urlAcs:
        type: "string"
    title: "P2p3dsStartResponse"
  P2pPaymentOrderDetailsDto:
    type: "object"
    properties:
      message:
        type: "string"
        description: "сообщение получателю платежа"
    title: "P2pPaymentOrderDetailsDto"
  P2pPaymentOrderDto:
    type: "object"
    required:
    - "source"
    - "target"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        $ref: "#/definitions/P2pPaymentOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        $ref: "#/definitions/P2pPaymentOrderSourceDto"
      target:
        $ref: "#/definitions/P2pPaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "P2pPaymentOrderDto"
  P2pPaymentOrderSelfTargetDto:
    type: "object"
    properties:
      description:
        type: "string"
        description: "описание карты - назначения платежа"
      number:
        type: "string"
        description: "номер карты карты клиента - назначения платежа, маскированны\
          й (если не задан токен)"
      token:
        type: "string"
        description: "токен карты клиента"
      validTo:
        type: "string"
        description: "срок действия карты клиента - назначения платежа (если не за\
          дан токен)"
        pattern: "\\d{2}/\\d{2}"
    title: "P2pPaymentOrderSelfTargetDto"
  P2pPaymentOrderSourceDto:
    type: "object"
    properties:
      description:
        type: "string"
        description: "описание источника платежа"
      number:
        type: "string"
        description: "номер карты клиента - источника платежа, маскированный (если\
          \ не задан token)"
      token:
        type: "string"
        description: "токен карты клиента источника платежа"
      validTo:
        type: "string"
        description: "срок действия карты клиента - источника платежа (если не зад\
          ан token)"
        pattern: "\\d{2}/\\d{2}"
    title: "P2pPaymentOrderSourceDto"
  P2pPaymentOrderTargetDto:
    type: "object"
    properties:
      description:
        type: "string"
        description: "описание получателя платежа"
      number:
        type: "string"
        description: "номер карты получателя платежа, немаскированный (если не ука\
          зан token)"
        pattern: "^[2-7][0-9_]{15,18}$"
      token:
        type: "string"
        description: "токен карты получателя платежа"
      validTo:
        type: "string"
        description: "срок действия карты клиента - источника платежа (если не зад\
          ан token)"
        pattern: "\\d{2}/\\d{2}"
    title: "P2pPaymentOrderTargetDto"
  P2pPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/P2pPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "P2pPaymentTemplateDto"
  P2pPhonePaymentOrderDto:
    type: "object"
    required:
    - "source"
    - "target"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        $ref: "#/definitions/P2pPaymentOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        $ref: "#/definitions/P2pPaymentOrderSourceDto"
      target:
        $ref: "#/definitions/P2pPhonePaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "P2pPhonePaymentOrderDto"
  P2pPhonePaymentOrderTargetDto:
    type: "object"
    properties:
      description:
        type: "string"
        description: "описание получателя платежа"
      number:
        type: "string"
        description: "номер телефона получателя платежа"
        pattern: "^7[0-9]{10}$"
    title: "P2pPhonePaymentOrderTargetDto"
  P2pPhonePaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/P2pPhonePaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "P2pPhonePaymentTemplateDto"
  P2pSelfPaymentOrderDto:
    type: "object"
    required:
    - "source"
    - "target"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        $ref: "#/definitions/P2pPaymentOrderSourceDto"
      target:
        $ref: "#/definitions/P2pPaymentOrderSelfTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "P2pSelfPaymentOrderDto"
  P2pSelfPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/P2pSelfPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "P2pSelfPaymentTemplateDto"
  PaginationBatch«HistoryApplicationGenericDto»:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/HistoryApplicationGenericDto"
      number:
        type: "integer"
        format: "int32"
      size:
        type: "integer"
        format: "int32"
      totalElements:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
    title: "PaginationBatch«HistoryApplicationGenericDto»"
  PaginationBatch«HistoryOperationDto»:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/HistoryOperationDto"
      number:
        type: "integer"
        format: "int32"
      size:
        type: "integer"
        format: "int32"
      totalElements:
        type: "integer"
        format: "int64"
      totalPages:
        type: "integer"
        format: "int32"
    title: "PaginationBatch«HistoryOperationDto»"
  PaycheckRecordResponse:
    type: "object"
    properties:
      organisation:
        type: "string"
        example: "ООО \"Ромашка\""
      period:
        type: "string"
        example: "2019-04-01"
      recordId:
        type: "integer"
        format: "int32"
        example: 227
    title: "PaycheckRecordResponse"
  PaycheckResponse:
    type: "object"
    properties:
      desc:
        type: "string"
        example: "НАЧИСЛЕНО ВСЕГО"
        description: "Наименование строки"
      group:
        type: "boolean"
        example: true
        description: "Признак группировки последующих записей, т.е. последующие за\
          писи относятся к записи с этим признаком. Признак показывает суммирующие\
          \ строки."
      value:
        type: "number"
        example: 2000.15
        description: "Сумма в рублях"
    title: "PaycheckResponse"
  PaymentBankDto:
    type: "object"
    properties:
      cardStatus:
        type: "string"
      cardStatusDate:
        type: "string"
        format: "date-time"
      dayOfPeriod:
        type: "string"
      dboId:
        type: "string"
      endDate:
        type: "string"
        format: "date-time"
      feeAmount:
        type: "number"
      feeCurrency:
        type: "string"
      fxRate:
        type: "number"
        format: "double"
      internalTargetType:
        type: "string"
      invoiceId:
        type: "string"
      isLastDayOfPeriod:
        type: "boolean"
      isTimetable:
        type: "boolean"
      lastPaymentDate:
        type: "string"
        format: "date-time"
      maxCount:
        type: "string"
      message:
        type: "string"
      paymentType:
        type: "string"
      periodStep:
        type: "string"
      periodType:
        type: "string"
      purpose:
        type: "string"
      rbbic:
        type: "string"
      rinn:
        type: "string"
      rkpp:
        type: "string"
      rname:
        type: "string"
      rrn:
        type: "string"
      sourceAmount:
        type: "number"
      sourceBic:
        type: "string"
      sourceContractType:
        type: "string"
      sourceCurrency:
        type: "string"
      sourceDescription:
        type: "string"
      sourceNumber:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      targetAmount:
        type: "number"
      targetBic:
        type: "string"
      targetContractType:
        type: "string"
      targetCurrency:
        type: "string"
      targetDescription:
        type: "string"
      targetNumber:
        type: "string"
      targetType:
        type: "string"
      taxCbc:
        type: "string"
      taxDate:
        type: "string"
      taxInn:
        type: "string"
      taxNumber:
        type: "string"
      taxOkato:
        type: "string"
      taxReason:
        type: "string"
      taxStatus:
        type: "string"
      taxType:
        type: "string"
      taxUin:
        type: "string"
      usedTemplateId:
        type: "string"
    title: "PaymentBankDto"
  PaymentBankOperationDto:
    type: "object"
    properties:
      bic:
        type: "string"
      clientId:
        type: "string"
      createDateTime:
        type: "string"
        format: "date-time"
      documentDate:
        type: "string"
        format: "date-time"
      documentNumber:
        type: "string"
      documentReference:
        type: "string"
      documentStatus:
        type: "string"
        enum:
        - "PROC"
        - "EXEC"
        - "DONE"
        - "DECL"
      documentStatusComment:
        type: "string"
      historyType:
        type: "string"
      payment:
        $ref: "#/definitions/PaymentBankDto"
      statementDateTime:
        type: "string"
        format: "date-time"
      type:
        type: "string"
        enum:
        - "PAYMENT_BANK"
        - "PAYMENT_SERVICE_PROVIDER"
        - "PAYMENT_P2P"
        - "PAYMENT_P2P_3DS"
        - "OPEN_PRODUCT"
        - "BANK_REQUEST"
    title: "PaymentBankOperationDto"
  PaymentCard:
    type: "object"
    properties:
      number:
        type: "string"
        example: "532461______4575"
        description: "Номер карты"
      validTo:
        type: "string"
        example: "11/23"
        description: "Срок действия карты"
    title: "PaymentCard"
  PaymentInfo:
    type: "object"
    properties:
      accountPaymentInfo:
        $ref: "#/definitions/AccountPaymentInfo"
      cardPaymentInfo:
        $ref: "#/definitions/CardPaymentInfo"
    title: "PaymentInfo"
  PaymentInvoiceItemDto:
    type: "object"
    properties:
      amount:
        type: "string"
        description: "Сумма начисления. Валюта для начислений подразумевается всег\
          да Российский рубль"
      invoiceId:
        type: "string"
        description: "Id начисления, которое необходимо оплатить"
    title: "PaymentInvoiceItemDto"
  PaymentInvoicesRequest:
    type: "object"
    properties:
      amount:
        description: "Сумма"
        $ref: "#/definitions/PaymentOrderAmountDto"
      invoices:
        type: "array"
        description: "Массив начислений для массовой оплаты"
        items:
          $ref: "#/definitions/PaymentInvoiceItemDto"
      operationCode:
        type: "string"
        example: "GISGMP||GIBDD"
        description: "Оператор-код провайдера, куда происходит оплата"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
    title: "PaymentInvoicesRequest"
  PaymentMask:
    type: "object"
    properties:
      id:
        type: "string"
      title:
        type: "string"
    title: "PaymentMask"
  PaymentOperatorDto:
    type: "object"
    properties:
      accountLength:
        type: "integer"
        format: "int32"
        description: "Максимальная длина номера счета плательщика"
      accountType:
        type: "integer"
        format: "int32"
        description: "0 – указывается номер телефона, 1 – номер лицевого счета або\
          нента"
      address:
        type: "string"
        description: "Адрес получателя платежа (в системах перевода – адрес точки\
          \ выдачи перевода)"
      checkBDPN:
        type: "boolean"
      city:
        type: "string"
        description: "Город"
      clientConfirmAttrList:
        type: "string"
      country:
        type: "string"
        description: "Страна"
      deleted:
        type: "boolean"
      documentType:
        type: "string"
        example: "inn"
        description: "Тип документа"
        enum:
        - "uin"
        - "inn"
        - "driver_license"
        - "sts"
        - "passport_rf"
        - "birth_certificate"
        - "sailor_passport"
        - "officer"
        - "military"
        - "temporary_identity_card"
        - "release_certificate"
        - "foreign_passport"
        - "residence"
        - "refugee_certificate"
        - "migration_card"
        - "passport_ussr"
        - "snils"
      documentValue:
        type: "string"
        example: "1234567898"
        description: "Значение лицевого счета, водительских удостверений, инн и т\
          .д. В соответсивии с типом"
      extraCommission:
        type: "string"
        description: "Дополнительная комиссия, которую может брать оператор: -1 бе\
          з ограничения, 0 - запрещено, >0 - максимальный размер. Разделитель цело\
          й и дробной части – точка."
      extraInfo:
        type: "string"
      group:
        type: "boolean"
        description: "Признак вендора-группы"
      id:
        type: "string"
        description: "Subscription id"
      isMobile:
        type: "boolean"
      isSupportRequestRSTEP:
        type: "boolean"
      logos:
        type: "object"
        description: "Логотипы оператора"
        additionalProperties:
          $ref: "#/definitions/PaymentOperatorLogoDto"
      mask:
        type: "string"
      maxSumma:
        type: "string"
        description: "Максимальная сумма платежа"
      mcc:
        type: "string"
      mnc:
        type: "string"
      mrlist:
        type: "boolean"
      multiCheck:
        type: "boolean"
      nameEN:
        type: "string"
        description: "Название оператора на английском языке"
      nameRU:
        type: "string"
        description: "Название оператора на русском языке"
      offLine:
        type: "integer"
        format: "int32"
      operatorCode:
        type: "string"
        description: "Код оператора (вендора)"
      order:
        type: "string"
      parameters:
        type: "array"
        items:
          $ref: "#/definitions/PaymentOperatorParameterDto"
      paymentInfo:
        description: "Информация о платеже"
        $ref: "#/definitions/PaymentInfo"
      providerCurrency:
        type: "string"
        description: "Код национальной валюты оператора через “;”"
      regionId:
        type: "string"
      regions:
        type: "array"
        description: "Список регионов"
        items:
          $ref: "#/definitions/RegionDto"
      regularExpression:
        type: "string"
        description: "Регулярное выражение для проверки правильности введенного но\
          мера счета плательщика"
      senior:
        type: "string"
        description: "Группа вендоров (код вышестоящего группирующего вендора)"
      stopExportAnyway:
        type: "boolean"
      stopExportChannels:
        type: "string"
      summa:
        type: "string"
        description: "Минимальная сумма платежа"
      synonym:
        type: "string"
        description: "Список синонимов вендора (разделитель: запятая)"
      type:
        type: "string"
        description: "Тип категории"
        enum:
        - "GIBDD"
        - "TAX"
        - "HCS"
    title: "PaymentOperatorDto"
  PaymentOperatorLogoDto:
    type: "object"
    properties:
      data:
        type: "string"
        description: "Изображение (base64)"
      name:
        type: "string"
        description: "Название изображения"
    title: "PaymentOperatorLogoDto"
  PaymentOperatorParameterDto:
    type: "object"
    properties:
      attrType:
        type: "integer"
        format: "int64"
      comment:
        type: "string"
      direction:
        type: "integer"
        format: "int32"
        description: "0 – input (вводится плательщиком), 1 – константа, 2 – output\
          \ (возвращается сервером AWGW)"
      dontShow:
        type: "boolean"
      dontTicket:
        type: "boolean"
      gisPeriod:
        type: "boolean"
      interfaceType:
        type: "string"
      isMain:
        type: "boolean"
      mask:
        type: "string"
        description: "Маска поля"
      maskList:
        type: "array"
        items:
          $ref: "#/definitions/PaymentMask"
      maxLength:
        type: "integer"
        format: "int64"
        description: "Максимальная длина вводимых данных"
      minLength:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "Название параметра"
      noPTValue:
        type: "boolean"
      npp:
        type: "integer"
        format: "int64"
      rawLength:
        type: "integer"
        format: "int64"
      regularExpression:
        type: "string"
        description: "Регулярное выражение для проверки правильности введенного но\
          мера счета плательщика"
      required:
        type: "integer"
        format: "int32"
        description: "0 – обязательный параметр, 1 – необязательный параметр"
      title:
        type: "string"
        description: "Пользовательское наименование параметра"
      type:
        type: "string"
        description: "Тип данных, используемый для ввода параметра: Int - число, String\
          \ – строка, Date – Дата, Period – Дата в формате ГГГГMM и пр, MaskList –\
          \ список значений"
    title: "PaymentOperatorParameterDto"
  PaymentOrderAmountDto:
    type: "object"
    required:
    - "sourceAmount"
    properties:
      feeAmount:
        type: "number"
        description: "сумма комиссии (по уиолчанию = 0)"
        minimum: 0.0
        exclusiveMinimum: false
      feeCurrency:
        type: "string"
        description: "валюта комиссии (по умолчанию = валюте списания)"
      fxRate:
        type: "number"
        format: "double"
        description: "курс конвертации, по умолчанию = 1.00"
        minimum: 0.0
        exclusiveMinimum: false
      sourceAmount:
        type: "number"
        description: "сумма списания. Для рублёвых переводов со счёта на счёт дост\
          аточно только этой суммы"
        minimum: 0.0
        exclusiveMinimum: false
      sourceCurrency:
        type: "string"
        description: "валюта списания"
      targetAmount:
        type: "number"
        description: "сумма зачисления (по умолчанию = сумме списания)"
        minimum: 0.0
        exclusiveMinimum: false
      targetCurrency:
        type: "string"
        description: "валюта зачисления (по умолчанию = валюте списания)"
    title: "PaymentOrderAmountDto"
  PaymentOrderDetailsDto:
    type: "object"
    properties:
      purpose:
        type: "string"
        description: "назначение платежа"
      rbbic:
        type: "string"
        description: "БИК Банка получателя"
      rinn:
        type: "string"
        description: "ИНН получателя"
      rkpp:
        type: "string"
        description: "КПП получателя"
      rname:
        type: "string"
        description: "Наименования получателя (В случае перевода себе в рамках гру\
          ппы Зенит == ФИО плательщика)"
      targetType:
        type: "string"
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
      taxCbc:
        type: "string"
        description: "налоговые платежи: КБК"
      taxDate:
        type: "string"
        description: "налоговые платежи: дата документа"
      taxInn:
        type: "string"
        description: "налоговые платежи: ИНН плательщика налогового платежа"
      taxNumber:
        type: "string"
        description: "налоговые платежи: номер документа"
      taxOkato:
        type: "string"
        description: "налоговые платежи: ОКАТО"
      taxPeriod:
        type: "string"
        description: "налоговые платежи: налоговый период"
      taxReason:
        type: "string"
        description: "налоговые платежи: основание платежа"
      taxStatus:
        type: "string"
        description: "налоговые платежи: статус составителя расчётного документа"
      taxType:
        type: "string"
        description: "налоговые платежи: тип платежа"
      taxUin:
        type: "string"
        description: "налоговые платежи: уникальный идентификатор начисления"
    title: "PaymentOrderDetailsDto"
  PaymentOrderDto:
    type: "object"
    required:
    - "amount"
    - "bic"
    - "source"
    - "target"
    properties:
      amount:
        $ref: "#/definitions/PaymentOrderAmountDto"
      bic:
        type: "string"
        pattern: "^[0-9]{9}$"
      details:
        description: "для платежей на свободные реквизиты"
        $ref: "#/definitions/PaymentOrderDetailsDto"
      internalTargetType:
        type: "string"
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      paymentType:
        type: "string"
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        $ref: "#/definitions/PaymentOrderTargetDto"
    title: "PaymentOrderDto"
  PaymentOrderSourceDto:
    type: "object"
    required:
    - "number"
    properties:
      bic:
        type: "string"
        example: "040396717"
        description: "БИК банка"
        pattern: "^[0-9]{9}$"
      description:
        type: "string"
        description: "описание источника платежа"
      number:
        type: "string"
    title: "PaymentOrderSourceDto"
  PaymentOrderTargetDto:
    type: "object"
    required:
    - "number"
    properties:
      bic:
        type: "string"
        example: "040396717"
        description: "БИК банка"
        pattern: "^[0-9]{9}$"
      description:
        type: "string"
        description: "описание источника платежа"
      number:
        type: "string"
    title: "PaymentOrderTargetDto"
  PaymentProviderRequest:
    type: "object"
    properties:
      aggregator:
        type: "string"
        description: "Агрегатор."
      amount:
        type: "string"
        description: "Cумма."
      commis:
        type: "string"
        description: "Cумма комиссии."
      saferPayment:
        $ref: "#/definitions/SaferPaymentEntity"
      checkServiceProvider:
        $ref: "#/definitions/PaymentServiceProviderCheckDto"
    title: "PaymentProviderRequest"
  PaymentServiceProviderCheckDto:
    type: "object"
    properties:
      bic:
        type: "string"
        description: "БИК банка пользователя"
      card:
        description: "Карта для оплаты"
        $ref: "#/definitions/PaymentCard"
      channel:
        type: "string"
        description: "Канал доставки"
      customerId:
        type: "string"
        description: "ID пользователя"
      dboid:
        type: "string"
        example: "79517409-012b-4b54-a83d-a53c8552214"
        description: "Уникальный код транзакции. При первом запросе не нужен. Id б\
          удет возвращен в ответе и его надо передавать в запросе."
      departmentId:
        type: "string"
        description: "Идентификатор подразделения"
      fields:
        type: "array"
        description: "массив передается только в случае передачи значений, введенн\
          ых в Input поля по запросу AWGateWay"
        items:
          $ref: "#/definitions/FieldsRequest"
      idCategory:
        type: "string"
        description: "id категории поставщика услуг"
      logo:
        type: "string"
        format: "byte"
        description: "Лого"
      operatorName:
        type: "string"
        description: "Название поставщика услуг"
      puref:
        type: "string"
        example: "OW||MT8"
        description: "Название вендора"
      serviceProviderCategoryName:
        type: "string"
        example: "Мобильные платежи"
        description: "Название категории поставщика услуг"
      serviceProviderName:
        type: "string"
        example: "МТС"
        description: "Название поставщика услуг"
      step:
        type: "integer"
        format: "int32"
        example: 1
        description: "Номер шага в процессе диалога с AWGW"
      terminalNumber:
        type: "string"
        example: "88888889"
        description: "Идентификатор терминала"
      w4:
        description: "Блок сообщений для WAY4"
        $ref: "#/definitions/W4Entity"
    title: "PaymentServiceProviderCheckDto"
  PaymentServiceProviderCheckRequest:
    type: "object"
    properties:
      card:
        description: "Карта для оплаты"
        $ref: "#/definitions/PaymentCard"
      dboid:
        type: "string"
        example: "79517409-012b-4b54-a83d-a53c8552214"
        description: "Уникальный код транзакции. При первом запросе не нужен. Id б\
          удет возвращен в ответе и его надо передавать в запросе."
      fields:
        type: "array"
        description: "массив передается только в случае передачи значений, введенн\
          ых в Input поля по запросу AWGateWay"
        items:
          $ref: "#/definitions/FieldsRequest"
      idCategory:
        type: "string"
        description: "id категории поставщика услуг"
      logo:
        type: "string"
        format: "byte"
        description: "Лого"
      operatorName:
        type: "string"
        description: "Название поставщика услуг"
      puref:
        type: "string"
        example: "OW||MT8"
        description: "Название вендора"
      serviceProviderCategoryName:
        type: "string"
        example: "Мобильные платежи"
        description: "Название категории поставщика услуг"
      serviceProviderName:
        type: "string"
        example: "МТС"
        description: "Название поставщика услуг"
      step:
        type: "integer"
        format: "int32"
        example: 1
        description: "Номер шага в процессе диалога с AWGW"
      terminalNumber:
        type: "string"
        example: "88888889"
        description: "Идентификатор терминала"
      w4:
        description: "Блок сообщений для WAY4"
        $ref: "#/definitions/W4Entity"
    title: "PaymentServiceProviderCheckRequest"
  PaymentServiceProviderDto:
    type: "object"
    properties:
      invoiceId:
        type: "string"
        example: "GISGMP_18810177190110104783"
        description: "Сведения об индентификаторе начисления"
      paymentProvider:
        $ref: "#/definitions/PaymentProviderRequest"
      source:
        $ref: "#/definitions/PaymentOrderSourceDto"
    title: "PaymentServiceProviderDto"
  PaymentServiceProviderResponse:
    type: "object"
    properties:
      aggregator:
        type: "string"
        description: "Наименование агрегатора"
      channel:
        type: "string"
        description: "Канал доставки"
      checkStatus:
        type: "string"
        description: "Статус проверки"
      commis:
        type: "string"
        description: "Комиссия"
      customerId:
        type: "string"
        description: "ID клиента"
      dboid:
        type: "string"
        description: "ID платежа поставщика услуг"
      departmentId:
        type: "string"
      fields:
        type: "array"
        description: "Поля для генерации формы оплаты поставщиков услуг"
        items:
          $ref: "#/definitions/FieldsResponse"
      puref:
        type: "string"
        description: "Название вендора"
      status:
        type: "string"
      step:
        type: "string"
        description: "Номер шага"
      terminalNumber:
        type: "string"
        description: "Идентификатор терминала"
      w4:
        $ref: "#/definitions/W4Entity"
    title: "PaymentServiceProviderResponse"
  PaymentServiceProviderTemplate:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/PaymentServiceProviderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "PaymentServiceProviderTemplate"
  PaymentStatusDto:
    type: "object"
    properties:
      dboId:
        type: "string"
        description: "идентификатор платежа ПУ"
      documentReference:
        type: "string"
        description: "id документа, присвоенный ему в АБС"
      documentStatus:
        type: "string"
        description: "статус обработки документа:<ul><li>proc - в обработке,</li><li>exec\
          \ - принят к исполнению (прошел все проверки),</li><li>done - исполнен,</li><li>decl\
          \ - отклонен</li></ul>"
        enum:
        - "proc"
        - "exec"
        - "done"
        - "decl"
      documentStatusComment:
        type: "string"
      operationId:
        type: "string"
        description: "идентификатор платежа в истории"
      processingInstanceId:
        type: "string"
        description: "processingInstanceId"
      rrn:
        type: "string"
        description: "Номер транзакции в ПЦ"
      statementDateTime:
        type: "string"
        format: "date-time"
        description: "дата-время проведения операции"
      templateId:
        type: "string"
        description: "идентификатор шаблона"
    title: "PaymentStatusDto"
  PaymentTargetTypeDto:
    type: "object"
    properties:
      targetType:
        type: "string"
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "PaymentTargetTypeDto"
  PaymentTemplateDto:
    type: "object"
    properties:
      bic:
        type: "string"
      changed:
        type: "string"
        format: "date-time"
        example: "2019-03-20T04:51:37.152Z"
        description: "Дата изменения темплейта в формате ISO"
      created:
        type: "string"
        format: "date-time"
        example: "2019-03-20T04:51:37.152Z"
        description: "Дата создания темплейта в формате ISO"
      dayOfPeriod:
        type: "string"
        description: "День недели или число месяца"
      endDate:
        type: "string"
        format: "date-time"
        example: "2019-03-20T04:51:37.152Z"
        description: "Дата окончания выполнения регулярных платежей в формате ISO"
      isLastDayOfPeriod:
        type: "boolean"
        description: "Последний день месяца/недели"
      isPending:
        type: "boolean"
      isTimetable:
        type: "boolean"
        description: "Регулярный - true, false - нет"
      lastExecution:
        type: "string"
        format: "date-time"
      lastOperationId:
        type: "string"
        description: "ID последней операции для регулярных платежей"
      lastPaymentDate:
        type: "string"
        format: "date-time"
        description: "Дата последнего успешного платежа"
      maxCount:
        type: "string"
        description: "День недели или число месяца"
      name:
        type: "string"
      nextExecution:
        type: "string"
        format: "date-time"
      paymentOrder:
        $ref: "#/definitions/GenericPaymentOrderDto"
      periodStep:
        type: "string"
        description: "Количество выполнения регулярного платежа. После каждого про\
          ведения регулярного платежа, мы добавляем +1"
      periodType:
        type: "string"
        description: "EVERY_MONTH - каждый месяц и EVERY_WEEK - каждую неделю"
        enum:
        - "EVERY_MONTH"
        - "EVERY_WEEK"
      startDate:
        type: "string"
        format: "date-time"
        example: "2019-03-20T04:51:37.152Z"
        description: "Дата начала выполнения регулярных платежей в формате ISO"
      templateId:
        type: "string"
    title: "PaymentTemplateDto"
  PhonePaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      message:
        type: "string"
        description: "сообщение получателю платежа"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        $ref: "#/definitions/PhonePaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "PhonePaymentOrderDto"
  PhonePaymentOrderTargetDto:
    type: "object"
    required:
    - "number"
    properties:
      number:
        type: "string"
        description: "номер телефона получателя платежа"
    title: "PhonePaymentOrderTargetDto"
  PhonePaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/PhonePaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "PhonePaymentTemplateDto"
  ProductDetailsReferenceDto:
    type: "object"
    properties:
      canOrder:
        type: "string"
        description: "можно ли заказать справку"
        enum:
        - "[0"
        - "1]"
      cost:
        type: "string"
        description: "сколько стоит справка (в валюте счета)"
      currCode:
        type: "string"
    title: "ProductDetailsReferenceDto"
  Program:
    type: "object"
    properties:
      action:
        $ref: "#/definitions/Action"
      benefit:
        type: "string"
      conditions:
        type: "array"
        items:
          $ref: "#/definitions/Condition"
      desc:
        type: "array"
        items:
          $ref: "#/definitions/Desc"
      id:
        type: "string"
      name:
        type: "string"
      short_desc:
        type: "string"
      type:
        type: "string"
    title: "Program"
  RegionDto:
    type: "object"
    properties:
      code:
        type: "string"
        description: "Код региона"
      name:
        type: "string"
        example: "Тульская область"
        description: "Название региона"
    title: "RegionDto"
  RenameTemplateRequest:
    type: "object"
    properties:
      name:
        type: "string"
    title: "RenameTemplateRequest"
  SaferPaymentEntity:
    type: "object"
    properties:
      checkStatus:
        type: "string"
    title: "SaferPaymentEntity"
  SendResultDto:
    type: "object"
    properties:
      message:
        type: "string"
      responseParameters:
        type: "object"
      sendResult:
        type: "string"
        enum:
        - "SUCCESS"
        - "FAIL_TRANSPORT_ERROR"
    title: "SendResultDto"
  SetPinDto:
    type: "object"
    properties:
      passportNumber:
        type: "string"
        description: "Номер паспорта"
      pin:
        type: "string"
        example: "1234"
        description: "Новый PIN"
        enum:
        - "\\d{4}"
    title: "SetPinDto"
  SetProductAliasRequestDetails:
    type: "object"
    properties:
      type:
        type: "string"
      number:
        type: "string"
      alias:
        type: "string"
    title: "SetProductAliasRequestDetails"
  SetProductAliasResponse:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
        - "SUCCESS"
    title: "SetProductAliasResponse"
  SetProductConfigurationRequestDto:
    type: "object"
    properties:
      hidden:
        type: "boolean"
        description: "Признак, что продукт был добровольно скрыт пользователем"
      type:
        type: "string"
        example: "card"
        description: "Тип продукта"
    title: "SetProductConfigurationRequestDto"
  SetProductConfigurationResponse:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
        - "SUCCESS"
    title: "SetProductConfigurationResponse"
  SettingDto:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
        example: "FPS_ACCOUNT"
        description: "Ключ настройки"
        enum:
        - "FPS_ACCOUNT"
        - "FPS_PHONE"
        - "INVISIBLE"
      value:
        type: "string"
        example: "40817810240500004685"
        description: "Значение настройки"
    title: "SettingDto"
  ShopWindowCard:
    type: "object"
    properties:
      cards:
        type: "array"
        items:
          $ref: "#/definitions/Card"
      color:
        type: "array"
        items:
          type: "integer"
          format: "int32"
      desc:
        type: "string"
      image:
        type: "string"
      name:
        type: "string"
      product:
        type: "string"
    title: "ShopWindowCard"
  ShopWindowCredit:
    type: "object"
    properties:
      product:
        type: "string"
      programs:
        type: "array"
        items:
          $ref: "#/definitions/Program"
    title: "ShopWindowCredit"
  ShopWindowList«ShopWindowCard»:
    type: "object"
    properties:
      products:
        type: "array"
        items:
          $ref: "#/definitions/ShopWindowCard"
    title: "ShopWindowList«ShopWindowCard»"
  ShopWindowList«ShopWindowCredit»:
    type: "object"
    properties:
      products:
        type: "array"
        items:
          $ref: "#/definitions/ShopWindowCredit"
    title: "ShopWindowList«ShopWindowCredit»"
  SoleProprietorOrderDetailsDto:
    type: "object"
    required:
    - "inn"
    - "name"
    - "nds"
    - "purpose"
    properties:
      bankName:
        type: "string"
        description: "Банк получателя"
      inn:
        type: "string"
        description: "ИНН получателя"
      name:
        type: "string"
        description: "ФИО получателя"
      nds:
        type: "string"
        description: "Признак необходимости НДС"
        enum:
        - "'no_tax'"
        - "'included'"
      purpose:
        type: "string"
        description: "Назначение платежа"
    title: "SoleProprietorOrderDetailsDto"
  SoleProprietorPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        description: "Для платежей ИП"
        $ref: "#/definitions/SoleProprietorOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        description: "Сведения о получателе платежа/перевода"
        $ref: "#/definitions/PaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "SoleProprietorPaymentOrderDto"
  SoleProprietorPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/SoleProprietorPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "SoleProprietorPaymentTemplateDto"
  StateChargesDto:
    type: "object"
    properties:
      amountToPay:
        type: "number"
        example: 500.0
        description: "Сумма к оплате"
      billDate:
        type: "string"
        example: "2018-12-17"
        description: "Дата начисления"
      billId:
        type: "string"
        example: "18810167181126017171"
        description: "УИН (уникальный идентификатор начисления)"
      billPurpose:
        type: "string"
        example: "ШТРАФ ПО АДМИНИСТРАТИВНОМУ ПРАВОНАРУШЕНИЮ ПОСТАНОВЛЕНИЕ №18810167181126017171"
        description: "Описание"
      budgetPaymentType:
        type: "string"
        example: "ШТ"
        description: "Тип платежа"
      budgetPurpose:
        type: "string"
        example: "0"
        description: "Основание платежа"
      budgetStatus:
        type: "string"
        example: "01"
        description: "Статус плательщика"
      budgetTaxDocDate:
        type: "string"
        example: "0"
        description: "Дата документа"
      budgetTaxDocNumber:
        type: "string"
        example: "0"
        description: "№ документа"
      budgetTaxPeriod:
        type: "string"
        example: "0"
        description: "Налоговый период"
      discountDate:
        type: "string"
        example: "2018-12-17"
        description: "Дата скидки"
      discountSize:
        type: "number"
        example: 50.0
        description: "Размер скидки в процентах"
      kbk:
        type: "string"
        example: "18811630020016000140"
        description: "КБК"
      okato:
        type: "string"
        example: "66701000"
        description: "ОКАТО"
      recipientAccount:
        type: "string"
        example: "40101810200000010001"
        description: "Счёт получателя"
      recipientBankAccount:
        type: "string"
        description: "Коррсчет. банка получателя"
      recipientBankBic:
        type: "string"
        example: "046614001"
        description: "БИК получателя"
      recipientBankName:
        type: "string"
        example: "ОТДЕЛЕНИЕ СМОЛЕНСК"
        description: "Банк получателя"
      recipientInn:
        type: "string"
        example: "6730013564"
        description: "ИНН получателя"
      recipientKpp:
        type: "string"
        example: "673001001"
        description: "КПП получателя"
      recipientName:
        type: "string"
        example: "ЦАФАП ГИБДД УМВД России по Смоленской области"
        description: "Получатель"
      recipientOgrn:
        type: "string"
        description: "ОГРН получателя"
      recipientSubAccount:
        type: "string"
        description: "Субсчет получателя"
      totalAmount:
        type: "number"
        example: 500.0
        description: "Сумма начисления"
      validUntil:
        type: "string"
        description: "Оплатить до"
    title: "StateChargesDto"
  StatusDto:
    type: "object"
    properties:
      code:
        type: "string"
        example: "Active"
        description: "машино-читаемый статус"
      desc:
        type: "string"
        example: "Действующий"
        description: "человеко-читаемый статус"
      hidden:
        type: "boolean"
        description: "признак, что продукт был добровольно скрыт пользователем"
    title: "StatusDto"
  SubscriptionCategoryDto:
    type: "object"
    properties:
      category:
        example: "Штрафы"
        description: "Имя категории"
        $ref: "#/definitions/PaymentOperatorDto"
      providers:
        type: "array"
        description: "Список поставщиков услуг (провайдеров)"
        items:
          $ref: "#/definitions/PaymentOperatorDto"
      type:
        type: "string"
        example: "GIBDD"
        description: "Тип категории"
        enum:
        - "GIBDD"
        - "TAX"
        - "HCS"
    title: "SubscriptionCategoryDto"
  SubscriptionCreateUpdateOrderResponseDto:
    type: "object"
    properties:
      response:
        $ref: "#/definitions/BillingSubscriptionRs"
      status:
        type: "string"
        enum:
        - "NEXT"
        - "FINAL"
        - "CREATED"
    title: "SubscriptionCreateUpdateOrderResponseDto"
  SubscriptionItemDto:
    type: "object"
    properties:
      alias:
        type: "string"
        example: "Мои штрафы"
        description: "Alias для подписки"
      definition:
        type: "string"
      documentType:
        type: "string"
        example: "inn"
        description: "Тип документа"
        enum:
        - "uin"
        - "inn"
        - "driver_license"
        - "sts"
        - "passport_rf"
        - "birth_certificate"
        - "sailor_passport"
        - "officer"
        - "military"
        - "temporary_identity_card"
        - "release_certificate"
        - "foreign_passport"
        - "residence"
        - "refugee_certificate"
        - "migration_card"
        - "passport_ussr"
        - "snils"
      documentValue:
        type: "string"
        example: "1234567898"
        description: "Значение лицевого счета, водительских удостверений, инн и т\
          .д. В соответсивии с типом"
      id:
        type: "string"
        example: "1234"
        description: "Id подписки"
      name:
        type: "string"
        example: "1234"
        description: "Наименование подписки"
      operatorCode:
        type: "string"
        example: "0||4680"
        description: "Код поставщика услуг подписки"
      provider:
        description: "Поставщик услуг подписки"
        $ref: "#/definitions/PaymentOperatorDto"
    title: "SubscriptionItemDto"
  SubscriptionListResponseDto:
    type: "object"
    properties:
      subscriptions:
        type: "array"
        description: "Подписки"
        items:
          $ref: "#/definitions/SubscriptionItemDto"
    title: "SubscriptionListResponseDto"
  SubscriptionSearchResponseDto:
    type: "object"
    properties:
      bills:
        type: "array"
        description: "Начисления"
        items:
          $ref: "#/definitions/InvoiceBill"
      response:
        $ref: "#/definitions/BillingSubscriptionRs"
      status:
        type: "string"
        enum:
        - "NEXT"
        - "FINAL"
        - "CREATED"
    title: "SubscriptionSearchResponseDto"
  TaxOrderDetailsDto:
    type: "object"
    required:
    - "documentDate"
    - "documentNumber"
    - "inn"
    - "kbk"
    - "kpp"
    - "name"
    - "oktmo"
    - "payerStatus"
    - "purpose"
    - "reason"
    - "taxPeriod"
    - "uin"
    properties:
      documentDate:
        type: "string"
        description: "Дата документа (поле 109)"
      documentNumber:
        type: "string"
        description: "Номер документа (поле 108)"
      inn:
        type: "string"
        description: "ИНН получателя (поле 61)"
      kbk:
        type: "string"
        description: "КБК (поле 104)"
      kpp:
        type: "string"
        description: "КПП получателя (поле 103)"
      name:
        type: "string"
        description: "Наименования получателя (поле 8)"
      oktmo:
        type: "string"
        description: "ОКТМО получателя (105)"
      payerInfo:
        type: "string"
        description: "Сведения о плательщике"
      payerInn:
        type: "string"
        description: "ИНН плательщика (поле 60)"
      payerStatus:
        type: "string"
        description: "Статус плательщика (составителя) (поле 101)"
      purpose:
        type: "string"
        description: "Назначение платежа (поле 24)"
      reason:
        type: "string"
        description: "Основание платежа (106)"
      taxPeriod:
        type: "string"
        description: "Налоговый период (поле 107)"
      uin:
        type: "string"
        description: "УИН (поле 22)"
    title: "TaxOrderDetailsDto"
  TaxPaymentOrderDto:
    type: "object"
    properties:
      amount:
        description: "Сведения о сумме перевода"
        $ref: "#/definitions/PaymentOrderAmountDto"
      depositTargetType:
        type: "string"
        description: "Тип операции с вкладом (только для чтения, отправлять не над\
          о): \n    CHARGE - пополнение,\n    WITHDRAW - изъятие,"
        readOnly: true
        enum:
        - "CHARGE"
        - "WITHDRAW"
      details:
        description: "Для налоговых платежей"
        $ref: "#/definitions/TaxOrderDetailsDto"
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      internalTargetType:
        type: "string"
        description: "Тип внутреннего перевода (только для чтения, отправлять не н\
          адо):\n    SELF - между своими счетами,\n    SELF_EXCHANGE - между своим\
          и счетами с конверсией,\n    OTHER - на счет другого клиента Банка,"
        readOnly: true
        enum:
        - "SELF"
        - "SELF_EXCHANGE"
        - "OTHER"
      mobileBank:
        type: "boolean"
        description: "описывает через какую систему совершен платеж - интернет/моб\
          ильный банк (только для чтения, отправлять не надо)"
        readOnly: true
      p2pTargetType:
        type: "string"
        description: "Тип перевода P2P, P2P_3DS (только для чтения, отправлять не\
          \ надо):    CARD_SELF - перевод на свою карту,\n    CARD_BANK - перевод\
          \ на карту клиенту Банка,\n    CARD_OTHER - перевод на карту клиенту дру\
          гого банка,\n    PHONE - перевод по номеру телефона клиенту Банка"
        readOnly: true
        enum:
        - "CARD_SELF"
        - "CARD_BANK"
        - "CARD_OTHER"
        - "PHONE"
      paymentType:
        type: "string"
        description: "Тип платежа (только для чтения, отправлять не надо):\n    INTERNAL\
          \ - внутренний перевод,\n    DEPOSIT - пополнение/изъятие вклада,\n    REQUISITES\
          \ - по свободным реквизитам,\n    SERVICE_PROVIDER - платежи ПУ,\n    CARD\
          \ - по номеру карты (Зенит Сочи),\n    PHONE - по номеру телефона (Зенит\
          \ Сочи),\n    P2P - со своей карты на чужую (по номеру или токену),\n  \
          \  P2P_SELF - со своей карты на свою (по номеру/validTo или токену),\n \
          \   P2P_3DS - с чужой карты (номер+validTo+cvc) на свою или чужую по ном\
          еру или токену,\n    P2P_3DS_BIND - с чужой карты (токен) на свою или чу\
          жую по номеру или токену;\n"
        readOnly: true
        enum:
        - "INTERNAL"
        - "DEPOSIT"
        - "REQUISITES"
        - "SERVICE_PROVIDER"
        - "CARD"
        - "PHONE"
        - "P2P"
        - "P2P_SELF"
        - "P2P_3DS"
        - "P2P_3DS_BIND"
        - "FPS"
      source:
        description: "Сведения об источнике платежа/перевода"
        $ref: "#/definitions/PaymentOrderSourceDto"
      target:
        description: "Сведения о получателе платежа/перевода"
        $ref: "#/definitions/PaymentOrderTargetDto"
      targetType:
        type: "string"
        description: "Тип перевода по свободным реквизитам (только для чтения, отп\
          равлять не надо): \n    LEGAL_ENTITY - перевод юр лицу,\n    BUDGET - пе\
          ревод в бюджет,\n    INDIVIDUAL - перевод физ лицу,\n    SOLE_PROPRIETOR\
          \ - перевод ИП,\n    TAX - налоговый перевод"
        readOnly: true
        enum:
        - "LEGAL_ENTITY"
        - "BUDGET"
        - "INDIVIDUAL"
        - "SOLE_PROPRIETOR"
        - "TAX"
    title: "TaxPaymentOrderDto"
  TaxPaymentTemplateDto:
    type: "object"
    required:
    - "name"
    properties:
      fingerprint:
        type: "string"
        description: "Хэш набора полей fingerprint, генерируемый на клиенте (web,mobile),\
          \ используемый для передачи в систему Safer Payments"
      name:
        type: "string"
        example: "Перевод СБП"
        description: "Название создаваемого шаблона"
      paymentOrder:
        $ref: "#/definitions/TaxPaymentOrderDto"
      timeTable:
        $ref: "#/definitions/TimeTable"
    title: "TaxPaymentTemplateDto"
  TimeTable:
    type: "object"
    properties:
      dayOfPeriod:
        type: "string"
        description: "День недели или число месяца"
      endDate:
        type: "string"
        format: "date-time"
        description: "Дата окончания выполнения регулярных платежей"
      isLastDayOfPeriod:
        type: "boolean"
        description: "Последний день месяца/недели"
      isTimetable:
        type: "boolean"
        description: "Регулярный - true, false - нет"
      lastPaymentDate:
        type: "string"
        format: "date-time"
        description: "Дата последнего успешного платежа"
      maxCount:
        type: "string"
        description: "День недели или число месяца"
      periodStep:
        type: "string"
        description: "Количество выполнения регулярного платежа. После каждого про\
          ведения регулярного платежа, мы добавляем +1"
      periodType:
        type: "string"
        description: "EVERY_MONTH - каждый месяц и EVERY_WEEK - каждую неделю"
        enum:
        - "EVERY_MONTH"
        - "EVERY_WEEK"
      startDate:
        type: "string"
        format: "date-time"
        description: "Дата начала выполнения регулярных платежей"
    title: "TimeTable"
  UnwatchedInvoicesCategoryDto:
    type: "object"
    properties:
      cetegoryType:
        type: "string"
        description: "Категория"
        enum:
        - "GIBDD"
        - "TAX"
        - "HCS"
      unwatchedInvoices:
        type: "integer"
        format: "int32"
        description: "Количество не просмотренных начислений относящихся именно к\
          \ этой категории"
    title: "UnwatchedInvoicesCategoryDto"
  View:
    type: "object"
    properties:
      contentType:
        type: "string"
    title: "View"
  W4Entity:
    type: "object"
    properties:
      amount:
        type: "string"
        description: "Количество."
      authCode:
        type: "string"
        description: "Код авторизации"
      contractNumberOriginator:
        type: "string"
        description: "Контактный номер отправителя."
      contractNumberReceiver:
        type: "string"
        description: "Контактный номер получателя."
      mcc:
        type: "string"
        description: "Merchant Category Code"
      rrn:
        type: "string"
        description: "Номер РНН"
      vendorName:
        type: "string"
        description: "Имя вендора."
    title: "W4Entity"
